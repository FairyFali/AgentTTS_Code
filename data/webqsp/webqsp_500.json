[
  {
    "QuestionId": "WebQTest-1198",
    "RawQuestion": "who influenced samuel taylor coleridge?",
    "ProcessedQuestion": "who influenced samuel taylor coleridge",
    "Parses": [
      {
        "ParseId": "WebQTest-1198.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.078w2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.078w2 ns:influence.influence_node.influenced_by ?x .\n}\n",
        "PotentialTopicEntityMention": "samuel taylor coleridge",
        "TopicEntityName": "Samuel Taylor Coleridge",
        "TopicEntityMid": "m.078w2",
        "InferentialChain": [
          "influence.influence_node.influenced_by"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015_hb",
            "EntityName": "Giambattista Vico"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015n8",
            "EntityName": "Baruch Spinoza"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.017m4j",
            "EntityName": "Thomas Browne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0182w0",
            "EntityName": "Friedrich Wilhelm Joseph Schelling"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01gnng",
            "EntityName": "Emanuel Swedenborg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03sbs",
            "EntityName": "Immanuel Kant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0448r",
            "EntityName": "John Milton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.081k8",
            "EntityName": "William Shakespeare"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09482",
            "EntityName": "Robert Burns"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nld",
            "EntityName": "Algernon Charles Swinburne"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.078w2": "Samuel Taylor Coleridge"
    },
    "qid_topic_entity": {
      "Q82409": "Samuel Taylor Coleridge"
    },
    "index": 0
  },
  {
    "QuestionId": "WebQTest-1092",
    "RawQuestion": "who did viggo mortensen play in lord of the rings?",
    "ProcessedQuestion": "who did viggo mortensen play in lord of the rings",
    "Parses": [
      {
        "ParseId": "WebQTest-1092.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ps2h8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ps2h8 ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.017gl1 .\n}\n",
        "PotentialTopicEntityMention": "viggo mortensen",
        "TopicEntityName": "Viggo Mortensen",
        "TopicEntityMid": "m.01ps2h8",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.017gl1",
            "EntityName": "The Lord of the Rings: The Fellowship of the Ring",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gwlg",
            "EntityName": "Aragorn"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1092.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ps2h8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ps2h8 ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.017jd9 .\n}\n",
        "PotentialTopicEntityMention": "viggo mortensen",
        "TopicEntityName": "Viggo Mortensen",
        "TopicEntityMid": "m.01ps2h8",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.017jd9",
            "EntityName": "The Lord of the Rings: The Return of the King",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gwlg",
            "EntityName": "Aragorn"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1092.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ps2h8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ps2h8 ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.017gm7 .\n}\n",
        "PotentialTopicEntityMention": "viggo mortensen",
        "TopicEntityName": "Viggo Mortensen",
        "TopicEntityMid": "m.01ps2h8",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.017gm7",
            "EntityName": "The Lord of the Rings: The Two Towers",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gwlg",
            "EntityName": "Aragorn"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1092.P3",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017gl1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017gl1 ns:film.film.starring ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.actor ns:m.01ps2h8 .\n}\n",
        "PotentialTopicEntityMention": "lord of the rings",
        "TopicEntityName": "The Lord of the Rings: The Fellowship of the Ring",
        "TopicEntityMid": "m.017gl1",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01ps2h8",
            "EntityName": "Viggo Mortensen",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.actor",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gwlg",
            "EntityName": "Aragorn"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1092.P4",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017jd9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017jd9 ns:film.film.starring ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.actor ns:m.01ps2h8 .\n}\n",
        "PotentialTopicEntityMention": "lord of the rings",
        "TopicEntityName": "The Lord of the Rings: The Return of the King",
        "TopicEntityMid": "m.017jd9",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01ps2h8",
            "EntityName": "Viggo Mortensen",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.actor",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gwlg",
            "EntityName": "Aragorn"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01ps2h8": "Viggo Mortensen",
      "m.017gl1": "The Lord of the Rings: The Fellowship of the Ring",
      "m.017jd9": "The Lord of the Rings: The Return of the King"
    },
    "qid_topic_entity": {
      "Q171363": "Viggo Mortensen",
      "Q127367": "The Lord of the Rings: The Fellowship of the Ring",
      "Q131074": "The Lord of the Rings: The Return of the King"
    },
    "index": 1
  },
  {
    "QuestionId": "WebQTest-713",
    "RawQuestion": "what county is st. louis park in?",
    "ProcessedQuestion": "what county is st. louis park in",
    "Parses": [
      {
        "ParseId": "WebQTest-713.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0xdhj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0xdhj ns:location.hud_county_place.county ?x .\n}\n",
        "PotentialTopicEntityMention": "st . louis park",
        "TopicEntityName": "St. Louis Park",
        "TopicEntityMid": "m.0xdhj",
        "InferentialChain": [
          "location.hud_county_place.county"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nhmw",
            "EntityName": "Hennepin County"
          }
        ]
      },
      {
        "ParseId": "WebQTest-713.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0xdhj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0xdhj ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
        "PotentialTopicEntityMention": "st . louis park",
        "TopicEntityName": "St. Louis Park",
        "TopicEntityMid": "m.0xdhj",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpym_",
            "EntityName": "US County",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nhmw",
            "EntityName": "Hennepin County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0xdhj": "St. Louis Park"
    },
    "qid_topic_entity": {
      "Q988741": "St. Louis Park"
    },
    "index": 2
  },
  {
    "QuestionId": "WebQTest-1637",
    "RawQuestion": "what are the catholic holy days?",
    "ProcessedQuestion": "what are the catholic holy days",
    "Parses": [
      {
        "ParseId": "WebQTest-1637.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c8wxp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c8wxp ns:religion.religion.holidays ?x .\n}\n",
        "PotentialTopicEntityMention": "catholic",
        "TopicEntityName": "Catholicism",
        "TopicEntityMid": "m.0c8wxp",
        "InferentialChain": [
          "religion.religion.holidays"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kv0v5",
            "EntityName": "Feast of St. Margaret of the \u00c1rp\u00e1d House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kvb49",
            "EntityName": "Feast of Our Lady of Hungary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kvbh6",
            "EntityName": "Feast of Our Lady of the Rosary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_l_d7h",
            "EntityName": "Our Lady of Aparecida's day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_lpd56",
            "EntityName": "Father Damien Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_lsyyw",
            "EntityName": "Our Lady of Guadalupe Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_m1438",
            "EntityName": "St. Spiridon Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_m14vv",
            "EntityName": "Saint Nicholas' Eve"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_mrbts",
            "EntityName": "Feast of Assumption"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011ncb1h",
            "EntityName": "Euthymius the Great's Feast Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011ncyv_",
            "EntityName": "The Feast of Our Lady of Mount Carmel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011nk6vg",
            "EntityName": "St. Anthony's Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011nkz4p",
            "EntityName": "Feast of Our Lady of Sorrows"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0148r6",
            "EntityName": "St Joseph's Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016s_l",
            "EntityName": "Saint Patrick's Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016v69",
            "EntityName": "Maundy Thursday"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cqmf",
            "EntityName": "St. Stephen's Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01v147",
            "EntityName": "Corpus Christi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03nlrrk",
            "EntityName": "Nativity of Mary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0497bm",
            "EntityName": "Olsok"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04mrs1",
            "EntityName": "Feast of the Immaculate Conception"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04qnzg",
            "EntityName": "Feast of the Cross"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04sy0c",
            "EntityName": "Feast of Christ the King"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.058_lf",
            "EntityName": "Name day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0581_5",
            "EntityName": "Fat Thursday"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b22_z",
            "EntityName": "World Day of Peace"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.060_r",
            "EntityName": "Palm Sunday"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0604_c",
            "EntityName": "Saints Cyril and Methodius Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cpnkn",
            "EntityName": "Solemnity of Mary, Mother of God"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dsq86",
            "EntityName": "Feast of Saints Peter and Paul"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f6l2j",
            "EntityName": "St Crispin's Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fdm1h",
            "EntityName": "St Casimir's Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k0c",
            "EntityName": "All Saints' Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k5y347",
            "EntityName": "Feast of St Francis of Assisi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n_fbc8",
            "EntityName": "St Nicholas Day"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0c8wxp": "Catholicism"
    },
    "qid_topic_entity": {
      "Q1841": "Catholicism"
    },
    "index": 3
  },
  {
    "QuestionId": "WebQTest-1241",
    "RawQuestion": "where does the columbia river start?",
    "ProcessedQuestion": "where does the columbia river start",
    "Parses": [
      {
        "ParseId": "WebQTest-1241.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01n86)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01n86 ns:geography.river.origin ?x .\n}\n",
        "PotentialTopicEntityMention": "columbia river",
        "TopicEntityName": "Columbia River",
        "TopicEntityMid": "m.01n86",
        "InferentialChain": [
          "geography.river.origin"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r8kvz",
            "EntityName": "Columbia Lake"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01n86": "Columbia River"
    },
    "qid_topic_entity": {
      "Q2251": "Columbia River"
    },
    "index": 4
  },
  {
    "QuestionId": "WebQTest-377",
    "RawQuestion": "what school did michael jordan attend?",
    "ProcessedQuestion": "what school did michael jordan attend",
    "Parses": [
      {
        "ParseId": "WebQTest-377.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.054c1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.054c1 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "michael jordan",
        "TopicEntityName": "Michael Jordan",
        "TopicEntityMid": "m.054c1",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07qymj",
            "EntityName": "Emsley A. Laney High School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bx8pn",
            "EntityName": "University of North Carolina at Chapel Hill"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.054c1": "Michael Jordan"
    },
    "qid_topic_entity": {
      "Q41421": "Michael Jordan"
    },
    "index": 5
  },
  {
    "QuestionId": "WebQTest-1488",
    "RawQuestion": "what type of art does marc chagall do?",
    "ProcessedQuestion": "what type of art does marc chagall do",
    "Parses": [
      {
        "ParseId": "WebQTest-1488.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g_j0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g_j0 ns:visual_art.visual_artist.associated_periods_or_movements ?x .\n}\n",
        "PotentialTopicEntityMention": "marc chagall",
        "TopicEntityName": "Marc Chagall",
        "TopicEntityMid": "m.0g_j0",
        "InferentialChain": [
          "visual_art.visual_artist.associated_periods_or_movements"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015r61",
            "EntityName": "Modern art"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lx1",
            "EntityName": "Fauvism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.073_6",
            "EntityName": "Surrealism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09ff3",
            "EntityName": "Cubism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pybl",
            "EntityName": "Expressionism"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0g_j0": "Marc Chagall"
    },
    "qid_topic_entity": {
      "Q93284": "Marc Chagall"
    },
    "index": 6
  },
  {
    "QuestionId": "WebQTest-383",
    "RawQuestion": "what language do chinese people write in?",
    "ProcessedQuestion": "what language do chinese people write in",
    "Parses": [
      {
        "ParseId": "WebQTest-383.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01r2l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01r2l ns:language.human_language.writing_system ?x .\n}\n",
        "PotentialTopicEntityMention": "chinese",
        "TopicEntityName": "Chinese language",
        "TopicEntityMid": "m.01r2l",
        "InferentialChain": [
          "language.human_language.writing_system"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014lbg",
            "EntityName": "N\u00fcshu script"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01mw7r",
            "EntityName": "Simplified Chinese character"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nf5z",
            "EntityName": "Traditional Chinese characters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050fyz",
            "EntityName": "'Phags-pa script"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0mmzb",
            "EntityName": "Chinese characters"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01r2l": "Chinese language"
    },
    "qid_topic_entity": {
      "Q7850": "Chinese language"
    },
    "index": 7
  },
  {
    "QuestionId": "WebQTest-1619",
    "RawQuestion": "where do the appalachian mountains run?",
    "ProcessedQuestion": "where do the appalachian mountains run",
    "Parses": [
      {
        "ParseId": "WebQTest-1619.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "lots of other predicates are equally fine: contains, mountains, partially contained by, etc."
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lm0n)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lm0n ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "appalachian mountains",
        "TopicEntityName": "Appalachian Mountains",
        "TopicEntityMid": "m.0lm0n",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059g4",
            "EntityName": "North America"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0lm0n": "Appalachian Mountains"
    },
    "qid_topic_entity": {
      "Q93332": "Appalachian Mountains"
    },
    "index": 8
  },
  {
    "QuestionId": "WebQTest-1508",
    "RawQuestion": "when did bill clinton go to college?",
    "ProcessedQuestion": "when did bill clinton go to college",
    "Parses": [
      {
        "ParseId": "WebQTest-1508.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0157m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0157m ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "bill clinton",
        "TopicEntityName": "Bill Clinton",
        "TopicEntityMid": "m.0157m",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bq1j",
            "EntityName": "Yale Law School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ckl3",
            "EntityName": "Edmund A. Walsh School of Foreign Service"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07tgn",
            "EntityName": "University of Oxford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08815",
            "EntityName": "University Yale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pspl",
            "EntityName": "Georgetown University"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ymf1",
            "EntityName": "University College, Oxford"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0157m": "Bill Clinton"
    },
    "qid_topic_entity": {
      "Q1124": "Bill Clinton"
    },
    "index": 9
  },
  {
    "QuestionId": "WebQTest-266",
    "RawQuestion": "what is there to do for fun in kansas city?",
    "ProcessedQuestion": "what is there to do for fun in kansas city",
    "Parses": [
      {
        "ParseId": "WebQTest-266.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04f_d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04f_d ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "kansas city",
        "TopicEntityName": "Kansas City",
        "TopicEntityMid": "m.04f_d",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02665lb",
            "EntityName": "Kansas City Zoo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026g4b1",
            "EntityName": "Kauffman Center for the Performing Arts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rccg",
            "EntityName": "18th and Vine-Downtown East"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0321ly",
            "EntityName": "Kemper Museum of Contemporary Art"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03n2sf",
            "EntityName": "Liberty Memorial"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03p0kv",
            "EntityName": "Harry S. Truman Presidential Library and Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wglg",
            "EntityName": "Crown Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065tqj",
            "EntityName": "Worlds of Fun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06rchd",
            "EntityName": "Sprint Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0724nn",
            "EntityName": "Negro Leagues Baseball Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.075m4m",
            "EntityName": "Boulevard Brewing Company"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08c_14",
            "EntityName": "Oceans of Fun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cnyls8",
            "EntityName": "Hotel Phillips"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gfgk80",
            "EntityName": "Deer Creek Golf Course"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jyw372",
            "EntityName": "Ewing and Muriel Kauffman Memorial Garden"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04f_d": "Kansas City"
    },
    "qid_topic_entity": {
      "Q41819": "Kansas City"
    },
    "index": 10
  },
  {
    "QuestionId": "WebQTest-191",
    "RawQuestion": "where did drew brees go to college wikianswers?",
    "ProcessedQuestion": "where did drew brees go to college wikianswers",
    "Parses": [
      {
        "ParseId": "WebQTest-191.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.030bdd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.030bdd ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "drew brees",
        "TopicEntityName": "Drew Brees",
        "TopicEntityMid": "m.030bdd",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bb47",
            "EntityName": "Stanford Graduate School of Business"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05x_5",
            "EntityName": "Purdue University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.030bdd": "Drew Brees"
    },
    "qid_topic_entity": {
      "Q38952": "Drew Brees"
    },
    "index": 11
  },
  {
    "QuestionId": "WebQTest-554",
    "RawQuestion": "what money do they use in spain?",
    "ProcessedQuestion": "what money do they use in spain",
    "Parses": [
      {
        "ParseId": "WebQTest-554.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mkj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mkj ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "spain",
        "TopicEntityName": "Spain",
        "TopicEntityMid": "m.06mkj",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02l6h",
            "EntityName": "Euro"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06mkj": "Spain"
    },
    "qid_topic_entity": {
      "Q29": "Spain"
    },
    "index": 12
  },
  {
    "QuestionId": "WebQTest-637",
    "RawQuestion": "what type of government did soviet union have?",
    "ProcessedQuestion": "what type of government did soviet union have",
    "Parses": [
      {
        "ParseId": "WebQTest-637.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05vz3zq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05vz3zq ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "soviet union",
        "TopicEntityName": "Soviet Union",
        "TopicEntityMid": "m.05vz3zq",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fkst",
            "EntityName": "Communist state"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025tbxf",
            "EntityName": "Socialist state"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06zgbt",
            "EntityName": "Soviet democracy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0glnsx",
            "EntityName": "Parliamentary republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05vz3zq": "Soviet Union"
    },
    "qid_topic_entity": {
      "Q15180": "Soviet Union"
    },
    "index": 13
  },
  {
    "QuestionId": "WebQTest-875",
    "RawQuestion": "where did hugo chavez go to school?",
    "ProcessedQuestion": "where did hugo chavez go to school",
    "Parses": [
      {
        "ParseId": "WebQTest-875.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d1b_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d1b_ ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "hugo chavez",
        "TopicEntityName": "Hugo Ch\u00e1vez",
        "TopicEntityMid": "m.0d1b_",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0467r_n",
            "EntityName": "Julian Pino School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0467s09",
            "EntityName": "Daniel Florencio O'Leary School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04fc47",
            "EntityName": "Sim\u00f3n Bol\u00edvar University"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08fk_z",
            "EntityName": "Bolivarian Military University of Venezuela"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d1b_": "Hugo Ch\u00e1vez"
    },
    "qid_topic_entity": {
      "Q8440": "Hugo Ch\u00e1vez"
    },
    "index": 14
  },
  {
    "QuestionId": "WebQTest-438",
    "RawQuestion": "what university did romney graduated from?",
    "ProcessedQuestion": "what university did romney graduated from",
    "Parses": [
      {
        "ParseId": "WebQTest-438.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "?? undergraduate or higher degree?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0271_s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0271_s ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?y ns:education.education.degree ns:m.014mlp .\n}\n",
        "PotentialTopicEntityMention": "romney",
        "TopicEntityName": "Mitt Romney",
        "TopicEntityMid": "m.0271_s",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.014mlp",
            "EntityName": "Bachelor of Arts",
            "SourceNodeIndex": 0,
            "NodePredicate": "education.education.degree",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0l2tk",
            "EntityName": "Brigham Young University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0271_s": "Mitt Romney"
    },
    "qid_topic_entity": {
      "Q4496": "Mitt Romney"
    },
    "index": 15
  },
  {
    "QuestionId": "WebQTest-234",
    "RawQuestion": "what countries does the panama canal go through?",
    "ProcessedQuestion": "what countries does the panama canal go through",
    "Parses": [
      {
        "ParseId": "WebQTest-234.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.066rl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.066rl ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n}\n",
        "PotentialTopicEntityMention": "panama canal",
        "TopicEntityName": "Panama Canal",
        "TopicEntityMid": "m.066rl",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01mp",
            "EntityName": "Country",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qx1",
            "EntityName": "Panama"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.066rl": "Panama Canal"
    },
    "qid_topic_entity": {
      "Q7350": "Panama Canal"
    },
    "index": 16
  },
  {
    "QuestionId": "WebQTest-461",
    "RawQuestion": "where did clay matthews go to school?",
    "ProcessedQuestion": "where did clay matthews go to school",
    "Parses": [
      {
        "ParseId": "WebQTest-461.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04zy7pw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04zy7pw ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "clay matthews",
        "TopicEntityName": "Clay Matthews III",
        "TopicEntityMid": "m.04zy7pw",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065y4w7",
            "EntityName": "University of Southern California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06w97y",
            "EntityName": "Agoura High School"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04zy7pw": "Clay Matthews III"
    },
    "qid_topic_entity": {
      "Q390698": "Clay Matthews III"
    },
    "index": 17
  },
  {
    "QuestionId": "WebQTest-1441",
    "RawQuestion": "where all did picasso live?",
    "ProcessedQuestion": "where all did picasso live",
    "Parses": [
      {
        "ParseId": "WebQTest-1441.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.060_7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.060_7 ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n",
        "PotentialTopicEntityMention": "picasso",
        "TopicEntityName": "Pablo Picasso",
        "TopicEntityMid": "m.060_7",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01978d",
            "EntityName": "M\u00e1laga"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.056_y",
            "EntityName": "Madrid"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f8l9c",
            "EntityName": "France"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.060_7": "Pablo Picasso"
    },
    "qid_topic_entity": {
      "Q5593": "Pablo Picasso"
    },
    "index": 18
  },
  {
    "QuestionId": "WebQTest-1622",
    "RawQuestion": "what ocean is around hawaii?",
    "ProcessedQuestion": "what ocean is around hawaii",
    "Parses": [
      {
        "ParseId": "WebQTest-1622.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jbt3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jbt3 ns:geography.island.body_of_water ?x .\n}\n",
        "PotentialTopicEntityMention": "hawaii",
        "TopicEntityName": "Hawaii",
        "TopicEntityMid": "m.0jbt3",
        "InferentialChain": [
          "geography.island.body_of_water"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05rgl",
            "EntityName": "Pacific Ocean"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1622.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gh4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gh4 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.01y2jks .\n}\n",
        "PotentialTopicEntityMention": "hawaii",
        "TopicEntityName": "Hawaii",
        "TopicEntityMid": "m.03gh4",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2jks",
            "EntityName": "Body Of Water",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05rgl",
            "EntityName": "Pacific Ocean"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jbt3": "Hawaii",
      "m.03gh4": "Hawaii"
    },
    "qid_topic_entity": {
      "Q68740": "Hawaii",
      "Q782": "Hawaii"
    },
    "index": 19
  },
  {
    "QuestionId": "WebQTest-1757",
    "RawQuestion": "what did michael crabtree do?",
    "ProcessedQuestion": "what did michael crabtree do",
    "Parses": [
      {
        "ParseId": "WebQTest-1757.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ccsym)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ccsym ns:american_football.football_player.position_s ?x .\n}\n",
        "PotentialTopicEntityMention": "michael crabtree",
        "TopicEntityName": "Michael Crabtree",
        "TopicEntityMid": "m.03ccsym",
        "InferentialChain": [
          "american_football.football_player.position_s"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02g_6x",
            "EntityName": "Wide receiver"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1757.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ccsym)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ccsym ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "michael crabtree",
        "TopicEntityName": "Michael Crabtree",
        "TopicEntityMid": "m.03ccsym",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01445t",
            "EntityName": "Athlete"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h665k",
            "EntityName": "American football player"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1757.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ccsym)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ccsym ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.position ?x .\n}\n",
        "PotentialTopicEntityMention": "michael crabtree",
        "TopicEntityName": "Michael Crabtree",
        "TopicEntityMid": "m.03ccsym",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.position"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02g_6x",
            "EntityName": "Wide receiver"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03ccsym": "Michael Crabtree"
    },
    "qid_topic_entity": {
      "Q2351787": "Michael Crabtree"
    },
    "index": 20
  },
  {
    "QuestionId": "WebQTest-1328",
    "RawQuestion": "what did hayes do?",
    "ProcessedQuestion": "what did hayes do",
    "Parses": [
      {
        "ParseId": "WebQTest-1328.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06g42)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06g42 ns:common.topic.notable_for ?y .\n?y ns:common.notable_for.object ?x .\n}\n",
        "PotentialTopicEntityMention": "hayes",
        "TopicEntityName": "Rutherford B. Hayes",
        "TopicEntityMid": "m.06g42",
        "InferentialChain": [
          "common.topic.notable_for",
          "common.notable_for.object"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01xljv7",
            "EntityName": "US President"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06g42": "Rutherford B. Hayes"
    },
    "qid_topic_entity": {
      "Q35686": "Rutherford B. Hayes"
    },
    "index": 21
  },
  {
    "QuestionId": "WebQTest-296",
    "RawQuestion": "what kind of government does libya have today?",
    "ProcessedQuestion": "what kind of government does libya have today",
    "Parses": [
      {
        "ParseId": "WebQTest-296.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04gqr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04gqr ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "libya",
        "TopicEntityName": "Libya",
        "TopicEntityMid": "m.04gqr",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02tz3y",
            "EntityName": "Provisional government"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0glnsx",
            "EntityName": "Parliamentary republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04gqr": "Libya"
    },
    "qid_topic_entity": {
      "Q1016": "Libya"
    },
    "index": 22
  },
  {
    "QuestionId": "WebQTest-527",
    "RawQuestion": "what country borders slovakia?",
    "ProcessedQuestion": "what country borders slovakia",
    "Parses": [
      {
        "ParseId": "WebQTest-527.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06npd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06npd ns:location.location.adjoin_s ?y .\n?y ns:location.adjoining_relationship.adjoins ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n}\n",
        "PotentialTopicEntityMention": "slovakia",
        "TopicEntityName": "Slovakia",
        "TopicEntityMid": "m.06npd",
        "InferentialChain": [
          "location.location.adjoin_s",
          "location.adjoining_relationship.adjoins"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01mp",
            "EntityName": "Country",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01mjq",
            "EntityName": "Czech Republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gj2",
            "EntityName": "Hungary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qhw",
            "EntityName": "Poland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07t21",
            "EntityName": "Ukraine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h7x",
            "EntityName": "Austria"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06npd": "Slovakia"
    },
    "qid_topic_entity": {
      "Q214": "Slovakia"
    },
    "index": 23
  },
  {
    "QuestionId": "WebQTest-2001",
    "RawQuestion": "who won the 2000 fa cup final?",
    "ProcessedQuestion": "who won the 2000 fa cup final",
    "Parses": [
      {
        "ParseId": "WebQTest-2001.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_p0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_p0 ns:sports.sports_award_type.winners ?y .\n?y ns:sports.sports_award.award_winner ?x .\n?y ns:sports.sports_award.season ns:m.03wcq72 .\n}\n",
        "PotentialTopicEntityMention": "fa cup",
        "TopicEntityName": "FA Cup",
        "TopicEntityMid": "m.02_p0",
        "InferentialChain": [
          "sports.sports_award_type.winners",
          "sports.sports_award.award_winner"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.03wcq72",
            "EntityName": "1999\u20132000 FA Cup",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_award.season",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.023fb",
            "EntityName": "Chelsea F.C."
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02_p0": "FA Cup"
    },
    "qid_topic_entity": {
      "Q11151": "FA Cup"
    },
    "index": 24
  },
  {
    "QuestionId": "WebQTest-1997",
    "RawQuestion": "who does owen schmitt play for?",
    "ProcessedQuestion": "who does owen schmitt play for",
    "Parses": [
      {
        "ParseId": "WebQTest-1997.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027rvyc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027rvyc ns:american_football.football_player.games ?y .\n?y ns:american_football.player_game_statistics.team ?x .\n}\n",
        "PotentialTopicEntityMention": "owen schmitt",
        "TopicEntityName": "Owen Schmitt",
        "TopicEntityMid": "m.027rvyc",
        "InferentialChain": [
          "american_football.football_player.games",
          "american_football.player_game_statistics.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.070xg",
            "EntityName": "Seattle Seahawks"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1997.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027rvyc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027rvyc ns:american_football.football_player.receiving ?y .\n?y ns:american_football.player_receiving_statistics.team ?x .\n}\n",
        "PotentialTopicEntityMention": "owen schmitt",
        "TopicEntityName": "Owen Schmitt",
        "TopicEntityMid": "m.027rvyc",
        "InferentialChain": [
          "american_football.football_player.receiving",
          "american_football.player_receiving_statistics.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.070xg",
            "EntityName": "Seattle Seahawks"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1997.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027rvyc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027rvyc ns:american_football.football_player.rushing ?y .\n?y ns:american_football.player_rushing_statistics.team ?x .\n}\n",
        "PotentialTopicEntityMention": "owen schmitt",
        "TopicEntityName": "Owen Schmitt",
        "TopicEntityMid": "m.027rvyc",
        "InferentialChain": [
          "american_football.football_player.rushing",
          "american_football.player_rushing_statistics.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.070xg",
            "EntityName": "Seattle Seahawks"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.027rvyc": "Owen Schmitt"
    },
    "qid_topic_entity": {
      "Q3887743": "Owen Schmitt"
    },
    "index": 25
  },
  {
    "QuestionId": "WebQTest-1848",
    "RawQuestion": "what instrument does louis armstrong?",
    "ProcessedQuestion": "what instrument does louis armstrong",
    "Parses": [
      {
        "ParseId": "WebQTest-1848.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04n32)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04n32 ns:music.group_member.instruments_played ?x .\n}\n",
        "PotentialTopicEntityMention": "louis armstrong",
        "TopicEntityName": "Louis Armstrong",
        "TopicEntityMid": "m.04n32",
        "InferentialChain": [
          "music.group_member.instruments_played"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020w2",
            "EntityName": "Cornet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07gql",
            "EntityName": "Trumpet"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04n32": "Louis Armstrong"
    },
    "qid_topic_entity": {
      "Q1779": "Louis Armstrong"
    },
    "index": 26
  },
  {
    "QuestionId": "WebQTest-482",
    "RawQuestion": "who plays blaine in batman?",
    "ProcessedQuestion": "who plays blaine in batman",
    "Parses": [
      {
        "ParseId": "WebQTest-482.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: F Union. Original comment: F not clear what blaine refers too or what batman"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n\t{ \n\tns:m.0321b4 ns:film.film_character.portrayed_in_films ?y .\n\t?y ns:film.performance.actor ?x .\n\t}\n\tUNION\n\t{\n\tns:m.0321b4 ns:tv.tv_character.appeared_in_tv_program ?y .\n\t?y ns:tv.regular_tv_appearance.actor ?x .\n\t}\n}",
        "PotentialTopicEntityMention": "batman",
        "TopicEntityName": "Batman",
        "TopicEntityMid": "m.01hp5",
        "InferentialChain": null,
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0115x7ps",
            "EntityName": "Matthew Wagner"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01xllf",
            "EntityName": "Danny Trejo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hblj",
            "EntityName": "Carlos Alazraqui"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05xf75",
            "EntityName": "Tom Hardy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01hp5": "Batman"
    },
    "qid_topic_entity": {
      "Q116852": "Batman"
    },
    "index": 27
  },
  {
    "QuestionId": "WebQTest-1780",
    "RawQuestion": "who does michael oher play for in 2010?",
    "ProcessedQuestion": "who does michael oher play for in 2010",
    "Parses": [
      {
        "ParseId": "WebQTest-1780.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h7q7b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h7q7b ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2010-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2010-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "michael oher",
        "TopicEntityName": "Michael Oher",
        "TopicEntityMid": "m.0h7q7b",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2010-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2010-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2010-01-01",
          "End": "2010-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "2010"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01ct6",
            "EntityName": "Baltimore Ravens"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0h7q7b": "Michael Oher"
    },
    "qid_topic_entity": {
      "Q977601": "Michael Oher"
    },
    "index": 28
  },
  {
    "QuestionId": "WebQTest-504",
    "RawQuestion": "who was philip in acts chapter 8?",
    "ProcessedQuestion": "who was philip in acts chapter 8",
    "Parses": [
      {
        "ParseId": "WebQTest-504.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? "
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012tjy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012tjy ns:fictional_universe.person_in_fiction.representations_in_fiction ?x .\n}\n",
        "PotentialTopicEntityMention": "philip",
        "TopicEntityName": "Philip the Apostle",
        "TopicEntityMid": "m.012tjy",
        "InferentialChain": [
          "fictional_universe.person_in_fiction.representations_in_fiction"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.075pg8m",
            "EntityName": "Apostle Philip"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.012tjy": "Philip the Apostle"
    },
    "qid_topic_entity": {
      "Q43675": "Philip the Apostle"
    },
    "index": 29
  },
  {
    "QuestionId": "WebQTest-410",
    "RawQuestion": "what are the major cities in ukraine?",
    "ProcessedQuestion": "what are the major cities in ukraine",
    "Parses": [
      {
        "ParseId": "WebQTest-410.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07t21)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07t21 ns:location.country.capital ?x .\n}\n",
        "PotentialTopicEntityMention": "ukraine",
        "TopicEntityName": "Ukraine",
        "TopicEntityMid": "m.07t21",
        "InferentialChain": [
          "location.country.capital"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02sn34",
            "EntityName": "Kiev"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07t21": "Ukraine"
    },
    "qid_topic_entity": {
      "Q212": "Ukraine"
    },
    "index": 30
  },
  {
    "QuestionId": "WebQTest-2005",
    "RawQuestion": "who plays bob kelso in scrubs?",
    "ProcessedQuestion": "who plays bob kelso in scrubs",
    "Parses": [
      {
        "ParseId": "WebQTest-2005.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ck2ty)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ck2ty ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.series ns:m.01fs__ .\n}\n",
        "PotentialTopicEntityMention": "bob kelso",
        "TopicEntityName": "Bob Kelso",
        "TopicEntityMid": "m.0ck2ty",
        "InferentialChain": [
          "tv.tv_character.appeared_in_tv_program",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01fs__",
            "EntityName": "Scrubs",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.series",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07w8hh",
            "EntityName": "Ken Jenkins"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ck2ty": "Bob Kelso"
    },
    "qid_topic_entity": {
      "Q2532197": "Bob Kelso"
    },
    "index": 31
  },
  {
    "QuestionId": "WebQTest-1894",
    "RawQuestion": "what baseball team was jackie robinson on?",
    "ProcessedQuestion": "what baseball team was jackie robinson on",
    "Parses": [
      {
        "ParseId": "WebQTest-1894.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0443c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0443c ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n?x ns:sports.sports_team.sport ns:m.018jz .\n}\n",
        "PotentialTopicEntityMention": "jackie robinson",
        "TopicEntityName": "Jackie Robinson",
        "TopicEntityMid": "m.0443c",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.018jz",
            "EntityName": "Baseball",
            "SourceNodeIndex": 1,
            "NodePredicate": "sports.sports_team.sport",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_cjl",
            "EntityName": "Kansas City Monarchs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_wkh",
            "EntityName": "Montreal Royals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05fc8c9",
            "EntityName": "Brooklyn Dodgers"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0443c": "Jackie Robinson"
    },
    "qid_topic_entity": {
      "Q221048": "Jackie Robinson"
    },
    "index": 32
  },
  {
    "QuestionId": "WebQTest-1303",
    "RawQuestion": "what other movies is josh hutcherson in?",
    "ProcessedQuestion": "what other movies is josh hutcherson in",
    "Parses": [
      {
        "ParseId": "WebQTest-1303.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08wjf4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08wjf4 ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "josh hutcherson",
        "TopicEntityName": "Josh Hutchersonm",
        "TopicEntityMid": "m.08wjf4",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.11b7k0v3hq",
            "EntityName": "In Dubious Battle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0135_65p",
            "EntityName": "The Long Home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026gt8b",
            "EntityName": "Bridge to Terabithia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0270k40",
            "EntityName": "Cirque du Freak: The Vampire's Assistant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q02ql",
            "EntityName": "Firehouse Dog"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qd6h2",
            "EntityName": "Winged Creatures"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047qh9b",
            "EntityName": "Party Wagon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f8ttb",
            "EntityName": "Journey to the Center of the Earth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j0_gm",
            "EntityName": "One Last Ride"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j1g18",
            "EntityName": "Wilder Days"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j1phy",
            "EntityName": "Miracle Dogs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05spvb",
            "EntityName": "Kicking & Screaming"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07sbq6c",
            "EntityName": "Red Dawn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07y296",
            "EntityName": "Motocross Kids"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09qs_s",
            "EntityName": "Zathura"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09tqkv2",
            "EntityName": "The Kids Are All Right"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09v9dsq",
            "EntityName": "The Forger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09w6br",
            "EntityName": "The Polar Express"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bcs_f",
            "EntityName": "RV"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crnh6",
            "EntityName": "Little Manhattan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ds2_k2",
            "EntityName": "Journey 2: The Mysterious Island"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dzz6g",
            "EntityName": "American Splendor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g4tknw",
            "EntityName": "Detention"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gkp_k",
            "EntityName": "House Blend"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gkz15s",
            "EntityName": "The Hunger Games"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gy8kqb",
            "EntityName": "7 Days in Havana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gy8kv2",
            "EntityName": "The Third Rule"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hhgh69",
            "EntityName": "Epic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n40qmp",
            "EntityName": "The Hunger Games: Catching Fire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ngvsvk",
            "EntityName": "The Hunger Games: Mockingjay, Part 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ngvtb_",
            "EntityName": "The Hunger Games: Mockingjay, Part 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0x1xc_w",
            "EntityName": "Escobar: Paradise Lost"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.08wjf4": "Josh Hutchersonm"
    },
    "qid_topic_entity": {
      "Q217004": "Josh Hutchersonm"
    },
    "index": 33
  },
  {
    "QuestionId": "WebQTest-1017",
    "RawQuestion": "who plays charlie in the santa clause movies?",
    "ProcessedQuestion": "who plays charlie in the santa clause movies",
    "Parses": [
      {
        "ParseId": "WebQTest-1017.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0129g2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0129g2 ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0dlsybb .\n}\n",
        "PotentialTopicEntityMention": "the santa clause",
        "TopicEntityName": "The Santa Clause",
        "TopicEntityMid": "m.0129g2",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0dlsybb",
            "EntityName": "Charlie Calvin",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d7whx",
            "EntityName": "Eric Lloyd"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0129g2": "The Santa Clause"
    },
    "qid_topic_entity": {
      "Q497850": "The Santa Clause"
    },
    "index": 34
  },
  {
    "QuestionId": "WebQTest-1526",
    "RawQuestion": "how many languages do they speak in switzerland?",
    "ProcessedQuestion": "how many languages do they speak in switzerland",
    "Parses": [
      {
        "ParseId": "WebQTest-1526.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mzp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mzp ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "switzerland",
        "TopicEntityName": "Switzerland",
        "TopicEntityMid": "m.06mzp",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bjrlw",
            "EntityName": "Italian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04306rv",
            "EntityName": "German Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064_8sq",
            "EntityName": "French"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ctk",
            "EntityName": "Romansh language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1526.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mzp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mzp ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "switzerland",
        "TopicEntityName": "Switzerland",
        "TopicEntityMid": "m.06mzp",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bjrlw",
            "EntityName": "Italian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04306rv",
            "EntityName": "German Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064_8sq",
            "EntityName": "French"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ctk",
            "EntityName": "Romansh language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06mzp": "Switzerland"
    },
    "qid_topic_entity": {
      "Q39": "Switzerland"
    },
    "index": 35
  },
  {
    "QuestionId": "WebQTest-634",
    "RawQuestion": "what county is san antonio in?",
    "ProcessedQuestion": "what county is san antonio in",
    "Parses": [
      {
        "ParseId": "WebQTest-634.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2w0 ns:location.hud_county_place.county ?x .\n}\n",
        "PotentialTopicEntityMention": "san antonio",
        "TopicEntityName": "San Antonio",
        "TopicEntityMid": "m.0f2w0",
        "InferentialChain": [
          "location.hud_county_place.county"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ms5v",
            "EntityName": "Comal County"
          }
        ]
      },
      {
        "ParseId": "WebQTest-634.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2w0 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
        "PotentialTopicEntityMention": "san antonio",
        "TopicEntityName": "San Antonio",
        "TopicEntityMid": "m.0f2w0",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpym_",
            "EntityName": "US County",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0mqr8",
            "EntityName": "Medina County"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ms5v",
            "EntityName": "Comal County"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0mskq",
            "EntityName": "Bexar County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f2w0": "San Antonio"
    },
    "qid_topic_entity": {
      "Q975": "San Antonio"
    },
    "index": 36
  },
  {
    "QuestionId": "WebQTest-698",
    "RawQuestion": "who is robin roberts father?",
    "ProcessedQuestion": "who is robin roberts father",
    "Parses": [
      {
        "ParseId": "WebQTest-698.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06k3_t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06k3_t ns:people.person.parents ?x .\n?x ns:people.person.gender ns:m.05zppz .\n}\n",
        "PotentialTopicEntityMention": "robin roberts",
        "TopicEntityName": "Robin Roberts",
        "TopicEntityMid": "m.06k3_t",
        "InferentialChain": [
          "people.person.parents"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.05zppz",
            "EntityName": "Male",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.person.gender",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0czc1yg",
            "EntityName": "Lawrence E. Roberts"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06k3_t": "Robin Roberts"
    },
    "qid_topic_entity": {
      "Q2041541": "Robin Roberts"
    },
    "index": 37
  },
  {
    "QuestionId": "WebQTest-1708",
    "RawQuestion": "what are dallas cowboys colors?",
    "ProcessedQuestion": "what are dallas cowboys colors",
    "Parses": [
      {
        "ParseId": "WebQTest-1708.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02896)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02896 ns:sports.sports_team.colors ?x .\n}\n",
        "PotentialTopicEntityMention": "dallas cowboys",
        "TopicEntityName": "Dallas Cowboys",
        "TopicEntityMid": "m.02896",
        "InferentialChain": [
          "sports.sports_team.colors"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01g5v",
            "EntityName": "Blue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rnmb",
            "EntityName": "Navy Blue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03vtbc",
            "EntityName": "Silver"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06kqt3",
            "EntityName": "Royal blue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.083jv",
            "EntityName": "White"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02896": "Dallas Cowboys"
    },
    "qid_topic_entity": {
      "Q204862": "Dallas Cowboys"
    },
    "index": 38
  },
  {
    "QuestionId": "WebQTest-1990",
    "RawQuestion": "who plays timon's voice in the lion king?",
    "ProcessedQuestion": "who plays timon 's voice in the lion king",
    "Parses": [
      {
        "ParseId": "WebQTest-1990.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0m63c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0m63c ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0c31r0 .\n}\n",
        "PotentialTopicEntityMention": "the lion king",
        "TopicEntityName": "The Lion King",
        "TopicEntityMid": "m.0m63c",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0c31r0",
            "EntityName": "Timon",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nxzv",
            "EntityName": "Nathan Lane"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0m63c": "The Lion King"
    },
    "qid_topic_entity": {
      "Q36479": "The Lion King"
    },
    "index": 39
  },
  {
    "QuestionId": "WebQTest-163",
    "RawQuestion": "what year did the seahawks win the superbowl?",
    "ProcessedQuestion": "what year did the seahawks win the superbowl",
    "Parses": [
      {
        "ParseId": "WebQTest-163.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.070xg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.070xg ns:sports.sports_team.championships ?x .\n?x ns:time.event.instance_of_recurring_event ns:m.06x5s .\n}\n",
        "PotentialTopicEntityMention": "seahawks",
        "TopicEntityName": "Seattle Seahawks",
        "TopicEntityMid": "m.070xg",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.06x5s",
            "EntityName": "Super Bowl",
            "SourceNodeIndex": 0,
            "NodePredicate": "time.event.instance_of_recurring_event",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09k4qg3",
            "EntityName": "Super Bowl XLVIII"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.070xg": "Seattle Seahawks"
    },
    "qid_topic_entity": {
      "Q221878": "Seattle Seahawks"
    },
    "index": 40
  },
  {
    "QuestionId": "WebQTest-1566",
    "RawQuestion": "what kind of guitar john mayer?",
    "ProcessedQuestion": "what kind of guitar john mayer",
    "Parses": [
      {
        "ParseId": "WebQTest-1566.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01s21dg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01s21dg ns:music.guitarist.guitars_played ?x .\n}\n",
        "PotentialTopicEntityMention": "john mayer",
        "TopicEntityName": "John Mayer",
        "TopicEntityMid": "m.01s21dg",
        "InferentialChain": [
          "music.guitarist.guitars_played"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02m873",
            "EntityName": "Fender Stratocaster"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01s21dg": "John Mayer"
    },
    "qid_topic_entity": {
      "Q215215": "John Mayer"
    },
    "index": 41
  },
  {
    "QuestionId": "WebQTest-1614",
    "RawQuestion": "what religion was king louis xiv?",
    "ProcessedQuestion": "what religion was king louis xiv",
    "Parses": [
      {
        "ParseId": "WebQTest-1614.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04pwg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04pwg ns:people.person.religion ?x .\n}\n",
        "PotentialTopicEntityMention": "king louis xiv",
        "TopicEntityName": "Louis XIV of France",
        "TopicEntityMid": "m.04pwg",
        "InferentialChain": [
          "people.person.religion"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c8wxp",
            "EntityName": "Catholicism"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04pwg": "Louis XIV of France"
    },
    "qid_topic_entity": {
      "Q7742": "Louis XIV of France"
    },
    "index": 42
  },
  {
    "QuestionId": "WebQTest-1533",
    "RawQuestion": "what planet did luke skywalker came from?",
    "ProcessedQuestion": "what planet did luke skywalker came from",
    "Parses": [
      {
        "ParseId": "WebQTest-1533.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f1bg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f1bg ns:fictional_universe.fictional_character.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "luke skywalker",
        "TopicEntityName": "Luke Skywalker",
        "TopicEntityMid": "m.0f1bg",
        "InferentialChain": [
          "fictional_universe.fictional_character.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.120mc0gk",
            "EntityName": "Polis Massa"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f1bg": "Luke Skywalker"
    },
    "qid_topic_entity": {
      "Q51746": "Luke Skywalker"
    },
    "index": 43
  },
  {
    "QuestionId": "WebQTest-1470",
    "RawQuestion": "what kind of government does poland have?",
    "ProcessedQuestion": "what kind of government does poland have",
    "Parses": [
      {
        "ParseId": "WebQTest-1470.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05qhw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05qhw ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "poland",
        "TopicEntityName": "Poland",
        "TopicEntityMid": "m.05qhw",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026wp",
            "EntityName": "Democracy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0glnsx",
            "EntityName": "Parliamentary republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05qhw": "Poland"
    },
    "qid_topic_entity": {
      "Q36": "Poland"
    },
    "index": 44
  },
  {
    "QuestionId": "WebQTest-1557",
    "RawQuestion": "where do florida panthers play?",
    "ProcessedQuestion": "where do florida panthers play",
    "Parses": [
      {
        "ParseId": "WebQTest-1557.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j8js)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j8js ns:sports.sports_team.arena_stadium ?x .\n}\n",
        "PotentialTopicEntityMention": "florida panthers",
        "TopicEntityName": "Florida Panthers",
        "TopicEntityMid": "m.0j8js",
        "InferentialChain": [
          "sports.sports_team.arena_stadium"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.038hc3",
            "EntityName": "BB&T Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.039xlz",
            "EntityName": "Miami Arena"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0j8js": "Florida Panthers"
    },
    "qid_topic_entity": {
      "Q204623": "Florida Panthers"
    },
    "index": 45
  },
  {
    "QuestionId": "WebQTest-1917",
    "RawQuestion": "what did charles babbage discover?",
    "ProcessedQuestion": "what did charles babbage discover",
    "Parses": [
      {
        "ParseId": "WebQTest-1917.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01qmz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01qmz ns:law.inventor.inventions ?x .\n}\n",
        "PotentialTopicEntityMention": "charles babbage",
        "TopicEntityName": "Charles Babbage",
        "TopicEntityMid": "m.01qmz",
        "InferentialChain": [
          "law.inventor.inventions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.029wv",
            "EntityName": "Difference engine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nf_",
            "EntityName": "Analytical Engine"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01qmz": "Charles Babbage"
    },
    "qid_topic_entity": {
      "Q46633": "Charles Babbage"
    },
    "index": 46
  },
  {
    "QuestionId": "WebQTest-512",
    "RawQuestion": "who were mary shelley?",
    "ProcessedQuestion": "who were mary shelley",
    "Parses": [
      {
        "ParseId": "WebQTest-512.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04_by)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04_by ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "mary shelley",
        "TopicEntityName": "Mary Shelley",
        "TopicEntityMid": "m.04_by",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h6676",
            "EntityName": "Editor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h6nsx",
            "EntityName": "Biographer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hv44_",
            "EntityName": "Playwright"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kvk_g",
            "EntityName": "Travel writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02xhgwq",
            "EntityName": "Novelist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f1hr",
            "EntityName": "Essayist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kyk",
            "EntityName": "Author"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04_by": "Mary Shelley"
    },
    "qid_topic_entity": {
      "Q47152": "Mary Shelley"
    },
    "index": 47
  },
  {
    "QuestionId": "WebQTest-1047",
    "RawQuestion": "who does amy stiller play in dodgeball?",
    "ProcessedQuestion": "who does amy stiller play in dodgeball",
    "Parses": [
      {
        "ParseId": "WebQTest-1047.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0194r1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0194r1 ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.034qrh .\n}\n",
        "PotentialTopicEntityMention": "amy stiller",
        "TopicEntityName": "Amy Stiller",
        "TopicEntityMid": "m.0194r1",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.034qrh",
            "EntityName": "DodgeBall: A True Underdog Story",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h5kk2x",
            "EntityName": "Keno Waitress"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1047.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.034qrh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.034qrh ns:film.film.starring ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.actor ns:m.0194r1 .\n}\n",
        "PotentialTopicEntityMention": "dodgeball",
        "TopicEntityName": "DodgeBall: A True Underdog Story",
        "TopicEntityMid": "m.034qrh",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0194r1",
            "EntityName": "Amy Stiller",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.actor",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h5kk2x",
            "EntityName": "Keno Waitress"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0194r1": "Amy Stiller",
      "m.034qrh": "DodgeBall: A True Underdog Story"
    },
    "qid_topic_entity": {
      "Q443128": "Amy Stiller",
      "Q908473": "DodgeBall: A True Underdog Story"
    },
    "index": 48
  },
  {
    "QuestionId": "WebQTest-1685",
    "RawQuestion": "where did benjamin franklin went to school?",
    "ProcessedQuestion": "where did benjamin franklin went to school",
    "Parses": [
      {
        "ParseId": "WebQTest-1685.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019fz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019fz ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "benjamin franklin",
        "TopicEntityName": "Benjamin Franklin",
        "TopicEntityMid": "m.019fz",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kj7g",
            "EntityName": "Boston Latin School"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.019fz": "Benjamin Franklin"
    },
    "qid_topic_entity": {
      "Q34969": "Benjamin Franklin"
    },
    "index": 49
  },
  {
    "QuestionId": "WebQTest-218",
    "RawQuestion": "in which continent is germany?",
    "ProcessedQuestion": "in which continent is germany",
    "Parses": [
      {
        "ParseId": "WebQTest-218.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0345h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0345h ns:base.locations.countries.continent ?x .\n}\n",
        "PotentialTopicEntityMention": "germany",
        "TopicEntityName": "Germany",
        "TopicEntityMid": "m.0345h",
        "InferentialChain": [
          "base.locations.countries.continent"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02j9z",
            "EntityName": "Europe"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0345h": "Germany"
    },
    "qid_topic_entity": {
      "Q183": "Germany"
    },
    "index": 50
  },
  {
    "QuestionId": "WebQTest-938",
    "RawQuestion": "who was queen elizabeth ii mom?",
    "ProcessedQuestion": "who was queen elizabeth ii mom",
    "Parses": [
      {
        "ParseId": "WebQTest-938.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d1_f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d1_f ns:people.person.parents ?x .\n?x ns:people.person.gender ns:m.02zsn .\n}\n",
        "PotentialTopicEntityMention": "elizabeth ii",
        "TopicEntityName": "Elizabeth II",
        "TopicEntityMid": "m.0d1_f",
        "InferentialChain": [
          "people.person.parents"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02zsn",
            "EntityName": "Female",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.person.gender",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cm63",
            "EntityName": "Queen Elizabeth The Queen Mother"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d1_f": "Elizabeth II"
    },
    "qid_topic_entity": {
      "Q9682": "Elizabeth II"
    },
    "index": 51
  },
  {
    "QuestionId": "WebQTest-1570",
    "RawQuestion": "where is the arizona cardinals stadium located?",
    "ProcessedQuestion": "where is the arizona cardinals stadium located",
    "Parses": [
      {
        "ParseId": "WebQTest-1570.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ws7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ws7 ns:sports.sports_team.location ?x .\n}\n",
        "PotentialTopicEntityMention": "arizona cardinals",
        "TopicEntityName": "Arizona Cardinals",
        "TopicEntityMid": "m.0ws7",
        "InferentialChain": [
          "sports.sports_team.location"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0vmt",
            "EntityName": "Arizona"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ws7": "Arizona Cardinals"
    },
    "qid_topic_entity": {
      "Q224164": "Arizona Cardinals"
    },
    "index": 52
  },
  {
    "QuestionId": "WebQTest-935",
    "RawQuestion": "where was osama bin laden killed?",
    "ProcessedQuestion": "where was osama bin laden killed",
    "Parses": [
      {
        "ParseId": "WebQTest-935.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05mg9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05mg9 ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "osama bin laden",
        "TopicEntityName": "Osama bin Laden",
        "TopicEntityMid": "m.05mg9",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011hs1",
            "EntityName": "Abbottabad"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05mg9": "Osama bin Laden"
    },
    "qid_topic_entity": {
      "Q1317": "Osama bin Laden"
    },
    "index": 53
  },
  {
    "QuestionId": "WebQTest-454",
    "RawQuestion": "where did hank marvin come from?",
    "ProcessedQuestion": "where did hank marvin come from",
    "Parses": [
      {
        "ParseId": "WebQTest-454.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01x2fx0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01x2fx0 ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "hank marvin",
        "TopicEntityName": "Hank Marvin",
        "TopicEntityMid": "m.01x2fx0",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j7ng",
            "EntityName": "Newcastle upon Tyne"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01x2fx0": "Hank Marvin"
    },
    "qid_topic_entity": {
      "Q365478": "Hank Marvin"
    },
    "index": 54
  },
  {
    "QuestionId": "WebQTest-1807",
    "RawQuestion": "what was wayne gretzky's first team?",
    "ProcessedQuestion": "what was wayne gretzky 's first team",
    "Parses": [
      {
        "ParseId": "WebQTest-1807.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0839s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0839s ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n?y ns:sports.sports_team_roster.from ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "PotentialTopicEntityMention": "wayne gretzky",
        "TopicEntityName": "Wayne Gretzky",
        "TopicEntityMid": "m.0839s",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Ascending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "sports.sports_team_roster.from",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jnmj",
            "EntityName": "Edmonton Oilers"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0839s": "Wayne Gretzky"
    },
    "qid_topic_entity": {
      "Q209518": "Wayne Gretzky"
    },
    "index": 55
  },
  {
    "QuestionId": "WebQTest-1960",
    "RawQuestion": "when was the last time the toronto maple leafs win the stanley cup?",
    "ProcessedQuestion": "when was the last time the toronto maple leafs win the stanley cup",
    "Parses": [
      {
        "ParseId": "WebQTest-1960.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j6tr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j6tr ns:sports.sports_team.championships ?x .\n?x ns:time.event.start_date ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "toronto maple leafs",
        "TopicEntityName": "Toronto Maple Leafs",
        "TopicEntityMid": "m.0j6tr",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "time.event.start_date",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03by199",
            "EntityName": "1967 Stanley Cup Finals"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0j6tr": "Toronto Maple Leafs"
    },
    "qid_topic_entity": {
      "Q203384": "Toronto Maple Leafs"
    },
    "index": 56
  },
  {
    "QuestionId": "WebQTest-757",
    "RawQuestion": "who is angelina jolie mom and dad?",
    "ProcessedQuestion": "who is angelina jolie mom and dad",
    "Parses": [
      {
        "ParseId": "WebQTest-757.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f4vbz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f4vbz ns:people.person.parents ?x .\n}\n",
        "PotentialTopicEntityMention": "angelina jolie",
        "TopicEntityName": "Angelina Jolie",
        "TopicEntityMid": "m.0f4vbz",
        "InferentialChain": [
          "people.person.parents"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01mqgf",
            "EntityName": "Marcheline Bertrand"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.046qq",
            "EntityName": "Jon Voight"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f4vbz": "Angelina Jolie"
    },
    "qid_topic_entity": {
      "Q13909": "Angelina Jolie"
    },
    "index": 57
  },
  {
    "QuestionId": "WebQTest-721",
    "RawQuestion": "what kind of leukemia did jill clayburgh have?",
    "ProcessedQuestion": "what kind of leukemia did jill clayburgh have",
    "Parses": [
      {
        "ParseId": "WebQTest-721.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01gw8b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01gw8b ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "jill clayburgh",
        "TopicEntityName": "Jill Clayburgh",
        "TopicEntityMid": "m.01gw8b",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bg7m",
            "EntityName": "B-cell chronic lymphocytic leukemia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04psf",
            "EntityName": "Leukemia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01gw8b": "Jill Clayburgh"
    },
    "qid_topic_entity": {
      "Q230665": "Jill Clayburgh"
    },
    "index": 58
  },
  {
    "QuestionId": "WebQTest-123",
    "RawQuestion": "what all does google now do?",
    "ProcessedQuestion": "what all does google now do",
    "Parses": [
      {
        "ParseId": "WebQTest-123.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.045c7b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.045c7b ns:business.consumer_company.products ?y .\n?y ns:business.company_product_relationship.consumer_product ?x .\nFILTER(NOT EXISTS {?y ns:business.company_product_relationship.from_date ?sk0} || \nEXISTS {?y ns:business.company_product_relationship.from_date ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:business.company_product_relationship.to_date ?sk2} || \nEXISTS {?y ns:business.company_product_relationship.to_date ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "google",
        "TopicEntityName": "Google",
        "TopicEntityMid": "m.045c7b",
        "InferentialChain": [
          "business.consumer_company.products",
          "business.company_product_relationship.consumer_product"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "business.company_product_relationship.from_date",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "business.company_product_relationship.to_date",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "now"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010pkp62",
            "EntityName": "Google Classroom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03w9g0f",
            "EntityName": "Google Drive"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064qgt0",
            "EntityName": "Apache Wave"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ny5h",
            "EntityName": "Google Earth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b6g2kz",
            "EntityName": "Google Buzz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dm258",
            "EntityName": "Google Docs, Sheets, and Slides"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fpj3tb",
            "EntityName": "Nexus S"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j7m2zm",
            "EntityName": "Google Glass"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k0p036",
            "EntityName": "Nexus 7"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k2998k",
            "EntityName": "Nexus Q"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nb7n8f",
            "EntityName": "Nexus 10"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pb8gtr",
            "EntityName": "Google Maps"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0wf0rgl",
            "EntityName": "Chromecast"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.045c7b": "Google"
    },
    "qid_topic_entity": {
      "Q95": "Google"
    },
    "index": 59
  },
  {
    "QuestionId": "WebQTest-361",
    "RawQuestion": "what to do and see in vienna austria?",
    "ProcessedQuestion": "what to do and see in vienna austria",
    "Parses": [
      {
        "ParseId": "WebQTest-361.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fhp9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fhp9 ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "vienna",
        "TopicEntityName": "Vienna",
        "TopicEntityMid": "m.0fhp9",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.121ymzrf",
            "EntityName": "Rock im Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015_kq",
            "EntityName": "Sch\u00f6nbrunn Palace"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01c921",
            "EntityName": "Minoritenkirche"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fdmj",
            "EntityName": "St. Stephen's Cathedral, Vienna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.021c8v",
            "EntityName": "Vienna State Opera"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025zg_7",
            "EntityName": "Liechtenstein Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027fx_h",
            "EntityName": "Schloss Hof"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q__dl",
            "EntityName": "mumok"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02w4zw",
            "EntityName": "Imperial Crypt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037yl3",
            "EntityName": "Belvedere, Vienna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03yy70",
            "EntityName": "Kunsthistorisches Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lv9z",
            "EntityName": "Karlskirche, Vienna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04zct1",
            "EntityName": "Albertina"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0547jg",
            "EntityName": "Naturhistorisches Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05ksgz",
            "EntityName": "Hofburg Palace"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.071ygm",
            "EntityName": "Jesuit Church, Vienna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.079jqn",
            "EntityName": "Schottenkirche, Vienna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07xjrz",
            "EntityName": "Museum of Military History, Vienna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08gckp",
            "EntityName": "Vienna International Centre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08j7nmv",
            "EntityName": "Sigmund Freud Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08k4xy",
            "EntityName": "Vienna Observatory"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08v5y9",
            "EntityName": "Augustinian Church, Vienna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.098gjd",
            "EntityName": "Capuchin Church, Vienna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09fvwy",
            "EntityName": "Prater"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b0lgr",
            "EntityName": "Millennium Tower"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bygq4",
            "EntityName": "St. Peter's Church"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1v9t",
            "EntityName": "Leopold Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0czbmkt",
            "EntityName": "Haus der Musik"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dnhg8",
            "EntityName": "Rathaus, Vienna"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0fhp9": "Vienna"
    },
    "qid_topic_entity": {
      "Q1741": "Vienna"
    },
    "index": 60
  },
  {
    "QuestionId": "WebQTest-111",
    "RawQuestion": "where is the carpathian mountain range located?",
    "ProcessedQuestion": "where is the carpathian mountain range located",
    "Parses": [
      {
        "ParseId": "WebQTest-111.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cdsk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cdsk ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "carpathian mountain range",
        "TopicEntityName": "Carpathian Mountains",
        "TopicEntityMid": "m.0cdsk",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02j9z",
            "EntityName": "Europe"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0cdsk": "Carpathian Mountains"
    },
    "qid_topic_entity": {
      "Q1288": "Carpathian Mountains"
    },
    "index": 61
  },
  {
    "QuestionId": "WebQTest-673",
    "RawQuestion": "where did robert kardashian go to college?",
    "ProcessedQuestion": "where did robert kardashian go to college",
    "Parses": [
      {
        "ParseId": "WebQTest-673.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01x48v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01x48v ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "robert kardashian",
        "TopicEntityName": "Robert Kardashian",
        "TopicEntityMid": "m.01x48v",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rky4",
            "EntityName": "University of San Diego"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05pyvz",
            "EntityName": "University of San Diego School of Law"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065y4w7",
            "EntityName": "University of Southern California"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01x48v": "Robert Kardashian"
    },
    "qid_topic_entity": {
      "Q1816737": "Robert Kardashian"
    },
    "index": 62
  },
  {
    "QuestionId": "WebQTest-987",
    "RawQuestion": "what does barbara bush do for work?",
    "ProcessedQuestion": "what does barbara bush do for work",
    "Parses": [
      {
        "ParseId": "WebQTest-987.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015nr6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015nr6 ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.basic_title ?x .\n}\n",
        "PotentialTopicEntityMention": "barbara bush",
        "TopicEntityName": "Barbara Bush",
        "TopicEntityMid": "m.015nr6",
        "InferentialChain": [
          "government.politician.government_positions_held",
          "government.government_position_held.basic_title"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dz7z",
            "EntityName": "First Lady"
          }
        ]
      },
      {
        "ParseId": "WebQTest-987.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015nr6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015nr6 ns:people.person.employment_history ?y .\n?y ns:business.employment_tenure.title ?x .\n}\n",
        "PotentialTopicEntityMention": "barbara bush",
        "TopicEntityName": "Barbara Bush",
        "TopicEntityMid": "m.015nr6",
        "InferentialChain": [
          "people.person.employment_history",
          "business.employment_tenure.title"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dz7z",
            "EntityName": "First Lady"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.015nr6": "Barbara Bush"
    },
    "qid_topic_entity": {
      "Q190628": "Barbara Bush"
    },
    "index": 63
  },
  {
    "QuestionId": "WebQTest-773",
    "RawQuestion": "where is the sony ericsson company?",
    "ProcessedQuestion": "where is the sony ericsson company",
    "Parses": [
      {
        "ParseId": "WebQTest-773.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01spxd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01spxd ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "sony",
        "TopicEntityName": "Sony Mobile Communications",
        "TopicEntityMid": "m.01spxd",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.024bqj",
            "EntityName": "Minato"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01spxd": "Sony Mobile Communications"
    },
    "qid_topic_entity": {
      "Q376692": "Sony Mobile Communications"
    },
    "index": 64
  },
  {
    "QuestionId": "WebQTest-1616",
    "RawQuestion": "what did shannon hoon die from?",
    "ProcessedQuestion": "what did shannon hoon die from",
    "Parses": [
      {
        "ParseId": "WebQTest-1616.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01w2x6z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01w2x6z ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "shannon hoon",
        "TopicEntityName": "Shannon Hoon",
        "TopicEntityMid": "m.01w2x6z",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01tf_6",
            "EntityName": "Drug overdose"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01w2x6z": "Shannon Hoon"
    },
    "qid_topic_entity": {
      "Q531978": "Shannon Hoon"
    },
    "index": 65
  },
  {
    "QuestionId": "WebQTest-874",
    "RawQuestion": "what language do people from bosnia speak?",
    "ProcessedQuestion": "what language do people from bosnia speak",
    "Parses": [
      {
        "ParseId": "WebQTest-874.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0166b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0166b ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "bosnia",
        "TopicEntityName": "Bosnia and Herzegovina",
        "TopicEntityMid": "m.0166b",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06x8y",
            "EntityName": "Serbo-Croatian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k0sb",
            "EntityName": "Serbian language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-874.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0166b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0166b ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "bosnia",
        "TopicEntityName": "Bosnia and Herzegovina",
        "TopicEntityMid": "m.0166b",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01841n",
            "EntityName": "Bosnian language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k0sb",
            "EntityName": "Serbian language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k0sv",
            "EntityName": "Croatian language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0166b": "Bosnia and Herzegovina"
    },
    "qid_topic_entity": {
      "Q225": "Bosnia and Herzegovina"
    },
    "index": 66
  },
  {
    "QuestionId": "WebQTest-766",
    "RawQuestion": "what is malaysian currency?",
    "ProcessedQuestion": "what is malaysian currency",
    "Parses": [
      {
        "ParseId": "WebQTest-766.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09pmkv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09pmkv ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "malaysian",
        "TopicEntityName": "Malaysia",
        "TopicEntityMid": "m.09pmkv",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_c9q",
            "EntityName": "Malaysian ringgit"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09pmkv": "Malaysia"
    },
    "qid_topic_entity": {
      "Q833": "Malaysia"
    },
    "index": 67
  },
  {
    "QuestionId": "WebQTest-1445",
    "RawQuestion": "what tv series did mark harmon star in?",
    "ProcessedQuestion": "what tv series did mark harmon star in",
    "Parses": [
      {
        "ParseId": "WebQTest-1445.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.037gjc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.037gjc ns:tv.tv_actor.starring_roles ?y .\n?y ns:tv.regular_tv_appearance.series ?x .\n}\n",
        "PotentialTopicEntityMention": "mark harmon",
        "TopicEntityName": "Mark Harmon",
        "TopicEntityMid": "m.037gjc",
        "InferentialChain": [
          "tv.tv_actor.starring_roles",
          "tv.regular_tv_appearance.series"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fx1l",
            "EntityName": "Chicago Hope"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02996d",
            "EntityName": "Centennial"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kk_c",
            "EntityName": "From the Earth to the Moon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02md2d",
            "EntityName": "St. Elsewhere"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x6r9",
            "EntityName": "Flamingo Road"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m8sg",
            "EntityName": "NCIS"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05c2j5_",
            "EntityName": "Eleanor and Franklin: The White House Years"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05p4qwd",
            "EntityName": "Sam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06yg5s",
            "EntityName": "240-Robert"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07cgcf9",
            "EntityName": "Charlie Grace"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dl6q1_",
            "EntityName": "The Dream Merchants"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g6sm2",
            "EntityName": "Reasonable Doubts"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.037gjc": "Mark Harmon"
    },
    "qid_topic_entity": {
      "Q296774": "Mark Harmon"
    },
    "index": 68
  },
  {
    "QuestionId": "WebQTest-153",
    "RawQuestion": "what are the sights to see in madrid?",
    "ProcessedQuestion": "what are the sights to see in madrid",
    "Parses": [
      {
        "ParseId": "WebQTest-153.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.056_y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.056_y ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "madrid",
        "TopicEntityName": "Madrid",
        "TopicEntityMid": "m.056_y",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01bc9m",
            "EntityName": "El Escorial"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01hlq3",
            "EntityName": "Museo Nacional Del Prado"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01jcyh",
            "EntityName": "Museo Nacional Centro de Arte Reina Sof\u00eda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r9yg7",
            "EntityName": "Summercase"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03chy63",
            "EntityName": "Festimad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rmzx",
            "EntityName": "Buen Retiro Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04m3yk",
            "EntityName": "Royal Palace of Madrid"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.053llq",
            "EntityName": "Almudena Cathedral"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bvn8g",
            "EntityName": "Sorolla Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06_l58",
            "EntityName": "Plaza de Cibeles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06cgmf",
            "EntityName": "Madrid Arena"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06j2nj",
            "EntityName": "Paseo del Prado"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nd2f",
            "EntityName": "Parque Warner Madrid"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.073z19",
            "EntityName": "Thyssen-Bornemisza Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07f__f",
            "EntityName": "Temple of Debod"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07mpc7",
            "EntityName": "Puerta del Sol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09s07b",
            "EntityName": "Gran V\u00eda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bwg9f0",
            "EntityName": "Madrid Marathon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cd2rc",
            "EntityName": "Plaza Mayor, Madrid"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fphvtq",
            "EntityName": "La Vaguada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h3lmf1",
            "EntityName": "Museum of L\u00e1zaro Galdiano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h3tjjc",
            "EntityName": "Palace of la Bolsa de Madrid"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.056_y": "Madrid"
    },
    "qid_topic_entity": {
      "Q2807": "Madrid"
    },
    "index": 69
  },
  {
    "QuestionId": "WebQTest-420",
    "RawQuestion": "where is perpignan located?",
    "ProcessedQuestion": "where is perpignan located",
    "Parses": [
      {
        "ParseId": "WebQTest-420.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09nkq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09nkq ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "perpignan",
        "TopicEntityName": "Perpignan",
        "TopicEntityMid": "m.09nkq",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01087l",
            "EntityName": "Pyr\u00e9n\u00e9es-Orientales"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f8l9c",
            "EntityName": "France"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0lwkz",
            "EntityName": "Languedoc-Roussillon"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09nkq": "Perpignan"
    },
    "qid_topic_entity": {
      "Q6730": "Perpignan"
    },
    "index": 70
  },
  {
    "QuestionId": "WebQTest-1416",
    "RawQuestion": "what was franklin pierce famous for?",
    "ProcessedQuestion": "what was franklin pierce famous for",
    "Parses": [
      {
        "ParseId": "WebQTest-1416.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02z51)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02z51 ns:common.topic.notable_types ?x .\n}\n",
        "PotentialTopicEntityMention": "franklin pierce",
        "TopicEntityName": "Franklin Pierce",
        "TopicEntityMid": "m.02z51",
        "InferentialChain": [
          "common.topic.notable_types"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01xljv7",
            "EntityName": "US President"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02z51": "Franklin Pierce"
    },
    "qid_topic_entity": {
      "Q12312": "Franklin Pierce"
    },
    "index": 71
  },
  {
    "QuestionId": "WebQTest-1748",
    "RawQuestion": "through which countries of the sahel does the niger river flow?",
    "ProcessedQuestion": "through which countries of the sahel does the niger river flow",
    "Parses": [
      {
        "ParseId": "WebQTest-1748.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05csx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05csx ns:location.location.partially_containedby ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n?x ns:location.location.partially_contains ns:m.0l5_l .\n}\n",
        "PotentialTopicEntityMention": "niger river",
        "TopicEntityName": "Niger River",
        "TopicEntityMid": "m.05csx",
        "InferentialChain": [
          "location.location.partially_containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01mp",
            "EntityName": "Country",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          },
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0l5_l",
            "EntityName": "Sahel",
            "SourceNodeIndex": 0,
            "NodePredicate": "location.location.partially_contains",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v09",
            "EntityName": "Mali"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05cc1",
            "EntityName": "Niger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05cgv",
            "EntityName": "Nigeria"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05csx": "Niger River"
    },
    "qid_topic_entity": {
      "Q3542": "Niger River"
    },
    "index": 72
  },
  {
    "QuestionId": "WebQTest-354",
    "RawQuestion": "what art movement did leonardo da vinci belong to?",
    "ProcessedQuestion": "what art movement did leonardo da vinci belong to",
    "Parses": [
      {
        "ParseId": "WebQTest-354.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04lg6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04lg6 ns:visual_art.visual_artist.associated_periods_or_movements ?x .\n}\n",
        "PotentialTopicEntityMention": "leonardo da vinci",
        "TopicEntityName": "Leonardo da Vinci",
        "TopicEntityMid": "m.04lg6",
        "InferentialChain": [
          "visual_art.visual_artist.associated_periods_or_movements"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011nkkt6",
            "EntityName": "Pastel Art"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01z__d",
            "EntityName": "High Renaissance"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04lg6": "Leonardo da Vinci"
    },
    "qid_topic_entity": {
      "Q762": "Leonardo da Vinci"
    },
    "index": 73
  },
  {
    "QuestionId": "WebQTest-1392",
    "RawQuestion": "what the language spoken in indonesia?",
    "ProcessedQuestion": "what the language spoken in indonesia",
    "Parses": [
      {
        "ParseId": "WebQTest-1392.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ryn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ryn ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "indonesia",
        "TopicEntityName": "Indonesia",
        "TopicEntityMid": "m.03ryn",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01qzl2",
            "EntityName": "Sunda Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0201jz",
            "EntityName": "Bali Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020257",
            "EntityName": "Madura Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bv9",
            "EntityName": "Dutch Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwx1l",
            "EntityName": "Javanese Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.075yc64",
            "EntityName": "Batak Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.097kp",
            "EntityName": "Indonesian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f9fsf",
            "EntityName": "Tobelo Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y1mh",
            "EntityName": "Malay Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1392.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ryn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ryn ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "indonesia",
        "TopicEntityName": "Indonesia",
        "TopicEntityMid": "m.03ryn",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.097kp",
            "EntityName": "Indonesian Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03ryn": "Indonesia"
    },
    "qid_topic_entity": {
      "Q252": "Indonesia"
    },
    "index": 74
  },
  {
    "QuestionId": "WebQTest-90",
    "RawQuestion": "who played on the jeffersons?",
    "ProcessedQuestion": "who played on the jeffersons",
    "Parses": [
      {
        "ParseId": "WebQTest-90.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02f8jf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02f8jf ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n}\n",
        "PotentialTopicEntityMention": "the jeffersons",
        "TopicEntityName": "The Jeffersons",
        "TopicEntityMid": "m.02f8jf",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_yyp",
            "EntityName": "Sherman Hemsley"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_z06",
            "EntityName": "Isabel Sanford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0279gxy",
            "EntityName": "Damon Evans"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0279gyz",
            "EntityName": "Berlinda Tolbert"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03h436",
            "EntityName": "Roxie Roker"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03k25c",
            "EntityName": "Zara Cully"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03zwg4",
            "EntityName": "Marla Gibbs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06b_nc",
            "EntityName": "Franklin Cover"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c6b4y",
            "EntityName": "Paul Benedict"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0clm34",
            "EntityName": "Mike Evans"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gydmc",
            "EntityName": "Jay Hammer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02f8jf": "The Jeffersons"
    },
    "qid_topic_entity": {
      "Q153227": "The Jeffersons"
    },
    "index": 75
  },
  {
    "QuestionId": "WebQTest-1916",
    "RawQuestion": "what county is utica ny in?",
    "ProcessedQuestion": "what county is utica ny in",
    "Parses": [
      {
        "ParseId": "WebQTest-1916.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lpk3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lpk3 ns:location.hud_county_place.county ?x .\n}\n",
        "PotentialTopicEntityMention": "utica ny",
        "TopicEntityName": "Utica",
        "TopicEntityMid": "m.0lpk3",
        "InferentialChain": [
          "location.hud_county_place.county"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fc_9",
            "EntityName": "Oneida County"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1916.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lpk3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lpk3 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
        "PotentialTopicEntityMention": "utica ny",
        "TopicEntityName": "Utica",
        "TopicEntityMid": "m.0lpk3",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpym_",
            "EntityName": "US County",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fc_9",
            "EntityName": "Oneida County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0lpk3": "Utica"
    },
    "qid_topic_entity": {
      "Q2495519": "Utica"
    },
    "index": 76
  },
  {
    "QuestionId": "WebQTest-1489",
    "RawQuestion": "what character did billy d williams play in star wars?",
    "ProcessedQuestion": "what character did billy d williams play in star wars",
    "Parses": [
      {
        "ParseId": "WebQTest-1489.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027_sn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027_sn ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.0g55yqj .\n}\n",
        "PotentialTopicEntityMention": "billy d williams",
        "TopicEntityName": "Billy Dee Williams",
        "TopicEntityMid": "m.027_sn",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0g55yqj",
            "EntityName": "Robot Chicken: Star Wars Episode III",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ddrb",
            "EntityName": "Lando Calrissian"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1489.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027_sn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027_sn ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.0f3m1 .\n}\n",
        "PotentialTopicEntityMention": "billy d williams",
        "TopicEntityName": "Billy Dee Williams",
        "TopicEntityMid": "m.027_sn",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0f3m1",
            "EntityName": "Star Wars Episode V: The Empire Strikes Back",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ddrb",
            "EntityName": "Lando Calrissian"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1489.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027_sn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027_sn ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.0ddjy .\n}\n",
        "PotentialTopicEntityMention": "billy d williams",
        "TopicEntityName": "Billy Dee Williams",
        "TopicEntityMid": "m.027_sn",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0ddjy",
            "EntityName": "Return of the Jedi",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ddrb",
            "EntityName": "Lando Calrissian"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.027_sn": "Billy Dee Williams"
    },
    "qid_topic_entity": {
      "Q358345": "Billy Dee Williams"
    },
    "index": 77
  },
  {
    "QuestionId": "WebQTest-1955",
    "RawQuestion": "who are the judges appointed in the supreme court?",
    "ProcessedQuestion": "who are the judges appointed in the supreme court",
    "Parses": [
      {
        "ParseId": "WebQTest-1955.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07sz1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07sz1 ns:law.court.judges ?y .\n?y ns:law.judicial_tenure.judge ?x .\nFILTER(NOT EXISTS {?y ns:law.judicial_tenure.from_date ?sk0} || \nEXISTS {?y ns:law.judicial_tenure.from_date ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:law.judicial_tenure.to_date ?sk2} || \nEXISTS {?y ns:law.judicial_tenure.to_date ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "supreme court",
        "TopicEntityName": "Supreme Court of the United States",
        "TopicEntityMid": "m.07sz1",
        "InferentialChain": [
          "law.court.judges",
          "law.judicial_tenure.judge"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "law.judicial_tenure.from_date",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "law.judicial_tenure.to_date",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_4j",
            "EntityName": "Clarence Thomas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0166zk",
            "EntityName": "Antonin Scalia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016m0v",
            "EntityName": "Stephen Breyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0199pk",
            "EntityName": "Ruth Bader Ginsburg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019s7r",
            "EntityName": "Anthony Kennedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gnxk",
            "EntityName": "Samuel Alito"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.066vhq",
            "EntityName": "John Roberts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06lnfm",
            "EntityName": "Elena Kagan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06lvrr",
            "EntityName": "Sonia Sotomayor"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07sz1": "Supreme Court of the United States"
    },
    "qid_topic_entity": {
      "Q11201": "Supreme Court of the United States"
    },
    "index": 78
  },
  {
    "QuestionId": "WebQTest-708",
    "RawQuestion": "who won fa cup 1976?",
    "ProcessedQuestion": "who won fa cup 1976",
    "Parses": [
      {
        "ParseId": "WebQTest-708.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_p0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_p0 ns:sports.sports_award_type.winners ?y .\n?y ns:sports.sports_award.award_winner ?x .\n?y ns:sports.sports_award.season ns:m.04gp5lx .\n}\n",
        "PotentialTopicEntityMention": "fa cup",
        "TopicEntityName": "FA Cup",
        "TopicEntityMid": "m.02_p0",
        "InferentialChain": [
          "sports.sports_award_type.winners",
          "sports.sports_award.award_winner"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04gp5lx",
            "EntityName": "1975\u201376 FA Cup",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_award.season",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k_l4",
            "EntityName": "Southampton F.C."
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02_p0": "FA Cup"
    },
    "qid_topic_entity": {
      "Q11151": "FA Cup"
    },
    "index": 79
  },
  {
    "QuestionId": "WebQTest-342",
    "RawQuestion": "what countries have english as their official language?",
    "ProcessedQuestion": "what countries have english as their official language",
    "Parses": [
      {
        "ParseId": "WebQTest-342.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h40lc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h40lc ns:language.human_language.countries_spoken_in ?x .\n?x ns:location.country.official_language ns:m.02h40lc .\n}\n",
        "PotentialTopicEntityMention": "english",
        "TopicEntityName": "English Language",
        "TopicEntityMid": "m.02h40lc",
        "InferentialChain": [
          "language.human_language.countries_spoken_in"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02h40lc",
            "EntityName": "English Language",
            "SourceNodeIndex": 0,
            "NodePredicate": "location.country.official_language",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0160w",
            "EntityName": "Bahamas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0162v",
            "EntityName": "Barbados"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0164b",
            "EntityName": "Belize"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0165b",
            "EntityName": "Bermuda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0166v",
            "EntityName": "Botswana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019rg5",
            "EntityName": "Kenya"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nln",
            "EntityName": "Cameroon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nty",
            "EntityName": "Cayman Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020p1",
            "EntityName": "Cook Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026wtlf",
            "EntityName": "Territory of Papua and New Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027nb",
            "EntityName": "Dominica"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wt0",
            "EntityName": "Fiji"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_xj",
            "EntityName": "Jersey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.034m8",
            "EntityName": "Guyana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.034tl",
            "EntityName": "Guam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035dk",
            "EntityName": "Ghana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035hm",
            "EntityName": "Gibraltar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035yg",
            "EntityName": "Grenada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03h64",
            "EntityName": "Hong Kong"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rk0",
            "EntityName": "India"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rt9",
            "EntityName": "Republic of Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03t1s",
            "EntityName": "Isle of Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047t_",
            "EntityName": "Kiribati"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hvw",
            "EntityName": "Lesotho"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hzj",
            "EntityName": "Liberia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3q",
            "EntityName": "Malta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v6v",
            "EntityName": "Marshall Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wcf",
            "EntityName": "Montserrat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bmq",
            "EntityName": "Namibia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05br2",
            "EntityName": "Nauru"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05cgv",
            "EntityName": "Nigeria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qkp",
            "EntityName": "Papua New Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05r7t",
            "EntityName": "Puerto Rico"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05sb1",
            "EntityName": "Pakistan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05v8c",
            "EntityName": "Philippines"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dfg",
            "EntityName": "Rwanda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ryl",
            "EntityName": "Saint Kitts and Nevis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s_2",
            "EntityName": "Sierra Leone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s0l",
            "EntityName": "Saint Lucia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s6l",
            "EntityName": "Saint Vincent and the Grenadines"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s9y",
            "EntityName": "Samoa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06t2t",
            "EntityName": "Singapore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06tw8",
            "EntityName": "Sudan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06v36",
            "EntityName": "Swaziland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07dzf",
            "EntityName": "Tanzania"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07fr_",
            "EntityName": "Turks and Caicos Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07fsv",
            "EntityName": "Tuvalu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ssc",
            "EntityName": "United Kingdom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07tp2",
            "EntityName": "Uganda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07z5n",
            "EntityName": "Vanuatu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.088q4",
            "EntityName": "Zimbabwe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.088vb",
            "EntityName": "Zambia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09wfqp",
            "EntityName": "Territory of New Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ctw_b",
            "EntityName": "New Zealand"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hdx8",
            "EntityName": "Gambia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hzlz",
            "EntityName": "South Africa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5g9",
            "EntityName": "Wales"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0l3h",
            "EntityName": "Antigua and Barbuda"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02h40lc": "English Language"
    },
    "qid_topic_entity": {
      "Q1860": "English Language"
    },
    "index": 80
  },
  {
    "QuestionId": "WebQTest-921",
    "RawQuestion": "what was the cause of death for huell howser?",
    "ProcessedQuestion": "what was the cause of death for huell howser",
    "Parses": [
      {
        "ParseId": "WebQTest-921.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kddt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kddt ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "huell howser",
        "TopicEntityName": "Huell Howser",
        "TopicEntityMid": "m.02kddt",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m32h",
            "EntityName": "Prostate cancer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02kddt": "Huell Howser"
    },
    "qid_topic_entity": {
      "Q2837916": "Huell Howser"
    },
    "index": 81
  },
  {
    "QuestionId": "WebQTest-774",
    "RawQuestion": "what kind of currency does the dominican republic have?",
    "ProcessedQuestion": "what kind of currency does the dominican republic have",
    "Parses": [
      {
        "ParseId": "WebQTest-774.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027rn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027rn ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "dominican republic",
        "TopicEntityName": "Dominican Republic",
        "TopicEntityMid": "m.027rn",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lt7_",
            "EntityName": "Dominican peso"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.027rn": "Dominican Republic"
    },
    "qid_topic_entity": {
      "Q786": "Dominican Republic"
    },
    "index": 82
  },
  {
    "QuestionId": "WebQTest-279",
    "RawQuestion": "what county is st paul va in?",
    "ProcessedQuestion": "what county is st paul va in",
    "Parses": [
      {
        "ParseId": "WebQTest-279.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.013nm2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.013nm2 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
        "PotentialTopicEntityMention": "st paul va",
        "TopicEntityName": "St. Paul",
        "TopicEntityMid": "m.013nm2",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpym_",
            "EntityName": "US County",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0mmy6",
            "EntityName": "Wise County"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0mn3x",
            "EntityName": "Russell County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.013nm2": "St. Paul"
    },
    "qid_topic_entity": {
      "Q2989543": "St. Paul"
    },
    "index": 83
  },
  {
    "QuestionId": "WebQTest-172",
    "RawQuestion": "what do you call members of the senate?",
    "ProcessedQuestion": "what do you call members of the senate",
    "Parses": [
      {
        "ParseId": "WebQTest-172.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07t58)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07t58 ns:government.governmental_body.members ?y .\n?y ns:government.government_position_held.basic_title ?x .\n}\n",
        "PotentialTopicEntityMention": "senate",
        "TopicEntityName": "United States Senate",
        "TopicEntityMid": "m.07t58",
        "InferentialChain": [
          "government.governmental_body.members",
          "government.government_position_held.basic_title"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01hvfh",
            "EntityName": "President of the Senate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01t7n9",
            "EntityName": "State Senator"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025whr1",
            "EntityName": "Chief of staff"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02p31rg",
            "EntityName": "President pro tempore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.048zv9l",
            "EntityName": "Senator"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05k99t",
            "EntityName": "Senate majority leader"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07t58": "United States Senate"
    },
    "qid_topic_entity": {
      "Q66096": "United States Senate"
    },
    "index": 84
  },
  {
    "QuestionId": "WebQTest-825",
    "RawQuestion": "who does nolan ryan play for?",
    "ProcessedQuestion": "who does nolan ryan play for",
    "Parses": [
      {
        "ParseId": "WebQTest-825.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hctb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hctb ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "nolan ryan",
        "TopicEntityName": "Nolan Ryan",
        "TopicEntityMid": "m.0hctb",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m1n",
            "EntityName": "Houston Astros"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kmnv1",
            "EntityName": "California Angels"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0hctb": "Nolan Ryan"
    },
    "qid_topic_entity": {
      "Q721948": "Nolan Ryan"
    },
    "index": 85
  },
  {
    "QuestionId": "WebQTest-128",
    "RawQuestion": "who plays juni cortez?",
    "ProcessedQuestion": "who plays juni cortez",
    "Parses": [
      {
        "ParseId": "WebQTest-128.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02ql73)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02ql73 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n}\n",
        "PotentialTopicEntityMention": "juni cortez",
        "TopicEntityName": "Juni Cortez",
        "TopicEntityMid": "m.02ql73",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.042ldz",
            "EntityName": "Daryl Sabara"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02ql73": "Juni Cortez"
    },
    "qid_topic_entity": {
      "Q6313015": "Juni Cortez"
    },
    "index": 86
  },
  {
    "QuestionId": "WebQTest-178",
    "RawQuestion": "who was the leader of the us during wwii?",
    "ProcessedQuestion": "who was the leader of the us during wwii",
    "Parses": [
      {
        "ParseId": "WebQTest-178.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: F Date range join. Original comment: F nested"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n  ns:m.081pw ns:time.event.start_date ?start ;\n             ns:time.event.end_date ?end .\n  ?x ns:government.politician.government_positions_held  ?y .\n  ?y ns:government.government_position_held.office_position_or_title ns:m.060d2 ; # President of the United States\n     ns:government.government_position_held.from  ?from ;\n     ns:government.government_position_held.to  ?to .\n  FILTER (?from < ?end)\n  FILTER (?to > ?start)\n}",
        "PotentialTopicEntityMention": "wwii",
        "TopicEntityName": "World War II",
        "TopicEntityMid": "m.081pw",
        "InferentialChain": null,
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02yy8",
            "EntityName": "Franklin D. Roosevelt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09bg4l",
            "EntityName": "Harry S. Truman"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.081pw": "World War II"
    },
    "qid_topic_entity": {
      "Q362": "World War II"
    },
    "index": 87
  },
  {
    "QuestionId": "WebQTest-621",
    "RawQuestion": "what countries have german as the official language?",
    "ProcessedQuestion": "what countries have german as the official language",
    "Parses": [
      {
        "ParseId": "WebQTest-621.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04306rv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04306rv ns:language.human_language.countries_spoken_in ?x .\n?x ns:location.country.official_language ns:m.04306rv .\n}\n",
        "PotentialTopicEntityMention": "german",
        "TopicEntityName": "German Language",
        "TopicEntityMid": "m.04306rv",
        "InferentialChain": [
          "language.human_language.countries_spoken_in"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04306rv",
            "EntityName": "German Language",
            "SourceNodeIndex": 0,
            "NodePredicate": "location.country.official_language",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0154j",
            "EntityName": "Belgium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0345h",
            "EntityName": "Germany"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03f2w",
            "EntityName": "East Germany"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04g61",
            "EntityName": "Luxembourg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j53",
            "EntityName": "Liechtenstein"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mzp",
            "EntityName": "Switzerland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h7x",
            "EntityName": "Austria"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04306rv": "German Language"
    },
    "qid_topic_entity": {
      "Q188": "German Language"
    },
    "index": 88
  },
  {
    "QuestionId": "WebQTest-671",
    "RawQuestion": "who are the senators of hawaii 2012?",
    "ProcessedQuestion": "who are the senators of hawaii 2012",
    "Parses": [
      {
        "ParseId": "WebQTest-671.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gh4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gh4 ns:government.political_district.representatives ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.jurisdiction_of_office ns:m.09c7w0 .\n?y ns:government.government_position_held.from ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "hawaii",
        "TopicEntityName": "Hawaii",
        "TopicEntityMid": "m.03gh4",
        "InferentialChain": [
          "government.political_district.representatives",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.09c7w0",
            "EntityName": "United States of America",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.jurisdiction_of_office",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "government.government_position_held.from",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0357cd",
            "EntityName": "Mazie Hirono"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03gh4": "Hawaii"
    },
    "qid_topic_entity": {
      "Q782": "Hawaii"
    },
    "index": 89
  },
  {
    "QuestionId": "WebQTest-346",
    "RawQuestion": "who does donnie wahlberg play in the sixth sense?",
    "ProcessedQuestion": "who does donnie wahlberg play in the sixth sense",
    "Parses": [
      {
        "ParseId": "WebQTest-346.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02stwg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02stwg ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.07j94 .\n}\n",
        "PotentialTopicEntityMention": "donnie wahlberg",
        "TopicEntityName": "Donnie Wahlberg",
        "TopicEntityMid": "m.02stwg",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.07j94",
            "EntityName": "The Sixth Sense",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gyxn2c",
            "EntityName": "Vincent Grey"
          }
        ]
      },
      {
        "ParseId": "WebQTest-346.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07j94)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07j94 ns:film.film.starring ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.actor ns:m.02stwg .\n}\n",
        "PotentialTopicEntityMention": "the sixth sense",
        "TopicEntityName": "The Sixth Sense",
        "TopicEntityMid": "m.07j94",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02stwg",
            "EntityName": "Donnie Wahlberg",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.actor",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gyxn2c",
            "EntityName": "Vincent Grey"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02stwg": "Donnie Wahlberg",
      "m.07j94": "The Sixth Sense"
    },
    "qid_topic_entity": {
      "Q313470": "Donnie Wahlberg",
      "Q183063": "The Sixth Sense"
    },
    "index": 90
  },
  {
    "QuestionId": "WebQTest-331",
    "RawQuestion": "where was the temple of karnak built?",
    "ProcessedQuestion": "where was the temple of karnak built",
    "Parses": [
      {
        "ParseId": "WebQTest-331.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.014wy4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.014wy4 ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "temple of karnak",
        "TopicEntityName": "Karnak",
        "TopicEntityMid": "m.014wy4",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02fhym",
            "EntityName": "Luxor Governorate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02k54",
            "EntityName": "Egypt"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.014wy4": "Karnak"
    },
    "qid_topic_entity": {
      "Q522862": "Karnak"
    },
    "index": 91
  },
  {
    "QuestionId": "WebQTest-100",
    "RawQuestion": "what language is spoken in haiti today?",
    "ProcessedQuestion": "what language is spoken in haiti today",
    "Parses": [
      {
        "ParseId": "WebQTest-100.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gyl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gyl ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "haiti",
        "TopicEntityName": "Haiti",
        "TopicEntityMid": "m.03gyl",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02dhwl",
            "EntityName": "Haitian Creole"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064_8sq",
            "EntityName": "French"
          }
        ]
      },
      {
        "ParseId": "WebQTest-100.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gyl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gyl ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "haiti",
        "TopicEntityName": "Haiti",
        "TopicEntityMid": "m.03gyl",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02dhwl",
            "EntityName": "Haitian Creole"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064_8sq",
            "EntityName": "French"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03gyl": "Haiti"
    },
    "qid_topic_entity": {
      "Q790": "Haiti"
    },
    "index": 92
  },
  {
    "QuestionId": "WebQTest-852",
    "RawQuestion": "what province is toronto in ( 7 letters )?",
    "ProcessedQuestion": "what province is toronto in ( 7 letters )",
    "Parses": [
      {
        "ParseId": "WebQTest-852.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h7h6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h7h6 ns:base.biblioness.bibs_location.state ?x .\n}\n",
        "PotentialTopicEntityMention": "toronto",
        "TopicEntityName": "Toronto",
        "TopicEntityMid": "m.0h7h6",
        "InferentialChain": [
          "base.biblioness.bibs_location.state"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kr_",
            "EntityName": "Ontario"
          }
        ]
      },
      {
        "ParseId": "WebQTest-852.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h7h6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h7h6 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.01nm .\n}\n",
        "PotentialTopicEntityMention": "toronto",
        "TopicEntityName": "Toronto",
        "TopicEntityMid": "m.0h7h6",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01nm",
            "EntityName": "Canadian Province",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kr_",
            "EntityName": "Ontario"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0h7h6": "Toronto"
    },
    "qid_topic_entity": {
      "Q172": "Toronto"
    },
    "index": 93
  },
  {
    "QuestionId": "WebQTest-1634",
    "RawQuestion": "who does peter griffin voice?",
    "ProcessedQuestion": "who does peter griffin voice",
    "Parses": [
      {
        "ParseId": "WebQTest-1634.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03n6jv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03n6jv ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.special_performance_type ns:m.02nsjvf .\n}\n",
        "PotentialTopicEntityMention": "peter griffin",
        "TopicEntityName": "Peter Griffin",
        "TopicEntityMid": "m.03n6jv",
        "InferentialChain": [
          "tv.tv_character.appeared_in_tv_program",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02nsjvf",
            "EntityName": "Voice",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.special_performance_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.021yw7",
            "EntityName": "Seth MacFarlane"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03n6jv": "Peter Griffin"
    },
    "qid_topic_entity": {
      "Q28465": "Peter Griffin"
    },
    "index": 94
  },
  {
    "QuestionId": "WebQTest-1915",
    "RawQuestion": "where did harry s truman go to school?",
    "ProcessedQuestion": "where did harry s truman go to school",
    "Parses": [
      {
        "ParseId": "WebQTest-1915.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09bg4l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09bg4l ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "harry s truman",
        "TopicEntityName": "Harry S. Truman",
        "TopicEntityMid": "m.09bg4l",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016vf7",
            "EntityName": "University of Missouri\u2013Kansas City"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064r775",
            "EntityName": "University of Missouri\u2013Kansas City School of Law"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bvjpw",
            "EntityName": "William Chrisman High School"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09bg4l": "Harry S. Truman"
    },
    "qid_topic_entity": {
      "Q11613": "Harry S. Truman"
    },
    "index": 95
  },
  {
    "QuestionId": "WebQTest-257",
    "RawQuestion": "who was the soviet leader during world war ii?",
    "ProcessedQuestion": "who was the soviet leader during world war ii",
    "Parses": [
      {
        "ParseId": "WebQTest-257.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05vz3zq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05vz3zq ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?x ns:military.military_person.participated_in_conflicts ns:m.081pw .\n}\n",
        "PotentialTopicEntityMention": "soviet",
        "TopicEntityName": "Soviet Union",
        "TopicEntityMid": "m.05vz3zq",
        "InferentialChain": [
          "government.governmental_jurisdiction.governing_officials",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.081pw",
            "EntityName": "World War II",
            "SourceNodeIndex": 1,
            "NodePredicate": "military.military_person.participated_in_conflicts",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bphp",
            "EntityName": "Nikita Khrushchev"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d8xy",
            "EntityName": "Leonid Brezhnev"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05vz3zq": "Soviet Union"
    },
    "qid_topic_entity": {
      "Q15180": "Soviet Union"
    },
    "index": 96
  },
  {
    "QuestionId": "WebQTest-633",
    "RawQuestion": "what is claire danes famous for?",
    "ProcessedQuestion": "what is claire danes famous for",
    "Parses": [
      {
        "ParseId": "WebQTest-633.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01gq0b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01gq0b ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "claire danes",
        "TopicEntityName": "Claire Danes",
        "TopicEntityMid": "m.01gq0b",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hrh1q",
            "EntityName": "Actor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gjzk",
            "EntityName": "Television producer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0np9r",
            "EntityName": "Voice Actor"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01gq0b": "Claire Danes"
    },
    "qid_topic_entity": {
      "Q867813": "Claire Danes"
    },
    "index": 97
  },
  {
    "QuestionId": "WebQTest-1004",
    "RawQuestion": "what movies did christopher plummer play in?",
    "ProcessedQuestion": "what movies did christopher plummer play in",
    "Parses": [
      {
        "ParseId": "WebQTest-1004.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ycbq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ycbq ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "christopher plummer",
        "TopicEntityName": "Christopher Plummer",
        "TopicEntityMid": "m.01ycbq",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010h352r",
            "EntityName": "Elsa & Fred"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011f26pr",
            "EntityName": "Remember"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011yth",
            "EntityName": "The Insider"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012wjtcf",
            "EntityName": "I Love N.Y."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015bpl",
            "EntityName": "Star Trek VI: The Undiscovered Country"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01jwxx",
            "EntityName": "Battle of Britain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01rwyq",
            "EntityName": "Malcolm X"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0224yq",
            "EntityName": "The Fall of the Roman Empire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0269yjk",
            "EntityName": "Little Gloria... Happy at Last"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026n9yk",
            "EntityName": "Money"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027c4mq",
            "EntityName": "Stage Struck"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027r7k",
            "EntityName": "Murder by Decree"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pgkdn",
            "EntityName": "Triple Cross"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q9_sn",
            "EntityName": "A Doll's House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qjg31",
            "EntityName": "Young Catherine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qqrpy",
            "EntityName": "Dolores Claiborne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qy2zv",
            "EntityName": "Lily in Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r79_h",
            "EntityName": "The Imaginarium of Doctor Parnassus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rn00y",
            "EntityName": "Up"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rn15c",
            "EntityName": "The Pyx"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02w0_2l",
            "EntityName": "Babes in Toyland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wz1ch",
            "EntityName": "Eyewitness"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x983k",
            "EntityName": "The Clown at Midnight"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02xkm8r",
            "EntityName": "Firehead"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z0nhq",
            "EntityName": "Nicholas Nickleby"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z0qgs",
            "EntityName": "9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z14lh",
            "EntityName": "American Tragedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z7v8z",
            "EntityName": "Hamlet at Elsinore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.032xx4",
            "EntityName": "Wolf"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.033srr",
            "EntityName": "National Treasure"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03grp9d",
            "EntityName": "Man in the Chair"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03hhtw_",
            "EntityName": "Lucky Break"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03jsdr",
            "EntityName": "Ararat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03mddt9",
            "EntityName": "Riel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03p_np",
            "EntityName": "Somewhere in Time"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03qj86j",
            "EntityName": "The Amateur"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03vp54",
            "EntityName": "An American Tail"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03y8bw0",
            "EntityName": "The Spiral Staircase"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03y96y8",
            "EntityName": "My Dog Tulip"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047myg9",
            "EntityName": "The Last Station"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.049mql",
            "EntityName": "Alexander"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f6hpg",
            "EntityName": "A Hazard of Hearts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04g14gk",
            "EntityName": "Conduct Unbecoming"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gm93",
            "EntityName": "Aces High"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j0834",
            "EntityName": "Already Dead"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j0f9m",
            "EntityName": "The Conspiracy of Fear"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j0ls5",
            "EntityName": "Liar's Edge"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j1_xc",
            "EntityName": "Blackheart"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j16jd",
            "EntityName": "Blizzard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j1j4g",
            "EntityName": "The Dinosaur Hunter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j27vd",
            "EntityName": "Prototype"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j2m2s",
            "EntityName": "The First Circle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jdgq",
            "EntityName": "Dracula 2000"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jh6fj",
            "EntityName": "Lock Up Your Daughters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jmkts",
            "EntityName": "Nobody Runs Forever"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04pmnt",
            "EntityName": "The New World"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04qgzk",
            "EntityName": "Dreamscape"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ynd_",
            "EntityName": "Cold Creek Manor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.051zdz6",
            "EntityName": "The Boss' Wife"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0520m52",
            "EntityName": "Wind Across the Everglades"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b5472",
            "EntityName": "Our Fathers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05f05n",
            "EntityName": "Inside Daisy Clover"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05r1bb",
            "EntityName": "The Return of the Pink Panther"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zqyzp",
            "EntityName": "When the Circus Came to Town"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zrzs1",
            "EntityName": "Shadow Dancing"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065qhp",
            "EntityName": "Rock-a-Doodle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065tqqx",
            "EntityName": "On Golden Pond"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.068__1",
            "EntityName": "The Night of the Generals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.069687",
            "EntityName": "Hanover Street"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06vggv",
            "EntityName": "Gandahar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06zk4vw",
            "EntityName": "The Man Who Planted Trees"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06zp5gf",
            "EntityName": "Secrets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07_7th",
            "EntityName": "Possessed"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.076xkps",
            "EntityName": "Priest"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.078sj4",
            "EntityName": "Syriana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.079f7l",
            "EntityName": "The Scarlet and the Black"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07dzb3",
            "EntityName": "Must Love Dogs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07j6w",
            "EntityName": "12 Monkeys"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.083fl",
            "EntityName": "Waterloo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.087623",
            "EntityName": "Where the Heart Is"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08fsq3",
            "EntityName": "Full Disclosure"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08xvx8",
            "EntityName": "Starcrash"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09db8r",
            "EntityName": "The Boy in Blue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m6kg",
            "EntityName": "A Beautiful Mind"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09nl36",
            "EntityName": "Inside Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09pyqc",
            "EntityName": "The Man Who Would Be King"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09v2wgp",
            "EntityName": "Winchell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b44shh",
            "EntityName": "Beginners"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b4gnw",
            "EntityName": "Dragnet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b753df",
            "EntityName": "Ordeal by Innocence"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b79dp9",
            "EntityName": "Impolite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b813t",
            "EntityName": "Vampire in Venice"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bbmkh",
            "EntityName": "The Lake House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bbr312",
            "EntityName": "Night Flight"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bbw1jk",
            "EntityName": "The Day That Shook the World"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bg1bn",
            "EntityName": "The Gospel of John"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhbwpw",
            "EntityName": "Heidi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bnqf7",
            "EntityName": "Madeline: Lost in Paris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bvpzw5",
            "EntityName": "Oedipus the King"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c3tmhs",
            "EntityName": "The Royal Hunt of the Sun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c5fq4",
            "EntityName": "Woman Wanted"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0chdsfl",
            "EntityName": "A Marriage: Georgia O'Keeffe and Alfred Stieglitz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cq7tx",
            "EntityName": "The Sound of Music"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crw6bn",
            "EntityName": "Four Minutes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crybp9",
            "EntityName": "Hidden Agenda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0czbcwb",
            "EntityName": "The Assignment"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d6mrfb",
            "EntityName": "Highpoint"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ddgbq3",
            "EntityName": "Souvenir"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0df1tr",
            "EntityName": "Harrison Bergeron"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dgq_kn",
            "EntityName": "The Girl with the Dragon Tattoo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dgr9sj",
            "EntityName": "Five Good Years"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dnn1j",
            "EntityName": "The Silent Partner"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fc8w8",
            "EntityName": "Closing the Ring"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fdrns",
            "EntityName": "International Velvet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g0hgp",
            "EntityName": "Rumpelstiltskin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gh5_tc",
            "EntityName": "Silver Blaze"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gzqzl",
            "EntityName": "Emotional Arithmetic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hlpnhn",
            "EntityName": "Barrymore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jt2423",
            "EntityName": "Dark Descent of the Forgotten Empress"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k3ddp2",
            "EntityName": "Kali the Little Vampire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0njcp_c",
            "EntityName": "Skeletons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pmf3l5",
            "EntityName": "The Gnomes' Great Adventure"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0r8w0dm",
            "EntityName": "Imagine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rpfm51",
            "EntityName": "The Legend of Sarila"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rpt56y",
            "EntityName": "The Tempest"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0v_pgt2",
            "EntityName": "Hector and the Search for Happiness"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0x0gfps",
            "EntityName": "Caesar and Cleopatra"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0xnph63",
            "EntityName": "Muhammad Ali's Greatest Fight"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ztkpk6",
            "EntityName": "The Forger"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01ycbq": "Christopher Plummer"
    },
    "qid_topic_entity": {
      "Q190523": "Christopher Plummer"
    },
    "index": 98
  },
  {
    "QuestionId": "WebQTest-797",
    "RawQuestion": "what is the zip code for newark california?",
    "ProcessedQuestion": "what is the zip code for newark california",
    "Parses": [
      {
        "ParseId": "WebQTest-797.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0qx_6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0qx_6 ns:location.citytown.postal_codes ?x .\n}\n",
        "PotentialTopicEntityMention": "newark california",
        "TopicEntityName": "Newark",
        "TopicEntityMid": "m.0qx_6",
        "InferentialChain": [
          "location.citytown.postal_codes"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zjg6s",
            "EntityName": "94560"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0qx_6": "Newark"
    },
    "qid_topic_entity": {
      "Q850812": "Newark"
    },
    "index": 99
  },
  {
    "QuestionId": "WebQTest-1252",
    "RawQuestion": "who plays eowyn in lord of the rings?",
    "ProcessedQuestion": "who plays eowyn in lord of the rings",
    "Parses": [
      {
        "ParseId": "WebQTest-1252.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017jd9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017jd9 ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0gynx .\n}\n",
        "PotentialTopicEntityMention": "lord of the rings",
        "TopicEntityName": "The Lord of the Rings: The Return of the King",
        "TopicEntityMid": "m.017jd9",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0gynx",
            "EntityName": "\u00c9owyn",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0294fd",
            "EntityName": "Miranda Otto"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.017jd9": "The Lord of the Rings: The Return of the King"
    },
    "qid_topic_entity": {
      "Q131074": "The Lord of the Rings: The Return of the King"
    },
    "index": 100
  },
  {
    "QuestionId": "WebQTest-184",
    "RawQuestion": "what state does romney live in?",
    "ProcessedQuestion": "what state does romney live in",
    "Parses": [
      {
        "ParseId": "WebQTest-184.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0271_s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0271_s ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n?x ns:common.topic.notable_types ns:m.0kpys4 .\n}\n",
        "PotentialTopicEntityMention": "romney",
        "TopicEntityName": "Mitt Romney",
        "TopicEntityMid": "m.0271_s",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpys4",
            "EntityName": "US State",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05k7sb",
            "EntityName": "Massachusetts"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0271_s": "Mitt Romney"
    },
    "qid_topic_entity": {
      "Q4496": "Mitt Romney"
    },
    "index": 101
  },
  {
    "QuestionId": "WebQTest-2012",
    "RawQuestion": "what is london uk time zone?",
    "ProcessedQuestion": "what is london uk time zone",
    "Parses": [
      {
        "ParseId": "WebQTest-2012.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04jpl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04jpl ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "london",
        "TopicEntityName": "London",
        "TopicEntityMid": "m.04jpl",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03bdv",
            "EntityName": "Greenwich Mean Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04jpl": "London"
    },
    "qid_topic_entity": {
      "Q84": "London"
    },
    "index": 102
  },
  {
    "QuestionId": "WebQTest-318",
    "RawQuestion": "what is the money of switzerland called?",
    "ProcessedQuestion": "what is the money of switzerland called",
    "Parses": [
      {
        "ParseId": "WebQTest-318.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mzp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mzp ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "switzerland",
        "TopicEntityName": "Switzerland",
        "TopicEntityMid": "m.06mzp",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_h4b",
            "EntityName": "Swiss franc"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06mzp": "Switzerland"
    },
    "qid_topic_entity": {
      "Q39": "Switzerland"
    },
    "index": 103
  },
  {
    "QuestionId": "WebQTest-1007",
    "RawQuestion": "what district does nancy pelosi represent?",
    "ProcessedQuestion": "what district does nancy pelosi represent",
    "Parses": [
      {
        "ParseId": "WebQTest-1007.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012v1t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012v1t ns:base.government2.elected_official.elected_positions_held ?y .\n?y ns:base.government2.elected_government_positions_held.district_represented ?x .\n}\n",
        "PotentialTopicEntityMention": "nancy pelosi",
        "TopicEntityName": "Nancy Pelosi",
        "TopicEntityMid": "m.012v1t",
        "InferentialChain": [
          "base.government2.elected_official.elected_positions_held",
          "base.government2.elected_government_positions_held.district_represented"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09d70l",
            "EntityName": "California\u2019s 5th congressional district"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b10j3",
            "EntityName": "California\u2019s 8th congressional district"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1007.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012v1t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012v1t ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.district_represented ?x .\n}\n",
        "PotentialTopicEntityMention": "nancy pelosi",
        "TopicEntityName": "Nancy Pelosi",
        "TopicEntityMid": "m.012v1t",
        "InferentialChain": [
          "government.politician.government_positions_held",
          "government.government_position_held.district_represented"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09d70l",
            "EntityName": "California\u2019s 5th congressional district"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b10j3",
            "EntityName": "California\u2019s 8th congressional district"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dv6yz",
            "EntityName": "California\u2019s 12th congressional district"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.012v1t": "Nancy Pelosi"
    },
    "qid_topic_entity": {
      "Q170581": "Nancy Pelosi"
    },
    "index": 104
  },
  {
    "QuestionId": "WebQTest-1911",
    "RawQuestion": "where did scott fitzgerald go to college?",
    "ProcessedQuestion": "where did scott fitzgerald go to college",
    "Parses": [
      {
        "ParseId": "WebQTest-1911.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02zjd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02zjd ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "scott fitzgerald",
        "TopicEntityName": "F. Scott Fitzgerald",
        "TopicEntityMid": "m.02zjd",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zl0",
            "EntityName": "Princeton University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02zjd": "F. Scott Fitzgerald"
    },
    "qid_topic_entity": {
      "Q93354": "F. Scott Fitzgerald"
    },
    "index": 105
  },
  {
    "QuestionId": "WebQTest-1121",
    "RawQuestion": "what is kentucky state slogan?",
    "ProcessedQuestion": "what is kentucky state slogan",
    "Parses": [
      {
        "ParseId": "WebQTest-1121.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0498y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0498y ns:government.governmental_jurisdiction.official_symbols ?y .\n?y ns:location.location_symbol_relationship.symbol ?x .\n?y ns:location.location_symbol_relationship.Kind_of_symbol ns:m.0j749 .\n}\n",
        "PotentialTopicEntityMention": "kentucky",
        "TopicEntityName": "Kentucky",
        "TopicEntityMid": "m.0498y",
        "InferentialChain": [
          "government.governmental_jurisdiction.official_symbols",
          "location.location_symbol_relationship.symbol"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0j749",
            "EntityName": "Motto",
            "SourceNodeIndex": 0,
            "NodePredicate": "location.location_symbol_relationship.Kind_of_symbol",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b0jhz",
            "EntityName": "United we stand, divided we fall"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0498y": "Kentucky"
    },
    "qid_topic_entity": {
      "Q1603": "Kentucky"
    },
    "index": 106
  },
  {
    "QuestionId": "WebQTest-224",
    "RawQuestion": "where did william morris go to college?",
    "ProcessedQuestion": "where did william morris go to college",
    "Parses": [
      {
        "ParseId": "WebQTest-224.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08304)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08304 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "william morris",
        "TopicEntityName": "William Morris",
        "TopicEntityMid": "m.08304",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07tgn",
            "EntityName": "University of Oxford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ylvj",
            "EntityName": "Exeter College, Oxford"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.08304": "William Morris"
    },
    "qid_topic_entity": {
      "Q182589": "William Morris"
    },
    "index": 107
  },
  {
    "QuestionId": "WebQTest-617",
    "RawQuestion": "where did tim tebow grow up?",
    "ProcessedQuestion": "where did tim tebow grow up",
    "Parses": [
      {
        "ParseId": "WebQTest-617.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g7km1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g7km1 ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "tim tebow",
        "TopicEntityName": "Tim Tebow",
        "TopicEntityMid": "m.0g7km1",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dvzy",
            "EntityName": "Makati"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0g7km1": "Tim Tebow"
    },
    "qid_topic_entity": {
      "Q517467": "Tim Tebow"
    },
    "index": 108
  },
  {
    "QuestionId": "WebQTest-1251",
    "RawQuestion": "which countries speak germanic languages?",
    "ProcessedQuestion": "which countries speak germanic languages",
    "Parses": [
      {
        "ParseId": "WebQTest-1251.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04306rv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04306rv ns:language.human_language.countries_spoken_in ?x .\n?x ns:location.country.official_language ns:m.04306rv .\n}\n",
        "PotentialTopicEntityMention": "germanic languages",
        "TopicEntityName": "German Language",
        "TopicEntityMid": "m.04306rv",
        "InferentialChain": [
          "language.human_language.countries_spoken_in"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04306rv",
            "EntityName": "German Language",
            "SourceNodeIndex": 0,
            "NodePredicate": "location.country.official_language",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0154j",
            "EntityName": "Belgium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0345h",
            "EntityName": "Germany"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03f2w",
            "EntityName": "East Germany"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04g61",
            "EntityName": "Luxembourg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j53",
            "EntityName": "Liechtenstein"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mzp",
            "EntityName": "Switzerland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h7x",
            "EntityName": "Austria"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04306rv": "German Language"
    },
    "qid_topic_entity": {
      "Q188": "German Language"
    },
    "index": 109
  },
  {
    "QuestionId": "WebQTest-124",
    "RawQuestion": "what language does egyptian people speak?",
    "ProcessedQuestion": "what language does egyptian people speak",
    "Parses": [
      {
        "ParseId": "WebQTest-124.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k54)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k54 ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "egyptian",
        "TopicEntityName": "Egypt",
        "TopicEntityMid": "m.02k54",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025rvv7",
            "EntityName": "Modern Standard Arabic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02k54": "Egypt"
    },
    "qid_topic_entity": {
      "Q79": "Egypt"
    },
    "index": 110
  },
  {
    "QuestionId": "WebQTest-1230",
    "RawQuestion": "what to see in christchurch new zealand?",
    "ProcessedQuestion": "what to see in christchurch new zealand",
    "Parses": [
      {
        "ParseId": "WebQTest-1230.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02yc5b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02yc5b ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "christchurch",
        "TopicEntityName": "Christchurch",
        "TopicEntityMid": "m.02yc5b",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qld5z",
            "EntityName": "International Antarctic Centre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03vzw6",
            "EntityName": "Ferrymead Heritage Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04bgpr",
            "EntityName": "Cathedral Square, Christchurch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zrshr",
            "EntityName": "Willowbank Wildlife Reserve, Christchurch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.061hdn",
            "EntityName": "Christchurch Botanic Gardens"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06drcd",
            "EntityName": "Christchurch Arts Centre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nnvz",
            "EntityName": "Air Force Museum of New Zealand"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06srm9",
            "EntityName": "Canterbury Museum, Christchurch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d902k",
            "EntityName": "TranzAlpine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gh8h3s",
            "EntityName": "Lyttelton Timeball Station"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02yc5b": "Christchurch"
    },
    "qid_topic_entity": {
      "Q79990": "Christchurch"
    },
    "index": 111
  },
  {
    "QuestionId": "WebQTest-204",
    "RawQuestion": "what is the capital of modern egypt?",
    "ProcessedQuestion": "what is the capital of modern egypt",
    "Parses": [
      {
        "ParseId": "WebQTest-204.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k54)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k54 ns:location.country.capital ?x .\n}\n",
        "PotentialTopicEntityMention": "egypt",
        "TopicEntityName": "Egypt",
        "TopicEntityMid": "m.02k54",
        "InferentialChain": [
          "location.country.capital"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01w2v",
            "EntityName": "Cairo"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02k54": "Egypt"
    },
    "qid_topic_entity": {
      "Q79": "Egypt"
    },
    "index": 112
  },
  {
    "QuestionId": "WebQTest-1070",
    "RawQuestion": "what are the names of michael jackson's 3 children?",
    "ProcessedQuestion": "what are the names of michael jackson 's 3 children",
    "Parses": [
      {
        "ParseId": "WebQTest-1070.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09889g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09889g ns:people.person.children ?x .\n}\n",
        "PotentialTopicEntityMention": "michael jackson",
        "TopicEntityName": "Michael Jackson",
        "TopicEntityMid": "m.09889g",
        "InferentialChain": [
          "people.person.children"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0598rm4",
            "EntityName": "Paris-Michael Katherine Jackson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0598rmb",
            "EntityName": "Michael Joseph Jackson, Jr."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065qbyj",
            "EntityName": "Prince Michael Jackson II"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09889g": "Michael Jackson"
    },
    "qid_topic_entity": {
      "Q2831": "Michael Jackson"
    },
    "index": 113
  },
  {
    "QuestionId": "WebQTest-166",
    "RawQuestion": "what was dr seuss education?",
    "ProcessedQuestion": "what was dr seuss education",
    "Parses": [
      {
        "ParseId": "WebQTest-166.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02g3w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02g3w ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "dr seuss",
        "TopicEntityName": "Theodore Lesieg",
        "TopicEntityMid": "m.02g3w",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bqy",
            "EntityName": "Dartmouth College"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07tgn",
            "EntityName": "University of Oxford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ym1n",
            "EntityName": "Lincoln College, Oxford"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02g3w": "Theodore Lesieg"
    },
    "qid_topic_entity": {
      "Q298685": "Theodore Lesieg"
    },
    "index": 114
  },
  {
    "QuestionId": "WebQTest-1217",
    "RawQuestion": "what is monta ellis career high points?",
    "ProcessedQuestion": "what is monta ellis career high points",
    "Parses": [
      {
        "ParseId": "WebQTest-1217.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06rsnl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06rsnl ns:sports.sports_award_winner.awards ?y .\n?y ns:sports.sports_award.award ?x .\n}\n",
        "PotentialTopicEntityMention": "monta ellis",
        "TopicEntityName": "Monta Ellis",
        "TopicEntityMid": "m.06rsnl",
        "InferentialChain": [
          "sports.sports_award_winner.awards",
          "sports.sports_award.award"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06js8m",
            "EntityName": "NBA Most Improved Player Award"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06rsnl": "Monta Ellis"
    },
    "qid_topic_entity": {
      "Q381746": "Monta Ellis"
    },
    "index": 115
  },
  {
    "QuestionId": "WebQTest-717",
    "RawQuestion": "what timezone is tucson arizona in right now?",
    "ProcessedQuestion": "what timezone is tucson arizona in right now",
    "Parses": [
      {
        "ParseId": "WebQTest-717.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fr0t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fr0t ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "tucson arizona",
        "TopicEntityName": "Tucson",
        "TopicEntityMid": "m.0fr0t",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hczc",
            "EntityName": "Mountain Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0fr0t": "Tucson"
    },
    "qid_topic_entity": {
      "Q18575": "Tucson"
    },
    "index": 116
  },
  {
    "QuestionId": "WebQTest-575",
    "RawQuestion": "who is louisiana state senator?",
    "ProcessedQuestion": "who is louisiana state senator",
    "Parses": [
      {
        "ParseId": "WebQTest-575.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04ly1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04ly1 ns:government.political_district.representatives ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.office_position_or_title ns:m.02_7l8y .\n}\n",
        "PotentialTopicEntityMention": "louisiana",
        "TopicEntityName": "Louisiana",
        "TopicEntityMid": "m.04ly1",
        "InferentialChain": [
          "government.political_district.representatives",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02_7l8y",
            "EntityName": "United States Senator",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.office_position_or_title",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_nrx",
            "EntityName": "John Slidell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019tyn",
            "EntityName": "Mary Landrieu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01bxb3",
            "EntityName": "Edward Livingston"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fptq",
            "EntityName": "Judah P. Benjamin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01gqtx",
            "EntityName": "Russell B. Long"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01xctw",
            "EntityName": "John Breaux"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025jr2",
            "EntityName": "David Vitter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02s1w9",
            "EntityName": "William C. C. Claiborne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0337h3",
            "EntityName": "Edward Douglass White"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jm72",
            "EntityName": "Pierre Soul\u00e9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04r1w2",
            "EntityName": "James Brown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05mmtq",
            "EntityName": "Thomas Posey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05tvn8",
            "EntityName": "Charles Magill Conrad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.095vrl",
            "EntityName": "Eligius Fromentin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b079s",
            "EntityName": "Jean Noel Destr\u00e9han"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cvwfs",
            "EntityName": "Henry Johnson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d04_1",
            "EntityName": "Alexander Barrow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d21y8",
            "EntityName": "Charles Dominique Joseph Bouligny"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d2rbw",
            "EntityName": "Jeremiah B. Howell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d2s6n",
            "EntityName": "George A. Waggaman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d3287",
            "EntityName": "Robert C. Nicholas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d32rg",
            "EntityName": "Allan B. Magruder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d32vk",
            "EntityName": "Josiah S. Johnston"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d3g7j",
            "EntityName": "Alexander Porter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d3g9m",
            "EntityName": "Alexandre Mouton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0py1g",
            "EntityName": "Huey Long"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04ly1": "Louisiana"
    },
    "qid_topic_entity": {
      "Q1588": "Louisiana"
    },
    "index": 117
  },
  {
    "QuestionId": "WebQTest-96",
    "RawQuestion": "where did richard nixon die?",
    "ProcessedQuestion": "where did richard nixon die",
    "Parses": [
      {
        "ParseId": "WebQTest-96.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06c97)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06c97 ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "richard nixon",
        "TopicEntityName": "Richard Nixon",
        "TopicEntityMid": "m.06c97",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_286",
            "EntityName": "New York City"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06c97": "Richard Nixon"
    },
    "qid_topic_entity": {
      "Q9588": "Richard Nixon"
    },
    "index": 118
  },
  {
    "QuestionId": "WebQTest-1357",
    "RawQuestion": "where is the fukushima daiichi nuclear power station?",
    "ProcessedQuestion": "where is the fukushima daiichi nuclear power station",
    "Parses": [
      {
        "ParseId": "WebQTest-1357.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02vkzy2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02vkzy2 ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "fukushima daiichi nuclear power station",
        "TopicEntityName": "Fukushima Daiichi Nuclear Power Plant",
        "TopicEntityMid": "m.02vkzy2",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_3d",
            "EntityName": "Japan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03k_g5",
            "EntityName": "Okuma"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02vkzy2": "Fukushima Daiichi Nuclear Power Plant"
    },
    "qid_topic_entity": {
      "Q114295": "Fukushima Daiichi Nuclear Power Plant"
    },
    "index": 119
  },
  {
    "QuestionId": "WebQTest-968",
    "RawQuestion": "what do people speak in germany?",
    "ProcessedQuestion": "what do people speak in germany",
    "Parses": [
      {
        "ParseId": "WebQTest-968.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0345h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0345h ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "germany",
        "TopicEntityName": "Germany",
        "TopicEntityMid": "m.0345h",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0140n_",
            "EntityName": "Bavarian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02nt2n",
            "EntityName": "Frisian, Northern Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04306rv",
            "EntityName": "German Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lmb2",
            "EntityName": "Turoyo Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06d010",
            "EntityName": "Saxon, Upper Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-968.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0345h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0345h ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "germany",
        "TopicEntityName": "Germany",
        "TopicEntityMid": "m.0345h",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxrs_",
            "EntityName": "Low German"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04306rv",
            "EntityName": "German Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0345h": "Germany"
    },
    "qid_topic_entity": {
      "Q183": "Germany"
    },
    "index": 120
  },
  {
    "QuestionId": "WebQTest-277",
    "RawQuestion": "who was esther's husband?",
    "ProcessedQuestion": "who was esther 's husband",
    "Parses": [
      {
        "ParseId": "WebQTest-277.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02pn7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02pn7 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "PotentialTopicEntityMention": "esther",
        "TopicEntityName": "Esther",
        "TopicEntityMid": "m.02pn7",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cjm1",
            "EntityName": "Xerxes I"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hy00",
            "EntityName": "Ahasuerus"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02pn7": "Esther"
    },
    "qid_topic_entity": {
      "Q732413": "Esther"
    },
    "index": 121
  },
  {
    "QuestionId": "WebQTest-1774",
    "RawQuestion": "who was judi dench married to?",
    "ProcessedQuestion": "who was judi dench married to",
    "Parses": [
      {
        "ParseId": "WebQTest-1774.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lpjn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lpjn ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "PotentialTopicEntityMention": "judi dench",
        "TopicEntityName": "Judi Dench",
        "TopicEntityMid": "m.0lpjn",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016sm7",
            "EntityName": "Michael Williams"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0lpjn": "Judi Dench"
    },
    "qid_topic_entity": {
      "Q28054": "Judi Dench"
    },
    "index": 122
  },
  {
    "QuestionId": "WebQTest-306",
    "RawQuestion": "who is the head coach of inter milan?",
    "ProcessedQuestion": "who is the head coach of inter milan",
    "Parses": [
      {
        "ParseId": "WebQTest-306.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03x6m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03x6m ns:sports.sports_team.coaches ?y .\n?y ns:sports.sports_team_coach_tenure.coach ?x .\n?y ns:sports.sports_team_coach_tenure.position ns:m.02md_2 .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_coach_tenure.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_coach_tenure.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_coach_tenure.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_coach_tenure.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "inter milan",
        "TopicEntityName": "Inter Milan",
        "TopicEntityMid": "m.03x6m",
        "InferentialChain": [
          "sports.sports_team.coaches",
          "sports.sports_team_coach_tenure.coach"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02md_2",
            "EntityName": "Head coach",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_coach_tenure.position",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_coach_tenure.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_coach_tenure.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026g1wf",
            "EntityName": "Walter Mazzarri"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03x6m": "Inter Milan"
    },
    "qid_topic_entity": {
      "Q631": "Inter Milan"
    },
    "index": 123
  },
  {
    "QuestionId": "WebQTest-1429",
    "RawQuestion": "what currency is accepted in new zealand?",
    "ProcessedQuestion": "what currency is accepted in new zealand",
    "Parses": [
      {
        "ParseId": "WebQTest-1429.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ctw_b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ctw_b ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "new zealand",
        "TopicEntityName": "New Zealand",
        "TopicEntityMid": "m.0ctw_b",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015f1d",
            "EntityName": "New Zealand dollar"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ctw_b": "New Zealand"
    },
    "qid_topic_entity": {
      "Q664": "New Zealand"
    },
    "index": 124
  },
  {
    "QuestionId": "WebQTest-214",
    "RawQuestion": "which continents were part of the roman empire?",
    "ProcessedQuestion": "which continents were part of the roman empire",
    "Parses": [
      {
        "ParseId": "WebQTest-214.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? Partially Contained By returns regions and continents. Can we take the regions and get the continent that contains the region?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06cmp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06cmp ns:location.location.partially_contained_by ?y .\n?y ns:location.partial_containment_relationship.partially_contained_by ?x .\n}\n",
        "PotentialTopicEntityMention": "roman empire",
        "TopicEntityName": "Roman Empire",
        "TopicEntityMid": "m.06cmp",
        "InferentialChain": [
          "location.location.partially_contained_by",
          "location.partial_containment_relationship.partially_contained_by"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02j9z",
            "EntityName": "Europe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wsz",
            "EntityName": "Middle East"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05g2v",
            "EntityName": "North Africa"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06cmp": "Roman Empire"
    },
    "qid_topic_entity": {
      "Q2277": "Roman Empire"
    },
    "index": 125
  },
  {
    "QuestionId": "WebQTest-1586",
    "RawQuestion": "who was queen isabella's mother?",
    "ProcessedQuestion": "who was queen isabella 's mother",
    "Parses": [
      {
        "ParseId": "WebQTest-1586.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jd6m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jd6m ns:people.person.parents ?x .\n?x ns:people.person.gender ns:m.02zsn .\n}\n",
        "PotentialTopicEntityMention": "queen isabella",
        "TopicEntityName": "Isabella I of Castile",
        "TopicEntityMid": "m.0jd6m",
        "InferentialChain": [
          "people.person.parents"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02zsn",
            "EntityName": "Female",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.person.gender",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d18m0",
            "EntityName": "Isabella of Portugal, Queen of Castile"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jd6m": "Isabella I of Castile"
    },
    "qid_topic_entity": {
      "Q45859": "Isabella I of Castile"
    },
    "index": 126
  },
  {
    "QuestionId": "WebQTest-213",
    "RawQuestion": "who did scarlett johansson date?",
    "ProcessedQuestion": "who did scarlett johansson date",
    "Parses": [
      {
        "ParseId": "WebQTest-213.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02114t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02114t ns:base.popstra.celebrity.dated ?y .\n?y ns:base.popstra.dated.participant ?x .\n}\n",
        "PotentialTopicEntityMention": "scarlett johansson",
        "TopicEntityName": "Scarlett Johansson",
        "TopicEntityMid": "m.02114t",
        "InferentialChain": [
          "base.popstra.celebrity.dated",
          "base.popstra.dated.participant"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01g0jn",
            "EntityName": "nm1157013"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01kgv4",
            "EntityName": "Josh Hartnett"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028r4y",
            "EntityName": "Topher Grace"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02fybl",
            "EntityName": "Jared Leto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.036hf4",
            "EntityName": "Ryan Reynolds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.055zkh",
            "EntityName": "Patrick Wilson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j1yf",
            "EntityName": "Justin Timberlake"
          }
        ]
      },
      {
        "ParseId": "WebQTest-213.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02114t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02114t ns:celebrities.celebrity.sexual_relationships ?y .\n?y ns:celebrities.romantic_relationship.celebrity ?x .\n}\n",
        "PotentialTopicEntityMention": "scarlett johansson",
        "TopicEntityName": "Scarlett Johansson",
        "TopicEntityMid": "m.02114t",
        "InferentialChain": [
          "celebrities.celebrity.sexual_relationships",
          "celebrities.romantic_relationship.celebrity"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01g0jn",
            "EntityName": "nm1157013"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01kgv4",
            "EntityName": "Josh Hartnett"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01qscs",
            "EntityName": "Benicio del Toro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02fybl",
            "EntityName": "Jared Leto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j1yf",
            "EntityName": "Justin Timberlake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0wz5p2s",
            "EntityName": "Romain Dauriac"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02114t": "Scarlett Johansson"
    },
    "qid_topic_entity": {
      "Q34436": "Scarlett Johansson"
    },
    "index": 127
  },
  {
    "QuestionId": "WebQTest-1085",
    "RawQuestion": "who was demi lovato dating?",
    "ProcessedQuestion": "who was demi lovato dating",
    "Parses": [
      {
        "ParseId": "WebQTest-1085.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02wb6yq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02wb6yq ns:base.popstra.celebrity.dated ?y .\n?y ns:base.popstra.dated.participant ?x .\n}\n",
        "PotentialTopicEntityMention": "demi lovato",
        "TopicEntityName": "Demi Lovato",
        "TopicEntityMid": "m.02wb6yq",
        "InferentialChain": [
          "base.popstra.celebrity.dated",
          "base.popstra.dated.participant"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cg2rv",
            "EntityName": "Nicholas Braun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04cr6qv",
            "EntityName": "Joe Jonas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cq3wn",
            "EntityName": "Cody Linley"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1085.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02wb6yq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02wb6yq ns:celebrities.celebrity.sexual_relationships ?y .\n?y ns:celebrities.romantic_relationship.celebrity ?x .\n}\n",
        "PotentialTopicEntityMention": "demi lovato",
        "TopicEntityName": "Demi Lovato",
        "TopicEntityMid": "m.02wb6yq",
        "InferentialChain": [
          "celebrities.celebrity.sexual_relationships",
          "celebrities.romantic_relationship.celebrity"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hhtj",
            "EntityName": "Wilmer Valderrama"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04cr6qv",
            "EntityName": "Joe Jonas"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02wb6yq": "Demi Lovato"
    },
    "qid_topic_entity": {
      "Q41173": "Demi Lovato"
    },
    "index": 128
  },
  {
    "QuestionId": "WebQTest-1304",
    "RawQuestion": "what was hitler the leader of?",
    "ProcessedQuestion": "what was hitler the leader of",
    "Parses": [
      {
        "ParseId": "WebQTest-1304.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??? "
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07_m9_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07_m9_ ns:organization.organization_founder.organizations_founded ?x .\n}\n",
        "PotentialTopicEntityMention": "hitler",
        "TopicEntityName": "Adolf Hitler",
        "TopicEntityMid": "m.07_m9_",
        "InferentialChain": [
          "organization.organization_founder.organizations_founded"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01c73n",
            "EntityName": "Hitler Youth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cqs",
            "EntityName": "Gestapo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03w7xf",
            "EntityName": "1st SS Panzer Division Leibstandarte SS Adolf Hitler"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05g9h",
            "EntityName": "Nazi Party"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06qmk",
            "EntityName": "Schutzstaffel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.082mc",
            "EntityName": "Waffen-SS"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.082x5",
            "EntityName": "Wehrmacht"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f6ck",
            "EntityName": "Sturmabteilung"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07_m9_": "Adolf Hitler"
    },
    "qid_topic_entity": {
      "Q352": "Adolf Hitler"
    },
    "index": 129
  },
  {
    "QuestionId": "WebQTest-1610",
    "RawQuestion": "who was gerald ford vp?",
    "ProcessedQuestion": "who was gerald ford vp",
    "Parses": [
      {
        "ParseId": "WebQTest-1610.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c_md_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c_md_ ns:government.us_president.vice_president ?x .\n}\n",
        "PotentialTopicEntityMention": "gerald ford",
        "TopicEntityName": "Gerald Ford",
        "TopicEntityMid": "m.0c_md_",
        "InferentialChain": [
          "government.us_president.vice_president"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05jd_",
            "EntityName": "Nelson Rockefeller"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0c_md_": "Gerald Ford"
    },
    "qid_topic_entity": {
      "Q9582": "Gerald Ford"
    },
    "index": 130
  },
  {
    "QuestionId": "WebQTest-440",
    "RawQuestion": "where is jason mraz from?",
    "ProcessedQuestion": "where is jason mraz from",
    "Parses": [
      {
        "ParseId": "WebQTest-440.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0259r0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0259r0 ns:music.artist.origin ?x .\n}\n",
        "PotentialTopicEntityMention": "jason mraz",
        "TopicEntityName": "Jason Mraz",
        "TopicEntityMid": "m.0259r0",
        "InferentialChain": [
          "music.artist.origin"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01n7q",
            "EntityName": "California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01wkmq",
            "EntityName": "Mechanicsville"
          }
        ]
      },
      {
        "ParseId": "WebQTest-440.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0259r0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0259r0 ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "jason mraz",
        "TopicEntityName": "Jason Mraz",
        "TopicEntityMid": "m.0259r0",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01wkmq",
            "EntityName": "Mechanicsville"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0259r0": "Jason Mraz"
    },
    "qid_topic_entity": {
      "Q192515": "Jason Mraz"
    },
    "index": 131
  },
  {
    "QuestionId": "WebQTest-108",
    "RawQuestion": "what was the book written by charles darwin?",
    "ProcessedQuestion": "what was the book written by charles darwin",
    "Parses": [
      {
        "ParseId": "WebQTest-108.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01lwx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01lwx ns:book.author.book_editions_published ?x .\n}\n",
        "PotentialTopicEntityMention": "charles darwin",
        "TopicEntityName": "Charles Darwin",
        "TopicEntityMid": "m.01lwx",
        "InferentialChain": [
          "book.author.book_editions_published"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvk_0",
            "EntityName": "Charles Darwin's zoology notes & specimen lists from H.M.S. Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvk_h",
            "EntityName": "From so simple a beginning"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvk_s",
            "EntityName": "On Natural Selection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvkw8",
            "EntityName": "Voyage of the Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvkwq",
            "EntityName": "On evolution"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvkx4",
            "EntityName": "The origin of species : complete and fully illustrated"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvkxl",
            "EntityName": "A student's introduction to Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvky0",
            "EntityName": "The expression of the emotions in man and animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvkyg",
            "EntityName": "The Structure and Distribution of Coral Reefs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvkyq",
            "EntityName": "The descent of man, and selection in relation to sex"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvkz4",
            "EntityName": "The origin of species by means of natural selection, or, The preservation of favored races in the struggle for life"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvkzl",
            "EntityName": "Charles Darwin's letters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvl01",
            "EntityName": "Charles Darwin's natural selection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvl0q",
            "EntityName": "The Autobiography of Charles Darwin (Great Minds Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvl36",
            "EntityName": "The Correspondence of Charles Darwin, Volume 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s5_",
            "EntityName": "The origin of species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s51",
            "EntityName": "The origin of species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s5j",
            "EntityName": "The origin of species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s6g",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s6q",
            "EntityName": "Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s6z",
            "EntityName": "The Origin Of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s76",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s7g",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s7q",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s7z",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s86",
            "EntityName": "The Origin Of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s8h",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s8r",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0t7v",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0t8c",
            "EntityName": "The Origin Of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0t8m",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0t8w",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0t93",
            "EntityName": "Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0t9c",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0tb2",
            "EntityName": "Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0tbc",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0tbm",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0tbx",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0tc5",
            "EntityName": "Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0wf1",
            "EntityName": "Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0wfk",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0wg1",
            "EntityName": "The origin of species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0x_6",
            "EntityName": "The Origin of Species (Collector's Library)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0x_r",
            "EntityName": "The Origin of Species (Variorum Reprint)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0xy8",
            "EntityName": "The origin of species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0xyp",
            "EntityName": "The Origin of Species (Mentor)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0xz6",
            "EntityName": "The Origin of Species (Mentor)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0xzg",
            "EntityName": "The Origin of Species (World's Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0zkt",
            "EntityName": "The Origin of Species (Enriched Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v10qf",
            "EntityName": "The Origin of Species (Oxford World's Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v11qz",
            "EntityName": "Origin of Species (Everyman's University Paperbacks)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v11tx",
            "EntityName": "The Origin of Species (Great Minds Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v136y",
            "EntityName": "The origin of species : complete and fully illustrated"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v137n",
            "EntityName": "The Origin of Species (Great Books : Learning Channel)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1385",
            "EntityName": "THE ORIGIN OF SPECIES (Wordsworth Collection) (Wordsworth Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v138q",
            "EntityName": "Origin of Species (Harvard Classics, Part 11)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v14tk",
            "EntityName": "The Origin of Species (Barnes & Noble Classics Series) (Barnes & Noble Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vd9f_",
            "EntityName": "The Autobiography of Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vd9fr",
            "EntityName": "Autobiography of Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vd9gj",
            "EntityName": "The Autobiography of Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vd9h2",
            "EntityName": "The autobiography of Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vd9hb",
            "EntityName": "Autobiography of Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vd9hm",
            "EntityName": "The Autobiography of Charles Darwin (Dodo Press)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vd9hx",
            "EntityName": "The Autobiography Of Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vd9jr",
            "EntityName": "The autobiography of Charles Darwin, 1809-1882"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vd9k6",
            "EntityName": "The Autobiography of Charles Darwin [EasyRead Edition]"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vd9kx",
            "EntityName": "The Autobiography of Charles Darwin (Large Print)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vd9lm",
            "EntityName": "The autobiography of Charles Darwin, 1809-1882"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vd9lx",
            "EntityName": "The Autobiography of Charles Darwin, and selected letters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vdbgc",
            "EntityName": "The Autobiography of Charles Darwin [EasyRead Comfort Edition]"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vdbgy",
            "EntityName": "The Autobiography of Charles Darwin [EasyRead Large Edition]"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgb60",
            "EntityName": "The descent of man, and selection in relation to sex."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgb6b",
            "EntityName": "The descent of man and selection in relation to sex."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgb6t",
            "EntityName": "The descent of man, and selection in relation to sex."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgb78",
            "EntityName": "The Descent of Man and Selection in Relation to Sex"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgch9",
            "EntityName": "The Descent of Man and Selection in Relation to Sex"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgcjf",
            "EntityName": "The Descent of Man and Selection in Relation to Sex"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgcjz",
            "EntityName": "The Descent of Man and Selection in Relation to Sex"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgd8k",
            "EntityName": "Descent of Man and Selection in Relation to Sex (Barnes & Noble Library of Essential Reading)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgd8v",
            "EntityName": "The Descent Of Man And Selection In Relation To Sex (Kessinger Publishing's Rare Reprints)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_s2",
            "EntityName": "The expression of the emotions in man and animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_sd",
            "EntityName": "The expression of the emotions in man and animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_tf",
            "EntityName": "The expression of the emotions in man and animals."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_tx",
            "EntityName": "The Expression of the Emotions in Man and Animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_vn",
            "EntityName": "The Expression Of The Emotions In Man And Animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_vy",
            "EntityName": "The Expression of the Emotions in Man And Animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_w6",
            "EntityName": "The Expression of the Emotions in Man and Animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_wr",
            "EntityName": "The Expression of the Emotions in Man And Animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vl14g",
            "EntityName": "The Expression of the Emotions in Man and Animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vl14r",
            "EntityName": "The Expression of the Emotions in Man and Animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vl150",
            "EntityName": "The Expression of the Emotions in Man and Animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vl15k",
            "EntityName": "The Expression of the Emotions in Man and Animals (Large Print Edition): The Expression of the Emotions in Man and Animals (Large Print Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vl15v",
            "EntityName": "The Expression of the Emotions in Man and Animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vl16d",
            "EntityName": "The expression of the emotions in man and animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrf1",
            "EntityName": "From So Simple a Beginning"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrq6",
            "EntityName": "Voyage Of The Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrqg",
            "EntityName": "The Voyage of the Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrqq",
            "EntityName": "The Voyage of the Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrqz",
            "EntityName": "The Voyage of the Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrr7",
            "EntityName": "The Voyage of the Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrsd",
            "EntityName": "The Correspondence of Charles Darwin, Volume 6"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrsp",
            "EntityName": "The Correspondence of Charles Darwin, Volume 11"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrsz",
            "EntityName": "The Correspondence of Charles Darwin, Volume 5"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrt7",
            "EntityName": "The Correspondence of Charles Darwin, Volume 9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrtj",
            "EntityName": "The Correspondence of Charles Darwin, Volume 10"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrtt",
            "EntityName": "The Correspondence of Charles Darwin, Volume 7"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrv3",
            "EntityName": "The Correspondence of Charles Darwin, Volume 14"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrvd",
            "EntityName": "The Correspondence of Charles Darwin, Volume 8"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrvz",
            "EntityName": "The Correspondence of Charles Darwin, Volume 15"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrw8",
            "EntityName": "The Correspondence of Charles Darwin, Volume 13"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrwl",
            "EntityName": "The Correspondence of Charles Darwin, Volume 12"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrry5",
            "EntityName": "The Correspondence of Charles Darwin, Volume 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrryj",
            "EntityName": "The Correspondence of Charles Darwin, Volume 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrryw",
            "EntityName": "The Correspondence of Charles Darwin, Volume 4"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrs1h",
            "EntityName": "The structure and distribution of coral reefs."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrs2v",
            "EntityName": "The structure and distribution of coral reefs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrs3k",
            "EntityName": "The Structure And Distribution of Coral Reefs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrsm9",
            "EntityName": "Voyage of the Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrsmk",
            "EntityName": "The voyage of the Beagle."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrt_0",
            "EntityName": "The Voyage of the \\\"Beagle\\\" (Everyman's Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrt_9",
            "EntityName": "The Voyage of the Beagle (Adventure Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrt_l",
            "EntityName": "The Voyage of the Beagle (Everyman Paperbacks)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrt_v",
            "EntityName": "Voyage of the Beagle (Dover Value Editions)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrtzh",
            "EntityName": "The Voyage of the Beagle (Unabridged Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrtzs",
            "EntityName": "The Voyage of the Beagle (Mentor)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrv03",
            "EntityName": "The Voyage of the Beagle (Great Minds Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrv0d",
            "EntityName": "The Voyage of the Beagle (Unabridged Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrv0p",
            "EntityName": "The Voyage of the Beagle (Unabridged Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrv0y",
            "EntityName": "Voyage of the Beagle (NG Adventure Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrvkv",
            "EntityName": "Voyage of the Beagle (Harvard Classics, Part 29)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrx_h",
            "EntityName": "The Voyage of the Beagle (Classics of World Literature) (Classics of World Literature)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bpx0q",
            "EntityName": "The Darwin Reader First Edition"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bpx1m",
            "EntityName": "The Darwin Reader Second Edition"
          }
        ]
      },
      {
        "ParseId": "WebQTest-108.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01lwx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01lwx ns:book.author.works_written ?x .\n?x ns:common.topic.notable_types ns:m.01xryvm .\n}\n",
        "PotentialTopicEntityMention": "charles darwin",
        "TopicEntityName": "Charles Darwin",
        "TopicEntityMid": "m.01lwx",
        "InferentialChain": [
          "book.author.works_written"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01xryvm",
            "EntityName": "Book",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010rjsvs",
            "EntityName": "Charles Darwin's zoology notes & specimen lists from H.M.S. Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010sfr1g",
            "EntityName": "Charles Darwin's letters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01qq45",
            "EntityName": "The Voyage of the Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02l2z6",
            "EntityName": "The Descent of Man, and Selection in Relation to Sex"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pzzmw",
            "EntityName": "The zoology of the voyage of H.M.S. Beagle during the years 1832-1836"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03d86kx",
            "EntityName": "The Effects of Cross and Self Fertilisation in the Vegetable Kingdom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t39p_",
            "EntityName": "On evolution"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t39qh",
            "EntityName": "A student's introduction to Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t39qr",
            "EntityName": "The Structure and Distribution of Coral Reefs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t39r_",
            "EntityName": "On Natural Selection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t39rr",
            "EntityName": "From so simple a beginning"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t39s7",
            "EntityName": "Charles Darwin's natural selection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bktj1",
            "EntityName": "The Different Forms of Flowers on Plants of the Same Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bpx28",
            "EntityName": "The Essential Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05f3_5v",
            "EntityName": "Fertilisation of Orchids"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05f3187",
            "EntityName": "The Formation of Vegetable Mould through the Action of Worms"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kdgws",
            "EntityName": "The Darwin Reader First Edition"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kdgx0",
            "EntityName": "The Darwin Reader Second Edition"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05nhwt",
            "EntityName": "The Autobiography of Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05pskf",
            "EntityName": "The Expression of the Emotions in Man and Animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.067jgzq",
            "EntityName": "The principal works"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.067q6ks",
            "EntityName": "ontstaan der soorten door natuurlijke teeltkeus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0682dh_",
            "EntityName": "More Letters of Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0685fg8",
            "EntityName": "Der Ausdruck der Gem\u00fcthsbewegungen bei dem Menschen und den Thieren"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.068kgmb",
            "EntityName": "Wu zhong qi yuan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.068zv2w",
            "EntityName": "The collected papers of Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0698p22",
            "EntityName": "Reise eines Naturforschers um die Welt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.069gx8t",
            "EntityName": "Rejse om jorden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.069j1zn",
            "EntityName": "Das Variiren der Thiere und Pflanzen im Zustande der Domestication"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.069mjtn",
            "EntityName": "Leben und Briefe von Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06bk806",
            "EntityName": "La facult\u00e9 motrice dans les plantes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06by4cp",
            "EntityName": "Darwin for Today"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06c2mtr",
            "EntityName": "Die Bewegungen und Lebensweise der kletternden Pflanzen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06c6q4x",
            "EntityName": "red notebook of Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06c9lwy",
            "EntityName": "Darwin en Patagonia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06cbh6d",
            "EntityName": "Die geschlechtliche Zuchtwahl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06cjxqf",
            "EntityName": "Het uitdrukken van emoties bij mens en dier"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06cnkd2",
            "EntityName": "vari\u00eberen der huisdieren en cultuurplanten"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06cvnt5",
            "EntityName": "To the members of the Down Friendly Club"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06czk9t",
            "EntityName": "Letters from C. Darwin, Esq., to A. Hancock, Esq"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dgzf9",
            "EntityName": "Cartas de Darwin 18251859"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dhg29",
            "EntityName": "Darwin and Henslow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dhg2k",
            "EntityName": "Darwin's notebooks on transmutation of species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dp_0n",
            "EntityName": "El Origin De Las Especies"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dplrp",
            "EntityName": "A Darwin Selection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dv5j2",
            "EntityName": "Vospominanii\ufe20a\ufe21 o razvitii moego uma i kharaktera"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06f6v8g",
            "EntityName": "Voyage d'un naturaliste autour du monde"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06fdzsg",
            "EntityName": "The\u0301orie de l'e\u0301volution"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06fkngp",
            "EntityName": "Notebooks on transmutation of species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06fp6__",
            "EntityName": "Darwin on humus and the earthworm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06fz4ys",
            "EntityName": "Opsht\u0323amung fun menshen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06g77fm",
            "EntityName": "\u00dcber den Bau und die Verbreitung der Corallen-Riffe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ggf11",
            "EntityName": "Darwin Compendium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06gx9nb",
            "EntityName": "The geology of the voyage of H.M.S. Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06gxb0v",
            "EntityName": "Gesammelte kleinere Schriften"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06h4s28",
            "EntityName": "The portable Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06h96f4",
            "EntityName": "H.M.S. Beagle in South America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06hggft",
            "EntityName": "Diario del Viaje de Un Naturalista Alrededor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06hks6x",
            "EntityName": "Reise um die Welt 1831 - 36"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06hv624",
            "EntityName": "Viaje de Un Naturalista Alrededor del Mundo 2 Vol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06hxnc2",
            "EntityName": "Die fundamente zur entstehung der arten"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06hz4px",
            "EntityName": "Metaphysics, Materialism, & the evolution of mind"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06j18wj",
            "EntityName": "\u00dcber die Wege der Hummel-M\u00e4nnchen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06j8lmr",
            "EntityName": "The education of Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06jbq8m",
            "EntityName": "monograph on the sub-class Cirripedia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06jc2s7",
            "EntityName": "The Orgin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06jcl9b",
            "EntityName": "Questions about the breeding of animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06jj8zx",
            "EntityName": "Kleinere geologische Abhandlungen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06jw00r",
            "EntityName": "Darwin Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06jygl6",
            "EntityName": "Les mouvements et les habitudes des plantes grimpantes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06k4hmf",
            "EntityName": "Les r\u00e9cifs de corail, leur structure et leur distribution"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06k7t44",
            "EntityName": "Die Entstehung der Arten durch nat\u00fcrliche Zuchtwahl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06km_gd",
            "EntityName": "Del Plata a Tierra del Fuego"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06kmynd",
            "EntityName": "Darwinism stated by Darwin himself"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06l7w7c",
            "EntityName": "Human nature, Darwin's view"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06lcpyv",
            "EntityName": "The action of carbonate of ammonia on the roots of certain plants"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06m68vy",
            "EntityName": "Darwin-Wallace"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mc3j5",
            "EntityName": "Die Wirkungen der Kreuz- und Selbst-Befruchtung im Pflanzenreich"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mmypb",
            "EntityName": "From Darwin's unpublished notebooks"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06msmgd",
            "EntityName": "Beagle letters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mwj8z",
            "EntityName": "The living thoughts of Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mx6qb",
            "EntityName": "Notes on the fertilization of orchids"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06n4jwv",
            "EntityName": "Volcanic Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06n65g8",
            "EntityName": "Darwin's journal"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06n8gzr",
            "EntityName": "Memorias y epistolario i\u0301ntimo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06n8zlx",
            "EntityName": "On the tendency of species to form varieties"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ndlh7",
            "EntityName": "Darwin's Ornithological notes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nhv9s",
            "EntityName": "Proiskhozhdenie vidov"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nxw56",
            "EntityName": "The Power of Movement in Plants"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06p4t1s",
            "EntityName": "Seul celui qui change reste fid\u00e8le \u00e0 lui-m\u00eame"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06pw5vt",
            "EntityName": "Les moyens d'expression chez les animaux"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06px17_",
            "EntityName": "Part I: Contributions to the Theory of Natural Selection / Part II"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q9dnn",
            "EntityName": "Resa kring jorden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06qr9xq",
            "EntityName": "Tesakneri tsagume\u030c"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06qs0k_",
            "EntityName": "La vie et la correspondance de Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06qxf6m",
            "EntityName": "Evolution by natural selection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06r08pz",
            "EntityName": "Motsa ha-minim"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06r9mwf",
            "EntityName": "La descendance de l'homme et la s\u00a9\u00d8election sexuelle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06rg6nf",
            "EntityName": "Un m\u00e9moire in\u00e9dit de Charles Darwin sur l'instinct"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06sh5th",
            "EntityName": "Die verschiedenen Bl\u00fctenformen an Pflanzen der n\u00e4mlichen Art"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06syjt2",
            "EntityName": "Darwin's insects"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06tjzfj",
            "EntityName": "Diary of the voyage of H.M.S. Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06tz8bh",
            "EntityName": "genese\u014ds t\u014dn eid\u014dn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07kbf6f",
            "EntityName": "Insectivorous Plants"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07kd9wf",
            "EntityName": "The Variation of Animals and Plants under Domestication"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdm2",
            "EntityName": "Charles Darwin, 1809-1882--Anton Dohrn, 1840-1909"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdm8",
            "EntityName": "On a remarkable bar of sandstone off Pernambuco"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdmk",
            "EntityName": "The voyage of Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdmn",
            "EntityName": "Works"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqynz",
            "EntityName": "Geological observations on the volcanic islands and parts of South America visited during the voyage of H.M.S. 'Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqyp6",
            "EntityName": "Journal of researches into the natural history and geology of the countries visited during the voyage round the world of the H. M. S. 'Beagle' under the command of Captain Fitz Roy, R. N"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1lr",
            "EntityName": "Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1ly",
            "EntityName": "Charles Darwin on the routes of male humble bees"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1m3",
            "EntityName": "Charles Darwin's marginalia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1m6",
            "EntityName": "Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1mh",
            "EntityName": "Evolution"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1ml",
            "EntityName": "Evolution and natural selection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1ms",
            "EntityName": "The foundations of the Origin of species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1mz",
            "EntityName": "Monographs of the fossil Lepadidae and the fossil Balanidae"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1n1",
            "EntityName": "On the origin of species by means of natural selection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1nb",
            "EntityName": "Origins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cc54s",
            "EntityName": "The Life of Erasmus Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d_3d1b",
            "EntityName": "The Correspondence of Charles Darwin, Volume 1: 1821-1836"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d_472q",
            "EntityName": "The Correspondence of Charles Darwin, Volume 2: 1837-1843"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0bz0f",
            "EntityName": "The Correspondence of Charles Darwin, Volume 3: 1844-1846"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0c_dr",
            "EntityName": "The Correspondence of Charles Darwin, Volume 8: 1860"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0c2xv",
            "EntityName": "The Correspondence of Charles Darwin, Volume 4: 1847-1850"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0c7c3",
            "EntityName": "The Correspondence of Charles Darwin, Volume 5: 1851-1855"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0ccfx",
            "EntityName": "The Correspondence of Charles Darwin, Volume 6: 1856-1857"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0cnxy",
            "EntityName": "The Correspondence of Charles Darwin, Volume 7: 1858-1859"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0dh7c",
            "EntityName": "The Correspondence of Charles Darwin, Volume 9: 1861"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0dvyt",
            "EntityName": "The Correspondence of Charles Darwin, Volume 10: 1862"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0fhpx",
            "EntityName": "The Correspondence of Charles Darwin, Volume 11: 1863"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0fsbb",
            "EntityName": "The Correspondence of Charles Darwin, Volume 12: 1864"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0g5py",
            "EntityName": "The Correspondence of Charles Darwin, Volume 13: 1865"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0gnbh",
            "EntityName": "The Correspondence of Charles Darwin, Volume 14: 1866"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0hdk1",
            "EntityName": "The Correspondence of Charles Darwin, Volume 15: 1867"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0jl1d",
            "EntityName": "The Correspondence of Charles Darwin, Volume 18: 1870"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0jl1p",
            "EntityName": "The Correspondence of Charles Darwin, Volume 17: 1869"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0jl1z",
            "EntityName": "The Correspondence of Charles Darwin, Volume 16: 1868"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hhv3fy",
            "EntityName": "On the Movements and Habits of Climbing Plants"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kfsvj7",
            "EntityName": "Geological Observations on South America"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01lwx": "Charles Darwin"
    },
    "qid_topic_entity": {
      "Q1035": "Charles Darwin"
    },
    "index": 132
  },
  {
    "QuestionId": "WebQTest-1434",
    "RawQuestion": "who is in the american league in baseball?",
    "ProcessedQuestion": "who is in the american league in baseball",
    "Parses": [
      {
        "ParseId": "WebQTest-1434.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h8b0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h8b0 ns:baseball.baseball_league.teams ?x .\n}\n",
        "PotentialTopicEntityMention": "american league",
        "TopicEntityName": "American League",
        "TopicEntityMid": "m.0h8b0",
        "InferentialChain": [
          "baseball.baseball_league.teams"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d5z",
            "EntityName": "Boston Red Sox"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d6g",
            "EntityName": "Baltimore Orioles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01slc",
            "EntityName": "Chicago White Sox"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01yhm",
            "EntityName": "Cleveland Indians"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02d02",
            "EntityName": "Detroit Tigers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m1n",
            "EntityName": "Houston Astros"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.049n7",
            "EntityName": "Kansas City Royals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wmvz",
            "EntityName": "Los Angeles Angels of Anaheim"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0512p",
            "EntityName": "Minnesota Twins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05lkwhs",
            "EntityName": "Washington Senators"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05ll0s1",
            "EntityName": "Washington Senators"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05m_8",
            "EntityName": "Oakland Athletics"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05nlyxv",
            "EntityName": "Philadelphia Athletics"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.062s316",
            "EntityName": "Tampa Bay Devil Rays"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06wpc",
            "EntityName": "Seattle Mariners"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07l4z",
            "EntityName": "Toronto Blue Jays"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07l8f",
            "EntityName": "Tampa Bay Rays"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07l8x",
            "EntityName": "Texas Rangers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cqt41",
            "EntityName": "New York Yankees"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fq2vj2",
            "EntityName": "Seattle Pilots"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1434.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h8b0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h8b0 ns:sports.sports_league.teams ?y .\n?y ns:sports.sports_league_participation.team ?x .\n}\n",
        "PotentialTopicEntityMention": "american league",
        "TopicEntityName": "American League",
        "TopicEntityMid": "m.0h8b0",
        "InferentialChain": [
          "sports.sports_league.teams",
          "sports.sports_league_participation.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d5z",
            "EntityName": "Boston Red Sox"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d6g",
            "EntityName": "Baltimore Orioles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01slc",
            "EntityName": "Chicago White Sox"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01yhm",
            "EntityName": "Cleveland Indians"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02d02",
            "EntityName": "Detroit Tigers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.042v_h4",
            "EntityName": "St. Louis Browns"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.049n7",
            "EntityName": "Kansas City Royals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wmvz",
            "EntityName": "Los Angeles Angels of Anaheim"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0512p",
            "EntityName": "Minnesota Twins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.051vz",
            "EntityName": "Milwaukee Brewers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05c8tcn",
            "EntityName": "New York Highlanders"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kmk3z",
            "EntityName": "Chicago White Stockings"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kmkc5",
            "EntityName": "Cleveland Naps"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kmkd0",
            "EntityName": "Kansas City Athletics"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kmnv1",
            "EntityName": "California Angels"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kmp0g",
            "EntityName": "Anaheim Angels"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05lkwhs",
            "EntityName": "Washington Senators"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05m_8",
            "EntityName": "Oakland Athletics"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05n6l3_",
            "EntityName": "Milwaukee Brewers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05n6ll4",
            "EntityName": "Baltimore Orioles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06wpc",
            "EntityName": "Seattle Mariners"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07l4z",
            "EntityName": "Toronto Blue Jays"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07l8f",
            "EntityName": "Tampa Bay Rays"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07l8x",
            "EntityName": "Texas Rangers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cqt41",
            "EntityName": "New York Yankees"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fq2vj2",
            "EntityName": "Seattle Pilots"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0h8b0": "American League"
    },
    "qid_topic_entity": {
      "Q465469": "American League"
    },
    "index": 133
  },
  {
    "QuestionId": "WebQTest-1875",
    "RawQuestion": "what type of political system is brazil?",
    "ProcessedQuestion": "what type of political system is brazil",
    "Parses": [
      {
        "ParseId": "WebQTest-1875.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015fr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015fr ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "brazil",
        "TopicEntityName": "Brazil",
        "TopicEntityMid": "m.015fr",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d9r3",
            "EntityName": "Presidential system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c9rw5",
            "EntityName": "Constitutional republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j729",
            "EntityName": "Federal republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.015fr": "Brazil"
    },
    "qid_topic_entity": {
      "Q155": "Brazil"
    },
    "index": 134
  },
  {
    "QuestionId": "WebQTest-1670",
    "RawQuestion": "who is tatyana ali parents?",
    "ProcessedQuestion": "who is tatyana ali parents",
    "Parses": [
      {
        "ParseId": "WebQTest-1670.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01knh9l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01knh9l ns:people.person.parents ?x .\n}\n",
        "PotentialTopicEntityMention": "tatyana ali",
        "TopicEntityName": "Tatyana Ali",
        "TopicEntityMid": "m.01knh9l",
        "InferentialChain": [
          "people.person.parents"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jwnfyd",
            "EntityName": "Sheriff Ali"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jwnfyl",
            "EntityName": "Sonia Ali"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01knh9l": "Tatyana Ali"
    },
    "qid_topic_entity": {
      "Q240541": "Tatyana Ali"
    },
    "index": 135
  },
  {
    "QuestionId": "WebQTest-1853",
    "RawQuestion": "what made richard hammond famous?",
    "ProcessedQuestion": "what made richard hammond famous",
    "Parses": [
      {
        "ParseId": "WebQTest-1853.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "?? "
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02508x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02508x ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "richard hammond",
        "TopicEntityName": "Richard Hammond",
        "TopicEntityMid": "m.02508x",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015cjr",
            "EntityName": "Presenter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01tkqy",
            "EntityName": "Stunt Performer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gjzk",
            "EntityName": "Television producer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08z956",
            "EntityName": "Radio personality"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d8qb",
            "EntityName": "Journalist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dxtg",
            "EntityName": "Screenwriter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kyk",
            "EntityName": "Author"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0np9r",
            "EntityName": "Voice Actor"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02508x": "Richard Hammond"
    },
    "qid_topic_entity": {
      "Q297265": "Richard Hammond"
    },
    "index": 136
  },
  {
    "QuestionId": "WebQTest-667",
    "RawQuestion": "what is the capital of republic of ireland?",
    "ProcessedQuestion": "what is the capital of republic of ireland",
    "Parses": [
      {
        "ParseId": "WebQTest-667.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03rt9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03rt9 ns:location.country.capital ?x .\n}\n",
        "PotentialTopicEntityMention": "ireland",
        "TopicEntityName": "Republic of Ireland",
        "TopicEntityMid": "m.03rt9",
        "InferentialChain": [
          "location.country.capital"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02cft",
            "EntityName": "Dublin"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03rt9": "Republic of Ireland"
    },
    "qid_topic_entity": {
      "Q27": "Republic of Ireland"
    },
    "index": 137
  },
  {
    "QuestionId": "WebQTest-1181",
    "RawQuestion": "what is the current time in kauai hawaii?",
    "ProcessedQuestion": "what is the current time in kauai hawaii",
    "Parses": [
      {
        "ParseId": "WebQTest-1181.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gh4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gh4 ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "hawaii",
        "TopicEntityName": "Hawaii",
        "TopicEntityMid": "m.03gh4",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lctm",
            "EntityName": "Hawaii-Aleutian Time Zone"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1181.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.014wxc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.014wxc ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "hawaii",
        "TopicEntityName": "Hawaiian Islands",
        "TopicEntityMid": "m.014wxc",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lctm",
            "EntityName": "Hawaii-Aleutian Time Zone"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1181.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jbsn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jbsn ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "kauai",
        "TopicEntityName": "Kauai",
        "TopicEntityMid": "m.0jbsn",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lctm",
            "EntityName": "Hawaii-Aleutian Time Zone"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1181.P3",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lmg4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lmg4 ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "kauai",
        "TopicEntityName": "Kauai County",
        "TopicEntityMid": "m.0lmg4",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lctm",
            "EntityName": "Hawaii-Aleutian Time Zone"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1181.P4",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jbt3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jbt3 ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "hawaii",
        "TopicEntityName": "Hawaii",
        "TopicEntityMid": "m.0jbt3",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lctm",
            "EntityName": "Hawaii-Aleutian Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03gh4": "Hawaii",
      "m.014wxc": "Hawaiian Islands",
      "m.0jbsn": "Kauai",
      "m.0lmg4": "Kauai County",
      "m.0jbt3": "Hawaii"
    },
    "qid_topic_entity": {
      "Q782": "Hawaii",
      "Q192626": "Hawaiian Islands",
      "Q201026": "Kauai",
      "Q111517": "Kauai County",
      "Q68740": "Hawaii"
    },
    "index": 138
  },
  {
    "QuestionId": "WebQTest-397",
    "RawQuestion": "what are the school colors for harvard university?",
    "ProcessedQuestion": "what are the school colors for harvard university",
    "Parses": [
      {
        "ParseId": "WebQTest-397.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ksy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ksy ns:education.educational_institution.colors ?x .\n}\n",
        "PotentialTopicEntityMention": "harvard university",
        "TopicEntityName": "Harvard University",
        "TopicEntityMid": "m.03ksy",
        "InferentialChain": [
          "education.educational_institution.colors"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01jnf1",
            "EntityName": "Crimson"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03ksy": "Harvard University"
    },
    "qid_topic_entity": {
      "Q13371": "Harvard University"
    },
    "index": 139
  },
  {
    "QuestionId": "WebQTest-60",
    "RawQuestion": "where did eleanor roosevelt die?",
    "ProcessedQuestion": "where did eleanor roosevelt die",
    "Parses": [
      {
        "ParseId": "WebQTest-60.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02n9k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02n9k ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "eleanor roosevelt",
        "TopicEntityName": "Eleanor Roosevelt",
        "TopicEntityMid": "m.02n9k",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cc56",
            "EntityName": "Manhattan"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02n9k": "Eleanor Roosevelt"
    },
    "qid_topic_entity": {
      "Q83396": "Eleanor Roosevelt"
    },
    "index": 140
  },
  {
    "QuestionId": "WebQTest-284",
    "RawQuestion": "where did the latin language originate from?",
    "ProcessedQuestion": "where did the latin language originate from",
    "Parses": [
      {
        "ParseId": "WebQTest-284.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04h9h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04h9h ns:language.human_language.language_family ?x .\n}\n",
        "PotentialTopicEntityMention": "latin",
        "TopicEntityName": "Latin Language",
        "TopicEntityMid": "m.04h9h",
        "InferentialChain": [
          "language.human_language.language_family"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03t28",
            "EntityName": "Italic languages"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03v09",
            "EntityName": "Indo-European languages"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04h9h": "Latin Language"
    },
    "qid_topic_entity": {
      "Q397": "Latin Language"
    },
    "index": 141
  },
  {
    "QuestionId": "WebQTest-481",
    "RawQuestion": "what kind of money do they use in germany?",
    "ProcessedQuestion": "what kind of money do they use in germany",
    "Parses": [
      {
        "ParseId": "WebQTest-481.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0345h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0345h ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "germany",
        "TopicEntityName": "Germany",
        "TopicEntityMid": "m.0345h",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02l6h",
            "EntityName": "Euro"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0345h": "Germany"
    },
    "qid_topic_entity": {
      "Q183": "Germany"
    },
    "index": 142
  },
  {
    "QuestionId": "WebQTest-1972",
    "RawQuestion": "where did john franklin live?",
    "ProcessedQuestion": "where did john franklin live",
    "Parses": [
      {
        "ParseId": "WebQTest-1972.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06hw0m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06hw0m ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n",
        "PotentialTopicEntityMention": "john franklin",
        "TopicEntityName": "John Franklin",
        "TopicEntityMid": "m.06hw0m",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0s4jk",
            "EntityName": "Blue Island"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06hw0m": "John Franklin"
    },
    "qid_topic_entity": {
      "Q1647693": "John Franklin"
    },
    "index": 143
  },
  {
    "QuestionId": "WebQTest-1350",
    "RawQuestion": "what did jesse owens won?",
    "ProcessedQuestion": "what did jesse owens won",
    "Parses": [
      {
        "ParseId": "WebQTest-1350.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cmr3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cmr3 ns:award.award_winner.awards_won ?y .\n?y ns:award.award_honor.award ?x .\n}\n",
        "PotentialTopicEntityMention": "jesse owens",
        "TopicEntityName": "Jesse Owens",
        "TopicEntityMid": "m.0cmr3",
        "InferentialChain": [
          "award.award_winner.awards_won",
          "award.award_honor.award"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04kc5dv",
            "EntityName": "Associated Press Male Athlete of the Year"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0cmr3": "Jesse Owens"
    },
    "qid_topic_entity": {
      "Q52651": "Jesse Owens"
    },
    "index": 144
  },
  {
    "QuestionId": "WebQTest-1656",
    "RawQuestion": "what are some of leonardo da vinci most famous inventions?",
    "ProcessedQuestion": "what are some of leonardo da vinci most famous inventions",
    "Parses": [
      {
        "ParseId": "WebQTest-1656.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04lg6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04lg6 ns:law.inventor.inventions ?x .\n}\n",
        "PotentialTopicEntityMention": "leonardo da vinci",
        "TopicEntityName": "Leonardo da Vinci",
        "TopicEntityMid": "m.04lg6",
        "InferentialChain": [
          "law.inventor.inventions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012rm",
            "EntityName": "Anemometer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01w6mc",
            "EntityName": "Diving suit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01x3y7",
            "EntityName": "Ornithopter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05my_3",
            "EntityName": "Viola organista"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0796wt",
            "EntityName": "Double hull"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cyfs",
            "EntityName": "Parachute"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w11gwh",
            "EntityName": "Triple Barrel Canon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w11h15",
            "EntityName": "33-Barreled Organ"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w11hbh",
            "EntityName": "Aerial Screw"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y8r",
            "EntityName": "Armored car"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04lg6": "Leonardo da Vinci"
    },
    "qid_topic_entity": {
      "Q762": "Leonardo da Vinci"
    },
    "index": 145
  },
  {
    "QuestionId": "WebQTest-1771",
    "RawQuestion": "what is the islamic belief?",
    "ProcessedQuestion": "what is the islamic belief",
    "Parses": [
      {
        "ParseId": "WebQTest-1771.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0flw86)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0flw86 ns:religion.religion.beliefs ?x .\n}\n",
        "PotentialTopicEntityMention": "islamic",
        "TopicEntityName": "Islam",
        "TopicEntityMid": "m.0flw86",
        "InferentialChain": [
          "religion.religion.beliefs"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019vqj",
            "EntityName": "Mahdi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01bbmp",
            "EntityName": "Tawhid"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.024b22",
            "EntityName": "Prophets in Islam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025w817",
            "EntityName": "Predestination in Islam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wvcg4",
            "EntityName": "Entering Heaven alive"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04xy3",
            "EntityName": "Monotheism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0698fs",
            "EntityName": "Islamic view of angels"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06rvp0",
            "EntityName": "Qiyamah"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.074hw",
            "EntityName": "Sharia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07bfrc",
            "EntityName": "Masih ad-Dajjal"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07r6vw",
            "EntityName": "Islamic holy books"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09kb_2",
            "EntityName": "God in Islam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hr6vbp",
            "EntityName": "\u1e6c\u016bb\u0101"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0flw86": "Islam"
    },
    "qid_topic_entity": {
      "Q432": "Islam"
    },
    "index": 146
  },
  {
    "QuestionId": "WebQTest-1569",
    "RawQuestion": "what jamaican money called?",
    "ProcessedQuestion": "what jamaican money called",
    "Parses": [
      {
        "ParseId": "WebQTest-1569.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_r3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_r3 ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "jamaican",
        "TopicEntityName": "Jamaica",
        "TopicEntityMid": "m.03_r3",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04xc2m",
            "EntityName": "Jamaican dollar"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03_r3": "Jamaica"
    },
    "qid_topic_entity": {
      "Q766": "Jamaica"
    },
    "index": 147
  },
  {
    "QuestionId": "WebQTest-1132",
    "RawQuestion": "what did coretta scott king died from?",
    "ProcessedQuestion": "what did coretta scott king died from",
    "Parses": [
      {
        "ParseId": "WebQTest-1132.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0289jv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0289jv ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "coretta scott king",
        "TopicEntityName": "Coretta Scott King",
        "TopicEntityMid": "m.0289jv",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019dmc",
            "EntityName": "Respiratory failure"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0289jv": "Coretta Scott King"
    },
    "qid_topic_entity": {
      "Q230969": "Coretta Scott King"
    },
    "index": 148
  },
  {
    "QuestionId": "WebQTest-823",
    "RawQuestion": "what does bolivia border?",
    "ProcessedQuestion": "what does bolivia border",
    "Parses": [
      {
        "ParseId": "WebQTest-823.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0165v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0165v ns:location.location.adjoin_s ?y .\n?y ns:location.adjoining_relationship.adjoins ?x .\n}\n",
        "PotentialTopicEntityMention": "bolivia",
        "TopicEntityName": "Bolivia",
        "TopicEntityMid": "m.0165v",
        "InferentialChain": [
          "location.location.adjoin_s",
          "location.adjoining_relationship.adjoins"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015fr",
            "EntityName": "Brazil"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016wzw",
            "EntityName": "Peru"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01p1v",
            "EntityName": "Chile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05v10",
            "EntityName": "Paraguay"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jgd",
            "EntityName": "Argentina"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0165v": "Bolivia"
    },
    "qid_topic_entity": {
      "Q750": "Bolivia"
    },
    "index": 149
  },
  {
    "QuestionId": "WebQTest-1282",
    "RawQuestion": "under what political system does the united states government operate?",
    "ProcessedQuestion": "under what political system does the united states government operate",
    "Parses": [
      {
        "ParseId": "WebQTest-1282.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09c7w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09c7w0 ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "united states government",
        "TopicEntityName": "United States of America",
        "TopicEntityMid": "m.09c7w0",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d9r3",
            "EntityName": "Presidential system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c9rw5",
            "EntityName": "Constitutional republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j729",
            "EntityName": "Federal republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09c7w0": "United States of America"
    },
    "qid_topic_entity": {
      "Q30": "United States of America"
    },
    "index": 150
  },
  {
    "QuestionId": "WebQTest-564",
    "RawQuestion": "what is arkansas state capitol?",
    "ProcessedQuestion": "what is arkansas state capitol",
    "Parses": [
      {
        "ParseId": "WebQTest-564.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05yzfg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05yzfg ns:location.location.street_address ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "arkansas state capitol",
        "TopicEntityName": "Arkansas State Capitol",
        "TopicEntityMid": "m.05yzfg",
        "InferentialChain": [
          "location.location.street_address",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ftvg",
            "EntityName": "Little Rock"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05yzfg": "Arkansas State Capitol"
    },
    "qid_topic_entity": {
      "Q673076": "Arkansas State Capitol"
    },
    "index": 151
  },
  {
    "QuestionId": "WebQTest-534",
    "RawQuestion": "what is the milwaukee brewers mascot?",
    "ProcessedQuestion": "what is the milwaukee brewers mascot",
    "Parses": [
      {
        "ParseId": "WebQTest-534.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051vz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051vz ns:sports.sports_team.team_mascot ?x .\n}\n",
        "PotentialTopicEntityMention": "milwaukee brewers",
        "TopicEntityName": "Milwaukee Brewers",
        "TopicEntityMid": "m.051vz",
        "InferentialChain": [
          "sports.sports_team.team_mascot"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0100sszz",
            "EntityName": "Hank"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.049kl_",
            "EntityName": "Bernie Brewer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0blvgb",
            "EntityName": "Bonnie Brewer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.051vz": "Milwaukee Brewers"
    },
    "qid_topic_entity": {
      "Q848103": "Milwaukee Brewers"
    },
    "index": 152
  },
  {
    "QuestionId": "WebQTest-873",
    "RawQuestion": "where does toronto get its water from?",
    "ProcessedQuestion": "where does toronto get its water from",
    "Parses": [
      {
        "ParseId": "WebQTest-873.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h7h6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h7h6 ns:base.infrastructure.infrastructural_municipality.sewage_treatment_plant ?x .\n}\n",
        "PotentialTopicEntityMention": "toronto",
        "TopicEntityName": "Toronto",
        "TopicEntityMid": "m.0h7h6",
        "InferentialChain": [
          "base.infrastructure.infrastructural_municipality.sewage_treatment_plant"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vnl7x",
            "EntityName": "Ashbridges Bay Wastewater Treatment Plant"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0h7h6": "Toronto"
    },
    "qid_topic_entity": {
      "Q172": "Toronto"
    },
    "index": 153
  },
  {
    "QuestionId": "WebQTest-918",
    "RawQuestion": "who is the king of cambodia now?",
    "ProcessedQuestion": "who is the king of cambodia now",
    "Parses": [
      {
        "ParseId": "WebQTest-918.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01xbgx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01xbgx ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.03w9bnr .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "cambodia",
        "TopicEntityName": "Cambodia",
        "TopicEntityMid": "m.01xbgx",
        "InferentialChain": [
          "government.governmental_jurisdiction.governing_officials",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.03w9bnr",
            "EntityName": "King",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.basic_title",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": "now"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0418zp",
            "EntityName": "Norodom Sihamoni"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01xbgx": "Cambodia"
    },
    "qid_topic_entity": {
      "Q424": "Cambodia"
    },
    "index": 154
  },
  {
    "QuestionId": "WebQTest-531",
    "RawQuestion": "what style of music does michael jackson perform?",
    "ProcessedQuestion": "what style of music does michael jackson perform",
    "Parses": [
      {
        "ParseId": "WebQTest-531.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09889g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09889g ns:music.artist.genre ?x .\n}\n",
        "PotentialTopicEntityMention": "michael jackson",
        "TopicEntityName": "Michael Jackson",
        "TopicEntityMid": "m.09889g",
        "InferentialChain": [
          "music.artist.genre"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.021_z5",
            "EntityName": "New jack swing"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025sc50",
            "EntityName": "Contemporary R&B"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026z9",
            "EntityName": "Disco"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bqnt",
            "EntityName": "Motown Sound"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lkt",
            "EntityName": "Electronic music"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lnbg",
            "EntityName": "Dance-pop"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vjzr",
            "EntityName": "Adult contemporary music"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x8m",
            "EntityName": "Funk"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c34yl",
            "EntityName": "Post-disco"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bt6j",
            "EntityName": "Pop rock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064t9",
            "EntityName": "Pop music"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06by7",
            "EntityName": "Rock music"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06j6l",
            "EntityName": "Rhythm and blues"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ggx5q",
            "EntityName": "Dance music"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gywn",
            "EntityName": "Soul music"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09889g": "Michael Jackson"
    },
    "qid_topic_entity": {
      "Q2831": "Michael Jackson"
    },
    "index": 155
  },
  {
    "QuestionId": "WebQTest-1323",
    "RawQuestion": "what to visit in atlanta?",
    "ProcessedQuestion": "what to visit in atlanta",
    "Parses": [
      {
        "ParseId": "WebQTest-1323.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.013yq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.013yq ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "atlanta",
        "TopicEntityName": "Atlanta",
        "TopicEntityMid": "m.013yq",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0130ft",
            "EntityName": "Atlanta Symphony Orchestra"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020fp1",
            "EntityName": "Turner Field"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027r6hr",
            "EntityName": "Cobb Energy Performing Arts Centre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027t71h",
            "EntityName": "Four Seasons Hotel Atlanta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.029fnx",
            "EntityName": "Underground Atlanta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jnft",
            "EntityName": "Atlanta Marriott Marquis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wl1b",
            "EntityName": "Georgia World Congress Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02xmrp",
            "EntityName": "The Tabernacle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.030pkm",
            "EntityName": "Peachtree Road Race"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.033h7k",
            "EntityName": "Georgia Aquarium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.038bv6",
            "EntityName": "Georgia Dome"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.038gvs",
            "EntityName": "Philips Arena"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.039xmp",
            "EntityName": "Omni Coliseum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cspcp",
            "EntityName": "Hyatt Regency Atlanta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03l1zc",
            "EntityName": "Centennial Olympic Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03q1hw",
            "EntityName": "Zoo Atlanta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03sm22",
            "EntityName": "Six Flags Over Georgia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03spbl",
            "EntityName": "Six Flags White Water"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wm34",
            "EntityName": "Atlanta Cyclorama & Civil War Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03xrf5",
            "EntityName": "Georgia State Capitol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04_mbv",
            "EntityName": "World of Coca-Cola"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04d135",
            "EntityName": "CNN Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04htb5",
            "EntityName": "Fernbank Science Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jny9",
            "EntityName": "Fernbank Museum of Natural History"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04qrhq",
            "EntityName": "Fox Theatre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050m_5",
            "EntityName": "Woodruff Arts Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050mtz",
            "EntityName": "Margaret Mitchell House & Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050my1",
            "EntityName": "Martin Luther King, Jr. National Historic Site"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050n0y",
            "EntityName": "Atlanta History Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05c25f2",
            "EntityName": "Variety Playhouse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06bxs4",
            "EntityName": "Jimmy Carter Library and Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b5g4p",
            "EntityName": "Masquerade"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c3cp2",
            "EntityName": "Arbor Place Mall"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fpmfg",
            "EntityName": "Atlanta Ballet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gln9p",
            "EntityName": "Center for Puppetry Arts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j28sdt",
            "EntityName": "Atlanta Jewish Film Festival"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.013yq": "Atlanta"
    },
    "qid_topic_entity": {
      "Q23556": "Atlanta"
    },
    "index": 156
  },
  {
    "QuestionId": "WebQTest-1623",
    "RawQuestion": "what is the most common language spoken in argentina?",
    "ProcessedQuestion": "what is the most common language spoken in argentina",
    "Parses": [
      {
        "ParseId": "WebQTest-1623.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jgd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jgd ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "argentina",
        "TopicEntityName": "Argentina",
        "TopicEntityMid": "m.0jgd",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nm1",
            "EntityName": "Spanish Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jgd": "Argentina"
    },
    "qid_topic_entity": {
      "Q414": "Argentina"
    },
    "index": 157
  },
  {
    "QuestionId": "WebQTest-1088",
    "RawQuestion": "who originally voiced meg on family guy?",
    "ProcessedQuestion": "who originally voiced meg on family guy",
    "Parses": [
      {
        "ParseId": "WebQTest-1088.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019nnl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019nnl ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.035szd .\n?y ns:tv.regular_tv_appearance.from ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "PotentialTopicEntityMention": "family guy",
        "TopicEntityName": "Family Guy",
        "TopicEntityMid": "m.019nnl",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.035szd",
            "EntityName": "Meg Griffin",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": {
          "SortOrder": "Ascending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "tv.regular_tv_appearance.from",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02k4b2",
            "EntityName": "Lacey Chabert"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.019nnl": "Family Guy"
    },
    "qid_topic_entity": {
      "Q5930": "Family Guy"
    },
    "index": 158
  },
  {
    "QuestionId": "WebQTest-401",
    "RawQuestion": "who plays edward scissorhands?",
    "ProcessedQuestion": "who plays edward scissorhands",
    "Parses": [
      {
        "ParseId": "WebQTest-401.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01s3vk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01s3vk ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0gmm518 .\n}\n",
        "PotentialTopicEntityMention": "edward scissorhands",
        "TopicEntityName": "Edward Scissorhands",
        "TopicEntityMid": "m.01s3vk",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0gmm518",
            "EntityName": "Edward Scissorhands",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jfx1",
            "EntityName": "Johnny Depp"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01s3vk": "Edward Scissorhands"
    },
    "qid_topic_entity": {
      "Q217182": "Edward Scissorhands"
    },
    "index": 159
  },
  {
    "QuestionId": "WebQTest-304",
    "RawQuestion": "what is jamie oliver children names?",
    "ProcessedQuestion": "what is jamie oliver children names",
    "Parses": [
      {
        "ParseId": "WebQTest-304.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01myph)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01myph ns:people.person.children ?x .\n}\n",
        "PotentialTopicEntityMention": "jamie oliver",
        "TopicEntityName": "Jamie Oliver",
        "TopicEntityMid": "m.01myph",
        "InferentialChain": [
          "people.person.children"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b7m2p0",
            "EntityName": "Petal Blossom Rainbow Oliver"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b7m2p7",
            "EntityName": "Daisy Boo Pamela Oliver"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b7m2pg",
            "EntityName": "Poppy Honey Rosie Oliver"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gyd_td",
            "EntityName": "Buddy Bear Maurice Oliver"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01myph": "Jamie Oliver"
    },
    "qid_topic_entity": {
      "Q190051": "Jamie Oliver"
    },
    "index": 160
  },
  {
    "QuestionId": "WebQTest-276",
    "RawQuestion": "where was mission san rafael located?",
    "ProcessedQuestion": "where was mission san rafael located",
    "Parses": [
      {
        "ParseId": "WebQTest-276.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gbyx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gbyx ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "mission san rafael",
        "TopicEntityName": "Mission San Rafael Arc\u00e1ngel",
        "TopicEntityMid": "m.0gbyx",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zmfk0",
            "EntityName": "94901"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0l2hf",
            "EntityName": "Marin County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0gbyx": "Mission San Rafael Arc\u00e1ngel"
    },
    "qid_topic_entity": {
      "Q728990": "Mission San Rafael Arc\u00e1ngel"
    },
    "index": 161
  },
  {
    "QuestionId": "WebQTest-1239",
    "RawQuestion": "what is the zip code for concord?",
    "ProcessedQuestion": "what is the zip code for concord",
    "Parses": [
      {
        "ParseId": "WebQTest-1239.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0qymv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0qymv ns:location.citytown.postal_codes ?x .\n}\n",
        "PotentialTopicEntityMention": "concord",
        "TopicEntityName": "Concord",
        "TopicEntityMid": "m.0qymv",
        "InferentialChain": [
          "location.citytown.postal_codes"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zcvrz",
            "EntityName": "94520"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zcvv5",
            "EntityName": "94521"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zcw0h",
            "EntityName": "94519"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zcwkm",
            "EntityName": "94518"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07np_n_",
            "EntityName": "94529"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07np_pf",
            "EntityName": "94527"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07np_pn",
            "EntityName": "94524"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07np_pw",
            "EntityName": "94522"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0qymv": "Concord"
    },
    "qid_topic_entity": {
      "Q490441": "Concord"
    },
    "index": 162
  },
  {
    "QuestionId": "WebQTest-1495",
    "RawQuestion": "where does airtran airways fly?",
    "ProcessedQuestion": "where does airtran airways fly",
    "Parses": [
      {
        "ParseId": "WebQTest-1495.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "?? airport served?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01vk4t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01vk4t ns:aviation.airline.airports_served ?y .\n?y ns:aviation.airline_airport_presence.airport ?x .\n}\n",
        "PotentialTopicEntityMention": "airtran airways",
        "TopicEntityName": "AirTran Airways",
        "TopicEntityMid": "m.01vk4t",
        "InferentialChain": [
          "aviation.airline.airports_served",
          "aviation.airline_airport_presence.airport"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01f07x",
            "EntityName": "Logan International Airport"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01kyln",
            "EntityName": "LaGuardia Airport"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01mz5z",
            "EntityName": "Philadelphia International Airport"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01n2vy",
            "EntityName": "Denver International Airport"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nhvq",
            "EntityName": "Raleigh\u2013Durham International Airport"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cy71",
            "EntityName": "Baltimore\u2013Washington International Airport"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01vk4t": "AirTran Airways"
    },
    "qid_topic_entity": {
      "Q406695": "AirTran Airways"
    },
    "index": 163
  },
  {
    "QuestionId": "WebQTest-1080",
    "RawQuestion": "where did abraham and his descendants live?",
    "ProcessedQuestion": "where did abraham and his descendants live",
    "Parses": [
      {
        "ParseId": "WebQTest-1080.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0pwb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0pwb ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n",
        "PotentialTopicEntityMention": "abraham",
        "TopicEntityName": "Abraham",
        "TopicEntityMid": "m.0pwb",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0524v",
            "EntityName": "Mesopotamia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d9f2",
            "EntityName": "Canaan"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0pwb": "Abraham"
    },
    "qid_topic_entity": {
      "Q9181": "Abraham"
    },
    "index": 164
  },
  {
    "QuestionId": "WebQTest-655",
    "RawQuestion": "what is the zip code for wyoming michigan?",
    "ProcessedQuestion": "what is the zip code for wyoming michigan",
    "Parses": [
      {
        "ParseId": "WebQTest-655.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0v9xs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0v9xs ns:location.citytown.postal_codes ?x .\n}\n",
        "PotentialTopicEntityMention": "wyoming",
        "TopicEntityName": "Wyoming",
        "TopicEntityMid": "m.0v9xs",
        "InferentialChain": [
          "location.citytown.postal_codes"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_xtr9",
            "EntityName": "49509"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_xv47",
            "EntityName": "49519"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0v9xs": "Wyoming"
    },
    "qid_topic_entity": {
      "Q1022953": "Wyoming"
    },
    "index": 165
  },
  {
    "QuestionId": "WebQTest-344",
    "RawQuestion": "what county is west st paul in?",
    "ProcessedQuestion": "what county is west st paul in",
    "Parses": [
      {
        "ParseId": "WebQTest-344.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0vz77)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0vz77 ns:location.hud_county_place.county ?x .\n}\n",
        "PotentialTopicEntityMention": "west st paul",
        "TopicEntityName": "West St. Paul",
        "TopicEntityMid": "m.0vz77",
        "InferentialChain": [
          "location.hud_county_place.county"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nhr5",
            "EntityName": "Dakota County"
          }
        ]
      },
      {
        "ParseId": "WebQTest-344.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0vz77)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0vz77 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
        "PotentialTopicEntityMention": "west st paul",
        "TopicEntityName": "West St. Paul",
        "TopicEntityMid": "m.0vz77",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpym_",
            "EntityName": "US County",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nhr5",
            "EntityName": "Dakota County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0vz77": "West St. Paul"
    },
    "qid_topic_entity": {
      "Q2036838": "West St. Paul"
    },
    "index": 166
  },
  {
    "QuestionId": "WebQTest-1502",
    "RawQuestion": "what city and state is yale located in?",
    "ProcessedQuestion": "what city and state is yale located in",
    "Parses": [
      {
        "ParseId": "WebQTest-1502.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08815)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08815 ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "yale",
        "TopicEntityName": "University Yale",
        "TopicEntityMid": "m.08815",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2nf",
            "EntityName": "New Haven"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.08815": "University Yale"
    },
    "qid_topic_entity": {
      "Q49112": "University Yale"
    },
    "index": 167
  },
  {
    "QuestionId": "WebQTest-686",
    "RawQuestion": "when the atlanta braves won the world series?",
    "ProcessedQuestion": "when the atlanta braves won the world series",
    "Parses": [
      {
        "ParseId": "WebQTest-686.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0x2p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0x2p ns:sports.sports_team.championships ?x .\n}\n",
        "PotentialTopicEntityMention": "atlanta braves",
        "TopicEntityName": "Atlanta Braves",
        "TopicEntityMid": "m.0x2p",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j712",
            "EntityName": "1995 World Series"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0x2p": "Atlanta Braves"
    },
    "qid_topic_entity": {
      "Q461595": "Atlanta Braves"
    },
    "index": 168
  },
  {
    "QuestionId": "WebQTest-380",
    "RawQuestion": "where is mount st helens volcano?",
    "ProcessedQuestion": "where is mount st helens volcano",
    "Parses": [
      {
        "ParseId": "WebQTest-380.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.094xz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.094xz ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "mount st helens",
        "TopicEntityName": "Mount St. Helens",
        "TopicEntityMid": "m.094xz",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059g4",
            "EntityName": "North America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.081yw",
            "EntityName": "Washington"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k3nk",
            "EntityName": "Cascade Range"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0mly4",
            "EntityName": "Skamania County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.094xz": "Mount St. Helens"
    },
    "qid_topic_entity": {
      "Q4675": "Mount St. Helens"
    },
    "index": 169
  },
  {
    "QuestionId": "WebQTest-1201",
    "RawQuestion": "who played carlton lassiter on psych?",
    "ProcessedQuestion": "who played carlton lassiter on psych",
    "Parses": [
      {
        "ParseId": "WebQTest-1201.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ds5jv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ds5jv ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.0fdxxb .\n}\n",
        "PotentialTopicEntityMention": "psych",
        "TopicEntityName": "Psych",
        "TopicEntityMid": "m.0ds5jv",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0fdxxb",
            "EntityName": "Carlton Lassiter",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f8yw1",
            "EntityName": "Timothy Omundson"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ds5jv": "Psych"
    },
    "qid_topic_entity": {
      "Q48758": "Psych"
    },
    "index": 170
  },
  {
    "QuestionId": "WebQTest-589",
    "RawQuestion": "what russian language called?",
    "ProcessedQuestion": "what russian language called",
    "Parses": [
      {
        "ParseId": "WebQTest-589.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? could mean alias of \"russian language\""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "russian",
        "TopicEntityName": "Russia",
        "TopicEntityMid": "m.06bnz",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06b_j",
            "EntityName": "Russian Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06bnz": "Russia"
    },
    "qid_topic_entity": {
      "Q159": "Russia"
    },
    "index": 171
  },
  {
    "QuestionId": "WebQTest-885",
    "RawQuestion": "who is sir james dyson?",
    "ProcessedQuestion": "who is sir james dyson",
    "Parses": [
      {
        "ParseId": "WebQTest-885.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0209vm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0209vm ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "sir james dyson",
        "TopicEntityName": "James Dyson",
        "TopicEntityMid": "m.0209vm",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01c979",
            "EntityName": "Designer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02xhgy6",
            "EntityName": "Industrial designer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03sbb",
            "EntityName": "Inventor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09j9h",
            "EntityName": "Engineer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0209vm": "James Dyson"
    },
    "qid_topic_entity": {
      "Q1346101": "James Dyson"
    },
    "index": 172
  },
  {
    "QuestionId": "WebQTest-13",
    "RawQuestion": "who was vice president after kennedy died?",
    "ProcessedQuestion": "who was vice president after kennedy died",
    "Parses": [
      {
        "ParseId": "WebQTest-13.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? Assume VP succeeds P"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d3k14)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d3k14 ns:government.us_president.vice_president ?x .\n}\n",
        "PotentialTopicEntityMention": "kennedy",
        "TopicEntityName": "John F. Kennedy",
        "TopicEntityMid": "m.0d3k14",
        "InferentialChain": [
          "government.us_president.vice_president"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f7fy",
            "EntityName": "Lyndon B. Johnson"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d3k14": "John F. Kennedy"
    },
    "qid_topic_entity": {
      "Q9696": "John F. Kennedy"
    },
    "index": 173
  },
  {
    "QuestionId": "WebQTest-1091",
    "RawQuestion": "what type of religions are in the united states?",
    "ProcessedQuestion": "what type of religions are in the united states",
    "Parses": [
      {
        "ParseId": "WebQTest-1091.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09c7w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09c7w0 ns:location.statistical_region.religions ?y .\n?y ns:location.religion_percentage.religion ?x .\n}\n",
        "PotentialTopicEntityMention": "united states",
        "TopicEntityName": "United States of America",
        "TopicEntityMid": "m.09c7w0",
        "InferentialChain": [
          "location.statistical_region.religions",
          "location.religion_percentage.religion"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01lp8",
            "EntityName": "Christianity"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_gx",
            "EntityName": "Judaism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03j6c",
            "EntityName": "Hinduism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07w8f",
            "EntityName": "Unitarian Universalism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.092bf5",
            "EntityName": "Buddhism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0flw86",
            "EntityName": "Islam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kpl",
            "EntityName": "Atheism"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09c7w0": "United States of America"
    },
    "qid_topic_entity": {
      "Q30": "United States of America"
    },
    "index": 174
  },
  {
    "QuestionId": "WebQTest-239",
    "RawQuestion": "where do american bulldogs originate from?",
    "ProcessedQuestion": "where do american bulldogs originate from",
    "Parses": [
      {
        "ParseId": "WebQTest-239.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02z_05)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02z_05 ns:biology.animal_breed.place_of_origin ?x .\n}\n",
        "PotentialTopicEntityMention": "american bulldogs",
        "TopicEntityName": "American Bulldog",
        "TopicEntityMid": "m.02z_05",
        "InferentialChain": [
          "biology.animal_breed.place_of_origin"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02z_05": "American Bulldog"
    },
    "qid_topic_entity": {
      "Q37604": "American Bulldog"
    },
    "index": 175
  },
  {
    "QuestionId": "WebQTest-1200",
    "RawQuestion": "where did the mississippi river end?",
    "ProcessedQuestion": "where did the mississippi river end",
    "Parses": [
      {
        "ParseId": "WebQTest-1200.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04yf_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04yf_ ns:geography.river.mouth ?x .\n}\n",
        "PotentialTopicEntityMention": "mississippi river",
        "TopicEntityName": "Mississippi River",
        "TopicEntityMid": "m.04yf_",
        "InferentialChain": [
          "geography.river.mouth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03f_9",
            "EntityName": "Gulf of Mexico"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04yf_": "Mississippi River"
    },
    "qid_topic_entity": {
      "Q1497": "Mississippi River"
    },
    "index": 176
  },
  {
    "QuestionId": "WebQTest-1163",
    "RawQuestion": "what rainforest is in south america?",
    "ProcessedQuestion": "what rainforest is in south america",
    "Parses": [
      {
        "ParseId": "WebQTest-1163.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06n3y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06n3y ns:location.location.contains ?x .\n?x ns:geography.geographical_feature.category ns:m.02zr8 .\n}\n",
        "PotentialTopicEntityMention": "south america",
        "TopicEntityName": "South America",
        "TopicEntityMid": "m.06n3y",
        "InferentialChain": [
          "location.location.contains"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02zr8",
            "EntityName": "Forest",
            "SourceNodeIndex": 0,
            "NodePredicate": "geography.geographical_feature.category",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cx4p",
            "EntityName": "Amazon rainforest"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06n3y": "South America"
    },
    "qid_topic_entity": {
      "Q18": "South America"
    },
    "index": 177
  },
  {
    "QuestionId": "WebQTest-1194",
    "RawQuestion": "what club does cristiano ronaldo play for in 2010?",
    "ProcessedQuestion": "what club does cristiano ronaldo play for in 2010",
    "Parses": [
      {
        "ParseId": "WebQTest-1194.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02xt6q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02xt6q ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2010-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2010-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "cristiano ronaldo",
        "TopicEntityName": "Cristiano Ronaldo",
        "TopicEntityMid": "m.02xt6q",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2010-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2010-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2010-01-01",
          "End": "2010-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "2010"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rqxc",
            "EntityName": "Portugal national football team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06l22",
            "EntityName": "Real Madrid C.F."
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02xt6q": "Cristiano Ronaldo"
    },
    "qid_topic_entity": {
      "Q11571": "Cristiano Ronaldo"
    },
    "index": 178
  },
  {
    "QuestionId": "WebQTest-908",
    "RawQuestion": "what awards gary paulsen won?",
    "ProcessedQuestion": "what awards gary paulsen won",
    "Parses": [
      {
        "ParseId": "WebQTest-908.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04fpcx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04fpcx ns:award.award_winner.awards_won ?y .\n?y ns:award.award_honor.award ?x .\n}\n",
        "PotentialTopicEntityMention": "gary paulsen",
        "TopicEntityName": "Gary Paulsen",
        "TopicEntityMid": "m.04fpcx",
        "InferentialChain": [
          "award.award_winner.awards_won",
          "award.award_honor.award"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cd7p",
            "EntityName": "John Newbery Medal"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027x4ws",
            "EntityName": "Dorothy Canfield Fisher Children's Book Award"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0463dxd",
            "EntityName": "Margaret Edwards Award"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04p1pmd",
            "EntityName": "Spur Award for Best Juvenile Fiction"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04p1pmh",
            "EntityName": "Spur Award for Best Juvenile Nonfiction"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09kkqzd",
            "EntityName": "Anne V. Zarrow Award for Young Readers' Literature"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0djddy",
            "EntityName": "Regina Medal"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04fpcx": "Gary Paulsen"
    },
    "qid_topic_entity": {
      "Q718463": "Gary Paulsen"
    },
    "index": 179
  },
  {
    "QuestionId": "WebQTest-1127",
    "RawQuestion": "which country in north america is divided into provinces?",
    "ProcessedQuestion": "which country in north america is divided into provinces",
    "Parses": [
      {
        "ParseId": "WebQTest-1127.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: Done. Original comment: F"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x \nWHERE {\n    ns:m.059g4 ns:location.location.contains ?x .  # North America\n    ?x ns:common.topic.notable_types ns:m.01mp . # Country\n    ?x ns:location.location.contains ?y .\n    ?y ns:common.topic.notable_types ?t . \n# All the possible \"province\" type\nFILTER ((?t = ns:m.01nm) ||\n(?t = ns:m.02_1y_9) ||\n(?t = ns:m.02_3ny_) ||\n(?t = ns:m.02_3phk) ||\n(?t = ns:m.02_3r2r) ||\n(?t = ns:m.02_3rt3) ||\n(?t = ns:m.02_3zf4) ||\n(?t = ns:m.02_40h1) ||\n(?t = ns:m.02_96lm) ||\n(?t = ns:m.02yxk5c) ||\n(?t = ns:m.02zd6yn) ||\n(?t = ns:m.03z96kq) ||\n(?t = ns:m.04g7rg9) ||\n(?t = ns:m.04js0h5) ||\n(?t = ns:m.065rjpr) ||\n(?t = ns:m.078_8dm) ||\n(?t = ns:m.0hzcb3l) ||\n(?t = ns:m.0hzcb5p) ||\n(?t = ns:m.0hzcb69) ||\n(?t = ns:m.0hzcb7p) ||\n(?t = ns:m.0hzcd76) ||\n(?t = ns:m.0hzcd7v) ||\n(?t = ns:m.0hzcdb0) ||\n(?t = ns:m.0hzcdd6) ||\n(?t = ns:m.0hzcdlq) ||\n(?t = ns:m.0hzcdmg) ||\n(?t = ns:m.0hzcdrj) ||\n(?t = ns:m.0hzcdzg) ||\n(?t = ns:m.0hzcdzv) ||\n(?t = ns:m.0hzcf4d) ||\n(?t = ns:m.0hzcf50) ||\n(?t = ns:m.0hzcfdx) ||\n(?t = ns:m.0hzcffv) ||\n(?t = ns:m.0hzcfgg) ||\n(?t = ns:m.0hzcfj0) ||\n(?t = ns:m.0hzcfm2) ||\n(?t = ns:m.0hzcfpz) ||\n(?t = ns:m.0hzcfsv) ||\n(?t = ns:m.0hzcfyb) ||\n(?t = ns:m.0hzcg20) ||\n(?t = ns:m.0hzcg90) ||\n(?t = ns:m.0hzcgdz) ||\n(?t = ns:m.0hzcgfl) ||\n(?t = ns:m.0hzcggv) ||\n(?t = ns:m.0hzcgj2) ||\n(?t = ns:m.0hzcgk4) ||\n(?t = ns:m.0hzcgny) ||\n(?t = ns:m.0hzcgqt) ||\n(?t = ns:m.0hzcgsp) ||\n(?t = ns:m.0hzcgvh) ||\n(?t = ns:m.0hzcgvw) ||\n(?t = ns:m.0hzcgxf) ||\n(?t = ns:m.0hzcjv6) ||\n(?t = ns:m.0hzcjvv) ||\n(?t = ns:m.0hzcjxq) ||\n(?t = ns:m.0hzck_1) ||\n(?t = ns:m.0hzck1r) ||\n(?t = ns:m.0hzck47) ||\n(?t = ns:m.0hzck7p) ||\n(?t = ns:m.0hzckbh) ||\n(?t = ns:m.0hzckgc) ||\n(?t = ns:m.0hzcklh) ||\n(?t = ns:m.0hzckv_) ||\n(?t = ns:m.0hzckvp) ||\n(?t = ns:m.0hzckwy) ||\n(?t = ns:m.0hzcl1k) ||\n(?t = ns:m.0hzcl2t) ||\n(?t = ns:m.0hzfxh6) ||\n(?t = ns:m.0hzfxjh) ||\n(?t = ns:m.0hzfxny) ||\n(?t = ns:m.0hzfxv1) ||\n(?t = ns:m.0hzfxx7) ||\n(?t = ns:m.0hzfxzs) ||\n(?t = ns:m.0hzfy0d) ||\n(?t = ns:m.0hz_gjz) ||\n(?t = ns:m.0hzjldq) ||\n(?t = ns:m.0hzjm9b) ||\n(?t = ns:m.0hzjmf9) ||\n(?t = ns:m.0hzjmjf) ||\n(?t = ns:m.0hzjmlj) ||\n(?t = ns:m.0hzjmm6) ||\n(?t = ns:m.0hzjmmx) ||\n(?t = ns:m.0j1zd59) ||\n(?t = ns:m.0j1zd5w) )\n}",
        "PotentialTopicEntityMention": "north america",
        "TopicEntityName": "North America",
        "TopicEntityMid": "m.059g4",
        "InferentialChain": [
          "location.location.contains"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.059g4": "North America"
    },
    "qid_topic_entity": {
      "Q49": "North America"
    },
    "index": 180
  },
  {
    "QuestionId": "WebQTest-680",
    "RawQuestion": "what team did aguero play for?",
    "ProcessedQuestion": "what team did aguero play for",
    "Parses": [
      {
        "ParseId": "WebQTest-680.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? answering as if they typed \"teams\" and don't care about getting the current team also"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.099vgz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.099vgz ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n}\n",
        "PotentialTopicEntityMention": "aguero",
        "TopicEntityName": "Sergio Ag\u00fcero",
        "TopicEntityMid": "m.099vgz",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01634x",
            "EntityName": "Manchester City F.C."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bh_v",
            "EntityName": "Argentina national football team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047yd6",
            "EntityName": "Club Atl\u00e9tico Independiente"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0lg7v",
            "EntityName": "Atl\u00e9tico Madrid"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.099vgz": "Sergio Ag\u00fcero"
    },
    "qid_topic_entity": {
      "Q119562": "Sergio Ag\u00fcero"
    },
    "index": 181
  },
  {
    "QuestionId": "WebQTest-1336",
    "RawQuestion": "what is utah's state capitol?",
    "ProcessedQuestion": "what is utah 's state capitol",
    "Parses": [
      {
        "ParseId": "WebQTest-1336.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09b86q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09b86q ns:location.location.street_address ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "state capitol",
        "TopicEntityName": "Utah State Capitol",
        "TopicEntityMid": "m.09b86q",
        "InferentialChain": [
          "location.location.street_address",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2r6",
            "EntityName": "Salt Lake City"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1336.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07srw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07srw ns:base.aareas.schema.administrative_area.capital ?x .\n}\n",
        "PotentialTopicEntityMention": "utah",
        "TopicEntityName": "Utah",
        "TopicEntityMid": "m.07srw",
        "InferentialChain": [
          "base.aareas.schema.administrative_area.capital"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2r6",
            "EntityName": "Salt Lake City"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1336.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07srw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07srw ns:location.administrative_division.capital ?y .\n?y ns:location.administrative_division_capital_relationship.capital ?x .\n}\n",
        "PotentialTopicEntityMention": "utah",
        "TopicEntityName": "Utah",
        "TopicEntityMid": "m.07srw",
        "InferentialChain": [
          "location.administrative_division.capital",
          "location.administrative_division_capital_relationship.capital"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2r6",
            "EntityName": "Salt Lake City"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1336.P3",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07srw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07srw ns:location.us_state.capital ?x .\n}\n",
        "PotentialTopicEntityMention": "utah",
        "TopicEntityName": "Utah",
        "TopicEntityMid": "m.07srw",
        "InferentialChain": [
          "location.us_state.capital"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2r6",
            "EntityName": "Salt Lake City"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09b86q": "Utah State Capitol",
      "m.07srw": "Utah"
    },
    "qid_topic_entity": {
      "Q2627661": "Utah State Capitol",
      "Q829": "Utah"
    },
    "index": 182
  },
  {
    "QuestionId": "WebQTest-157",
    "RawQuestion": "where is mission san buenaventura located?",
    "ProcessedQuestion": "where is mission san buenaventura located",
    "Parses": [
      {
        "ParseId": "WebQTest-157.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gbsb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gbsb ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "mission san buenaventura",
        "TopicEntityName": "Mission San Buenaventura",
        "TopicEntityMid": "m.0gbsb",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zs2h_",
            "EntityName": "93001"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0l38x",
            "EntityName": "Ventura County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0gbsb": "Mission San Buenaventura"
    },
    "qid_topic_entity": {
      "Q12061890": "Mission San Buenaventura"
    },
    "index": 183
  },
  {
    "QuestionId": "WebQTest-1062",
    "RawQuestion": "what is the name of the currency used in italy?",
    "ProcessedQuestion": "what is the name of the currency used in italy",
    "Parses": [
      {
        "ParseId": "WebQTest-1062.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03rjj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03rjj ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "italy",
        "TopicEntityName": "Italy",
        "TopicEntityMid": "m.03rjj",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02l6h",
            "EntityName": "Euro"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03rjj": "Italy"
    },
    "qid_topic_entity": {
      "Q38": "Italy"
    },
    "index": 184
  },
  {
    "QuestionId": "WebQTest-525",
    "RawQuestion": "who are the senators of virginia 2013?",
    "ProcessedQuestion": "who are the senators of virginia 2013",
    "Parses": [
      {
        "ParseId": "WebQTest-525.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07z1m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07z1m ns:government.political_district.representatives ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.governmental_body ns:m.07t58 .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2013-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2013-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "virginia",
        "TopicEntityName": "Virginia",
        "TopicEntityMid": "m.07z1m",
        "InferentialChain": [
          "government.political_district.representatives",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.07t58",
            "EntityName": "United States Senate",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.governmental_body",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2013-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2013-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2013-01-01",
          "End": "2013-12-31",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": "2013"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.024mm1",
            "EntityName": "Mark Warner"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.053f8h",
            "EntityName": "Tim Kaine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0574xy",
            "EntityName": "Jim Webb"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07z1m": "Virginia"
    },
    "qid_topic_entity": {
      "Q1370": "Virginia"
    },
    "index": 185
  },
  {
    "QuestionId": "WebQTest-145",
    "RawQuestion": "what college did albert einstein go to?",
    "ProcessedQuestion": "what college did albert einstein go to",
    "Parses": [
      {
        "ParseId": "WebQTest-145.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jcx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jcx ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "albert einstein",
        "TopicEntityName": "Albert Einstein",
        "TopicEntityMid": "m.0jcx",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dyk8",
            "EntityName": "ETH Zurich"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01tpvt",
            "EntityName": "University of Zurich"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jcx": "Albert Einstein"
    },
    "qid_topic_entity": {
      "Q937": "Albert Einstein"
    },
    "index": 186
  },
  {
    "QuestionId": "WebQTest-778",
    "RawQuestion": "what was jesse owens education?",
    "ProcessedQuestion": "what was jesse owens education",
    "Parses": [
      {
        "ParseId": "WebQTest-778.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cmr3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cmr3 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "jesse owens",
        "TopicEntityName": "Jesse Owens",
        "TopicEntityMid": "m.0cmr3",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05krk",
            "EntityName": "Ohio State University"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fcddh",
            "EntityName": "East Technical High School"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0cmr3": "Jesse Owens"
    },
    "qid_topic_entity": {
      "Q52651": "Jesse Owens"
    },
    "index": 187
  },
  {
    "QuestionId": "WebQTest-1178",
    "RawQuestion": "where is tupac from originally?",
    "ProcessedQuestion": "where is tupac from originally",
    "Parses": [
      {
        "ParseId": "WebQTest-1178.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07pzc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07pzc ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "tupac",
        "TopicEntityName": "Tupac Shakur",
        "TopicEntityMid": "m.07pzc",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02cx_2",
            "EntityName": "East Harlem"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07pzc": "Tupac Shakur"
    },
    "qid_topic_entity": {
      "Q6107": "Tupac Shakur"
    },
    "index": 188
  },
  {
    "QuestionId": "WebQTest-791",
    "RawQuestion": "what other books did louis sachar write?",
    "ProcessedQuestion": "what other books did louis sachar write",
    "Parses": [
      {
        "ParseId": "WebQTest-791.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bq8d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bq8d ns:book.author.book_editions_published ?x .\n}\n",
        "PotentialTopicEntityMention": "louis sachar",
        "TopicEntityName": "Louis Sachar",
        "TopicEntityMid": "m.01bq8d",
        "InferentialChain": [
          "book.author.book_editions_published"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028xsvy",
            "EntityName": "Small Steps"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028y3lc",
            "EntityName": "Someday Angeline"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028y9y6",
            "EntityName": "Sixth Grade Secrets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028yqjw",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5dp",
            "EntityName": "Johnny's in the basement"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5f_",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5fk",
            "EntityName": "Wayside School gets a little stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5gf",
            "EntityName": "Class President (A Stepping Stone Book(TM))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5gn",
            "EntityName": "A magic crystal?"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5h2",
            "EntityName": "Der Fluch des David Ballinger. ( Ab 11 J.)."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5h9",
            "EntityName": "Sixth Grade Secrets (Apple Paperbacks)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5hj",
            "EntityName": "Wayside School is falling down"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5hz",
            "EntityName": "There's a boy in the girls bathroom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5jd",
            "EntityName": "Kidnapped at Birth? (A Stepping Stone Book(TM))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5jm",
            "EntityName": "The Boy Who Lost His Face"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5jw",
            "EntityName": "Il y a un gar\u00e7on dans les toilettes des filles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5k2",
            "EntityName": "A Flying Birthday Cake? (A Stepping Stone Book(TM))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5k9",
            "EntityName": "Why Pick on Me? (A Stepping Stone Book(TM))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5kj",
            "EntityName": "Small steps"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5kt",
            "EntityName": "Sideways stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5l7",
            "EntityName": "Wayside School Boxed Set"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5lg",
            "EntityName": "Stanley Yelnats' Survival Guide to Camp Green Lake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5lp",
            "EntityName": "Someday Angeline"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5m3",
            "EntityName": "Super Fast, Out of Control! (A Stepping Stone Book(TM))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5mb",
            "EntityName": "Holes Activity Pack"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5mk",
            "EntityName": "L\u00f6cher"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5mt",
            "EntityName": "Dogs Don't Tell Jokes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5n0",
            "EntityName": "Sideways Arithmetic From Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_cdl",
            "EntityName": "Small Steps (Readers Circle)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_cdw",
            "EntityName": "Small steps"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_kj_",
            "EntityName": "Someday Angeline (Avon/Camelot Book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_kj0",
            "EntityName": "Someday Angeline"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_kjh",
            "EntityName": "Someday Angeline (Avon/Camelot Book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_kjr",
            "EntityName": "Someday Angeline (Avon/Camelot Book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v09_5",
            "EntityName": "Sideways stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v09_n",
            "EntityName": "Sideways stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v09wp",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v09x5",
            "EntityName": "Sideways stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v09xf",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v09xp",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v09xy",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v09yr",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v09zg",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5xwx",
            "EntityName": "More Sideways Arithmetic from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5xx4",
            "EntityName": "More Sideways Arithmetic From Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5xxw",
            "EntityName": "More Sideways Arithmetic from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfmz4",
            "EntityName": "Stanley Yelnats Survival Guide to Camp Green Lake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfsfw",
            "EntityName": "The boy who lost his face"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfsh_",
            "EntityName": "Boy Who Lost His Face"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfsh5",
            "EntityName": "The boy who lost his face"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfsj7",
            "EntityName": "The Boy Who Lost His Face"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfy26",
            "EntityName": "Wayside School Gets a Little Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfy2h",
            "EntityName": "Wayside School Gets a Little Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfy3m",
            "EntityName": "Wayside School Gets a Little Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfy3x",
            "EntityName": "Wayside School Gets a Little Stranger (rack) (Wayside School)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfy9y",
            "EntityName": "Sideways Arithmetic from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfybn",
            "EntityName": "Sideways Arithmetic from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfyby",
            "EntityName": "Sideways Arithmetic from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_0q",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_1f",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_1z",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_26",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_2z",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_3p",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_47",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_4h",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_4s",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_50",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_58",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_5j",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_5s",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_60",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_68",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_6j",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_6t",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_71",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_80",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_8s",
            "EntityName": "Marvin Redpost."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk0f_",
            "EntityName": "Wayside School is Falling Down"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk0g_",
            "EntityName": "Wayside School is falling down (Celebrate reading, Scott Foresman)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk0gr",
            "EntityName": "Wayside School Is Falling Down"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk0h_",
            "EntityName": "Wayside School Is Falling Down"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk0hh",
            "EntityName": "Wayside School Is Falling Down"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk0hr",
            "EntityName": "Wayside School Is Falling Down"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk0jj",
            "EntityName": "Wayside School is falling down"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkj56",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkj5g",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkj5q",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkj5z",
            "EntityName": "Sideways stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkj6z",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkj76",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkj7g",
            "EntityName": "Sideways stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkj8s",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vl07k",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vl080",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vl08h",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vl08z",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vl09f",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztq0",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztq9",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztqt",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztrl",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztrv",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzts9",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztst",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztt1",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztt9",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzttl",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztv0",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztv9",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztvk",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztvv",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztw2",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztwb",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztwl",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztww",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztx4",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzwd7",
            "EntityName": "Holes (Yearling Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzwdh",
            "EntityName": "Holes (with \\\"Connections\\\") HRW Library (HRW library)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzwf8",
            "EntityName": "Holes. (Lernmaterialien)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzwfv",
            "EntityName": "Holes (Cascades)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzwg2",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzwgy",
            "EntityName": "Holes. (Lernmaterialien)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzwh6",
            "EntityName": "Holes (Readers Circle)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzwhg",
            "EntityName": "Holes (World Book Day 2001)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzwj8",
            "EntityName": "Holes (Listening Library)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w058k",
            "EntityName": "Sixth Grade Secrets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w059b",
            "EntityName": "Sixth grade secrets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w059v",
            "EntityName": "Sixth Grade Secrets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w05b2",
            "EntityName": "Sixth Grade Secrets (An Apple Paperback)"
          }
        ]
      },
      {
        "ParseId": "WebQTest-791.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bq8d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bq8d ns:book.author.works_written ?x .\n}\n",
        "PotentialTopicEntityMention": "louis sachar",
        "TopicEntityName": "Louis Sachar",
        "TopicEntityMid": "m.01bq8d",
        "InferentialChain": [
          "book.author.works_written"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.1218f5g0",
            "EntityName": ""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010r2x8r",
            "EntityName": "Kidnapped at Birth?"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010r3l0q",
            "EntityName": "A Flying Birthday Cake?"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011brh75",
            "EntityName": "More Sideways Arithmetic from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027bxn3",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027bxq6",
            "EntityName": "Wayside School is Falling Down"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027bxzt",
            "EntityName": "Wayside School Gets A Little Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027by4_",
            "EntityName": "Sideways Arithmetic from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03tgtr",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t484_",
            "EntityName": "Der Fluch des David Ballinger. ( Ab 11 J.)."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t4842",
            "EntityName": "Johnny's in the Basement"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t484b",
            "EntityName": "Class President"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t484l",
            "EntityName": "A magic crystal?"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t485_",
            "EntityName": "Why Pick on Me?"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t485h",
            "EntityName": "Il y a un gar\u00e7on dans les toilettes des filles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t4867",
            "EntityName": "Wayside School Collection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t486h",
            "EntityName": "Super Fast, Out of Control!"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.067d3d8",
            "EntityName": "Alone in His Teacher's House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.069nlkb",
            "EntityName": "Pequenos Pasos/ Small Steps"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06blrtc",
            "EntityName": "Louis Sacher Collection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ck0yg",
            "EntityName": "Hoyos/Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dymp",
            "EntityName": "The Boy Who Lost His Face"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06hhh6t",
            "EntityName": "Hay Un Chico En El Bano De Las Chicas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06tm95g",
            "EntityName": "Monkey soup"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09yl25",
            "EntityName": "Dogs Don't Tell Jokes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cmt6c",
            "EntityName": "Small Steps"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dh2fh",
            "EntityName": "There's a Boy in the Girls' Bathroom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dl1lt",
            "EntityName": "Someday Angeline"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f8d9g",
            "EntityName": "Stanley Yelnats' Survival Guide to Camp Green Lake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f95rs",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fq08x0",
            "EntityName": "The Cardturner"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h0jhl",
            "EntityName": "Sixth Grade Secrets"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01bq8d": "Louis Sachar"
    },
    "qid_topic_entity": {
      "Q553137": "Louis Sachar"
    },
    "index": 189
  },
  {
    "QuestionId": "WebQTest-820",
    "RawQuestion": "what are the names of harry potter movies in order?",
    "ProcessedQuestion": "what are the names of harry potter movies in order",
    "Parses": [
      {
        "ParseId": "WebQTest-820.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? did not order "
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02676m4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02676m4 ns:film.film_series.films_in_series ?x .\n}\n",
        "PotentialTopicEntityMention": "harry potter movies",
        "TopicEntityName": "Harry Potter",
        "TopicEntityMid": "m.02676m4",
        "InferentialChain": [
          "film.film_series.films_in_series"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pth35",
            "EntityName": "Harry Potter and the Deathly Hallows - Part I"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03176f",
            "EntityName": "Harry Potter and the Philosopher's Stone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.031778",
            "EntityName": "Harry Potter and the Chamber of Secrets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03177r",
            "EntityName": "Harry Potter and the Prisoner of Azkaban"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.031786",
            "EntityName": "Harry Potter and the Goblet of Fire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.031hcx",
            "EntityName": "Harry Potter and the Order of the Phoenix"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03hxsv",
            "EntityName": "Harry Potter and the Half-Blood Prince"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gvsynb",
            "EntityName": "Harry Potter and the Deathly Hallows \u2013 Part 2"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02676m4": "Harry Potter"
    },
    "qid_topic_entity": {
      "Q216930": "Harry Potter"
    },
    "index": 190
  },
  {
    "QuestionId": "WebQTest-41",
    "RawQuestion": "where is the galapagos islands located on a world map?",
    "ProcessedQuestion": "where is the galapagos islands located on a world map",
    "Parses": [
      {
        "ParseId": "WebQTest-41.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.016zjj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.016zjj ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "galapagos islands",
        "TopicEntityName": "Gal\u00e1pagos Islands",
        "TopicEntityMid": "m.016zjj",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02k1b",
            "EntityName": "Ecuador"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03660b",
            "EntityName": "Gal\u00e1pagos Province"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05rgl",
            "EntityName": "Pacific Ocean"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.016zjj": "Gal\u00e1pagos Islands"
    },
    "qid_topic_entity": {
      "Q38095": "Gal\u00e1pagos Islands"
    },
    "index": 191
  },
  {
    "QuestionId": "WebQTest-775",
    "RawQuestion": "what to do this weekend in manchester with kids?",
    "ProcessedQuestion": "what to do this weekend in manchester with kids",
    "Parses": [
      {
        "ParseId": "WebQTest-775.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.052bw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.052bw ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "manchester",
        "TopicEntityName": "Manchester",
        "TopicEntityMid": "m.052bw",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lv55",
            "EntityName": "Imperial War Museum North"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02w89p",
            "EntityName": "Urbis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.030lpl",
            "EntityName": "Old Trafford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0383g6",
            "EntityName": "Whitworth Art Gallery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0383jm",
            "EntityName": "Manchester Art Gallery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.039s65",
            "EntityName": "Manchester Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.039s6j",
            "EntityName": "Manchester Jewish Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cwfv_",
            "EntityName": "Great Manchester Run"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03d5f9f",
            "EntityName": "Chinatown, Manchester"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.041xlb",
            "EntityName": "Manchester Cathedral"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bm8swc",
            "EntityName": "The Moon Under Water, Manchester"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gg7rlr",
            "EntityName": "Wheel of Manchester"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n4890m",
            "EntityName": "Albert Hall, Manchester"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.052bw": "Manchester"
    },
    "qid_topic_entity": {
      "Q18125": "Manchester"
    },
    "index": 192
  },
  {
    "QuestionId": "WebQTest-2017",
    "RawQuestion": "what party was abe lincoln part of?",
    "ProcessedQuestion": "what party was abe lincoln part of",
    "Parses": [
      {
        "ParseId": "WebQTest-2017.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gzh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gzh ns:government.politician.party ?y .\n?y ns:government.political_party_tenure.party ?x .\n}\n",
        "PotentialTopicEntityMention": "abe lincoln",
        "TopicEntityName": "Abraham Lincoln",
        "TopicEntityMid": "m.0gzh",
        "InferentialChain": [
          "government.politician.party",
          "government.political_party_tenure.party"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07wbk",
            "EntityName": "Republican Party"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07wdw",
            "EntityName": "Whig Party"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d9fdp",
            "EntityName": "National Union Party"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g7ly4",
            "EntityName": "Illinois Republican Party"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0gzh": "Abraham Lincoln"
    },
    "qid_topic_entity": {
      "Q91": "Abraham Lincoln"
    },
    "index": 193
  },
  {
    "QuestionId": "WebQTest-1426",
    "RawQuestion": "where is ibrahim afellay from?",
    "ProcessedQuestion": "where is ibrahim afellay from",
    "Parses": [
      {
        "ParseId": "WebQTest-1426.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08w78j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08w78j ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "ibrahim afellay",
        "TopicEntityName": "Ibrahim Afellay",
        "TopicEntityMid": "m.08w78j",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d9s5",
            "EntityName": "Utrecht"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.08w78j": "Ibrahim Afellay"
    },
    "qid_topic_entity": {
      "Q165014": "Ibrahim Afellay"
    },
    "index": 194
  },
  {
    "QuestionId": "WebQTest-220",
    "RawQuestion": "what language turkey people speak?",
    "ProcessedQuestion": "what language turkey people speak",
    "Parses": [
      {
        "ParseId": "WebQTest-220.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01znc_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01znc_ ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "turkey",
        "TopicEntityName": "Turkey",
        "TopicEntityMid": "m.01znc_",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwyss",
            "EntityName": "Turkish Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.033xvz",
            "EntityName": "Zaza language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04p7x",
            "EntityName": "Ladino Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b1g2",
            "EntityName": "Kurdish languages"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jzc",
            "EntityName": "Arabic Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-220.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01znc_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01znc_ ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "turkey",
        "TopicEntityName": "Turkey",
        "TopicEntityMid": "m.01znc_",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwyss",
            "EntityName": "Turkish Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01znc_": "Turkey"
    },
    "qid_topic_entity": {
      "Q43": "Turkey"
    },
    "index": 195
  },
  {
    "QuestionId": "WebQTest-859",
    "RawQuestion": "what are the predominant religions in russia?",
    "ProcessedQuestion": "what are the predominant religions in russia",
    "Parses": [
      {
        "ParseId": "WebQTest-859.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:location.statistical_region.religions ?y .\n?y ns:location.religion_percentage.religion ?x .\n}\n",
        "PotentialTopicEntityMention": "russia",
        "TopicEntityName": "Russia",
        "TopicEntityMid": "m.06bnz",
        "InferentialChain": [
          "location.statistical_region.religions",
          "location.religion_percentage.religion"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b06q",
            "EntityName": "Russian Orthodox Church"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0flw86",
            "EntityName": "Islam"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06bnz": "Russia"
    },
    "qid_topic_entity": {
      "Q159": "Russia"
    },
    "index": 196
  },
  {
    "QuestionId": "WebQTest-996",
    "RawQuestion": "where do ireland play rugby union?",
    "ProcessedQuestion": "where do ireland play rugby union",
    "Parses": [
      {
        "ParseId": "WebQTest-996.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03t3zk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03t3zk ns:sports.sports_team.arena_stadium ?x .\n}\n",
        "PotentialTopicEntityMention": "rugby union",
        "TopicEntityName": "Ireland national rugby union team",
        "TopicEntityMid": "m.03t3zk",
        "InferentialChain": [
          "sports.sports_team.arena_stadium"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05h4fd2",
            "EntityName": "Aviva Stadium"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03t3zk": "Ireland national rugby union team"
    },
    "qid_topic_entity": {
      "Q599903": "Ireland national rugby union team"
    },
    "index": 197
  },
  {
    "QuestionId": "WebQTest-821",
    "RawQuestion": "what did pamela courson die from?",
    "ProcessedQuestion": "what did pamela courson die from",
    "Parses": [
      {
        "ParseId": "WebQTest-821.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ms9g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ms9g ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "pamela courson",
        "TopicEntityName": "Pamela Courson",
        "TopicEntityMid": "m.07ms9g",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01tf_6",
            "EntityName": "Drug overdose"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kp1qn",
            "EntityName": "Heroin overdose"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07ms9g": "Pamela Courson"
    },
    "qid_topic_entity": {
      "Q428967": "Pamela Courson"
    },
    "index": 198
  },
  {
    "QuestionId": "WebQTest-371",
    "RawQuestion": "what are the major languages spoken in greece?",
    "ProcessedQuestion": "what are the major languages spoken in greece",
    "Parses": [
      {
        "ParseId": "WebQTest-371.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.035qy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.035qy ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "greece",
        "TopicEntityName": "Greece",
        "TopicEntityMid": "m.035qy",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0349s",
            "EntityName": "Greek Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.035qy": "Greece"
    },
    "qid_topic_entity": {
      "Q41": "Greece"
    },
    "index": 199
  },
  {
    "QuestionId": "WebQTest-830",
    "RawQuestion": "where is taylor swift from?",
    "ProcessedQuestion": "where is taylor swift from",
    "Parses": [
      {
        "ParseId": "WebQTest-830.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dl567)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dl567 ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "taylor swift",
        "TopicEntityName": "Taylor Swift",
        "TopicEntityMid": "m.0dl567",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlgm",
            "EntityName": "Reading"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0dl567": "Taylor Swift"
    },
    "qid_topic_entity": {
      "Q112865783": "Taylor Swift"
    },
    "index": 200
  },
  {
    "QuestionId": "WebQTest-684",
    "RawQuestion": "what sort of government does nigeria have?",
    "ProcessedQuestion": "what sort of government does nigeria have",
    "Parses": [
      {
        "ParseId": "WebQTest-684.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05cgv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05cgv ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "nigeria",
        "TopicEntityName": "Nigeria",
        "TopicEntityMid": "m.05cgv",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d9r3",
            "EntityName": "Presidential system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j729",
            "EntityName": "Federal republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05cgv": "Nigeria"
    },
    "qid_topic_entity": {
      "Q1033": "Nigeria"
    },
    "index": 201
  },
  {
    "QuestionId": "WebQTest-1378",
    "RawQuestion": "who does kellan lutz play in prom night?",
    "ProcessedQuestion": "who does kellan lutz play in prom night",
    "Parses": [
      {
        "ParseId": "WebQTest-1378.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02pjwn5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02pjwn5 ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.02rxbq6 .\n}\n",
        "PotentialTopicEntityMention": "kellan lutz",
        "TopicEntityName": "Kellan Lutz",
        "TopicEntityMid": "m.02pjwn5",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02rxbq6",
            "EntityName": "Prom Night",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gyg58j",
            "EntityName": "Rick Leland"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02pjwn5": "Kellan Lutz"
    },
    "qid_topic_entity": {
      "Q235707": "Kellan Lutz"
    },
    "index": 202
  },
  {
    "QuestionId": "WebQTest-1866",
    "RawQuestion": "what is the state name of new york city?",
    "ProcessedQuestion": "what is the state name of new york city",
    "Parses": [
      {
        "ParseId": "WebQTest-1866.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_286)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_286 ns:base.biblioness.bibs_location.state ?x .\n}\n",
        "PotentialTopicEntityMention": "new york city",
        "TopicEntityName": "New York City",
        "TopicEntityMid": "m.02_286",
        "InferentialChain": [
          "base.biblioness.bibs_location.state"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059rby",
            "EntityName": "New York"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02_286": "New York City"
    },
    "qid_topic_entity": {
      "Q60": "New York City"
    },
    "index": 203
  },
  {
    "QuestionId": "WebQTest-759",
    "RawQuestion": "who brad pitt has dated?",
    "ProcessedQuestion": "who brad pitt has dated",
    "Parses": [
      {
        "ParseId": "WebQTest-759.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "?? should this be a union with those that he was engaged to? probably"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c6qh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c6qh ns:celebrities.celebrity.sexual_relationships ?y .\n?y ns:celebrities.romantic_relationship.celebrity ?x .\n?y ns:celebrities.romantic_relationship.relationship_type ns:m.02_7k44 .\n}\n",
        "PotentialTopicEntityMention": "brad pitt",
        "TopicEntityName": "Brad Pitt",
        "TopicEntityMid": "m.0c6qh",
        "InferentialChain": [
          "celebrities.celebrity.sexual_relationships",
          "celebrities.romantic_relationship.celebrity"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02_7k44",
            "EntityName": "Dated",
            "SourceNodeIndex": 0,
            "NodePredicate": "celebrities.romantic_relationship.relationship_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02cpb7",
            "EntityName": "Thandie Newton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02g0mx",
            "EntityName": "Juliette Lewis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j9sl",
            "EntityName": "Sinitta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bblqk",
            "EntityName": "Shalane McCall"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hjxj",
            "EntityName": "Robin Givens"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0c6qh": "Brad Pitt"
    },
    "qid_topic_entity": {
      "Q35332": "Brad Pitt"
    },
    "index": 204
  },
  {
    "QuestionId": "WebQTest-1806",
    "RawQuestion": "what position did lebron james play?",
    "ProcessedQuestion": "what position did lebron james play",
    "Parses": [
      {
        "ParseId": "WebQTest-1806.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jz6d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jz6d ns:basketball.basketball_player.position_s ?x .\n}\n",
        "PotentialTopicEntityMention": "lebron james",
        "TopicEntityName": "LeBron James",
        "TopicEntityMid": "m.01jz6d",
        "InferentialChain": [
          "basketball.basketball_player.position_s"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01pv51",
            "EntityName": "Power forward"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0355dz",
            "EntityName": "Small forward"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ww62",
            "EntityName": "Point forward"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1806.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jz6d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jz6d ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.position ?x .\n}\n",
        "PotentialTopicEntityMention": "lebron james",
        "TopicEntityName": "LeBron James",
        "TopicEntityMid": "m.01jz6d",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.position"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01pv51",
            "EntityName": "Power forward"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03558l",
            "EntityName": "Shooting guard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0355dz",
            "EntityName": "Small forward"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ww62",
            "EntityName": "Point forward"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05ch8k9",
            "EntityName": "Forward"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01jz6d": "LeBron James"
    },
    "qid_topic_entity": {
      "Q36159": "LeBron James"
    },
    "index": 205
  },
  {
    "QuestionId": "WebQTest-608",
    "RawQuestion": "when did liverpool fc last win the champions league?",
    "ProcessedQuestion": "when did liverpool fc last win the champions league",
    "Parses": [
      {
        "ParseId": "WebQTest-608.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? last"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04ltf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04ltf ns:sports.sports_team.championships ?x .\n?x ns:sports.sports_championship_event.championship ns:m.012dbw .\n?x ns:time.event.end_date ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "liverpool fc",
        "TopicEntityName": "Liverpool F.C.",
        "TopicEntityMid": "m.04ltf",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.012dbw",
            "EntityName": "Football League Cup",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_championship_event.championship",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "time.event.end_date",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h_b67k",
            "EntityName": "2012 Football League Cup Final"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04ltf": "Liverpool F.C."
    },
    "qid_topic_entity": {
      "Q1130849": "Liverpool F.C."
    },
    "index": 206
  },
  {
    "QuestionId": "WebQTest-960",
    "RawQuestion": "who plays dwight in the office?",
    "ProcessedQuestion": "who plays dwight in the office",
    "Parses": [
      {
        "ParseId": "WebQTest-960.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08jgk1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08jgk1 ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.089pwh .\n}\n",
        "PotentialTopicEntityMention": "the office",
        "TopicEntityName": "The Office",
        "TopicEntityMid": "m.08jgk1",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.089pwh",
            "EntityName": "Dwight Schrute",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.083chw",
            "EntityName": "Rainn Wilson"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.08jgk1": "The Office"
    },
    "qid_topic_entity": {
      "Q23831": "The Office"
    },
    "index": 207
  },
  {
    "QuestionId": "WebQTest-696",
    "RawQuestion": "when did juventus win the champions league?",
    "ProcessedQuestion": "when did juventus win the champions league",
    "Parses": [
      {
        "ParseId": "WebQTest-696.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.045xx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.045xx ns:sports.sports_team.championships ?x .\n?x ns:sports.sports_championship_event.championship ns:m.05nblxt .\n}\n",
        "PotentialTopicEntityMention": "juventus",
        "TopicEntityName": "Juventus F.C.",
        "TopicEntityMid": "m.045xx",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.05nblxt",
            "EntityName": "UEFA Champions League Final",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_championship_event.championship",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pt_57",
            "EntityName": "1996 UEFA Champions League Final"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.045xx": "Juventus F.C."
    },
    "qid_topic_entity": {
      "Q1422": "Juventus F.C."
    },
    "index": 208
  },
  {
    "QuestionId": "WebQTest-133",
    "RawQuestion": "where did dolly parton grow up?",
    "ProcessedQuestion": "where did dolly parton grow up",
    "Parses": [
      {
        "ParseId": "WebQTest-133.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02f1c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02f1c ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "dolly parton",
        "TopicEntityName": "Dolly Parton",
        "TopicEntityMid": "m.02f1c",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_wrs",
            "EntityName": "Sevierville"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02f1c": "Dolly Parton"
    },
    "qid_topic_entity": {
      "Q180453": "Dolly Parton"
    },
    "index": 209
  },
  {
    "QuestionId": "WebQTest-752",
    "RawQuestion": "what drink did john pemberton create?",
    "ProcessedQuestion": "what drink did john pemberton create",
    "Parses": [
      {
        "ParseId": "WebQTest-752.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h24w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h24w ns:law.inventor.inventions ?x .\n}\n",
        "PotentialTopicEntityMention": "john pemberton",
        "TopicEntityName": "John Pemberton",
        "TopicEntityMid": "m.0h24w",
        "InferentialChain": [
          "law.inventor.inventions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01yvs",
            "EntityName": "Coca-Cola"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0h24w": "John Pemberton"
    },
    "qid_topic_entity": {
      "Q215959": "John Pemberton"
    },
    "index": 210
  },
  {
    "QuestionId": "WebQTest-1010",
    "RawQuestion": "what did bruce jenner win gold medal for?",
    "ProcessedQuestion": "what did bruce jenner win gold medal for",
    "Parses": [
      {
        "ParseId": "WebQTest-1010.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03bbdn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03bbdn ns:olympics.olympic_athlete.medals_won ?y .\n?y ns:olympics.olympic_medal_honor.event ?x .\n?y ns:olympics.olympic_medal_honor.medal ns:m.02lpp7 .\n}\n",
        "PotentialTopicEntityMention": "bruce jenner",
        "TopicEntityName": "Caitlyn Jenner",
        "TopicEntityMid": "m.03bbdn",
        "InferentialChain": [
          "olympics.olympic_athlete.medals_won",
          "olympics.olympic_medal_honor.event"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02lpp7",
            "EntityName": "Gold medal",
            "SourceNodeIndex": 0,
            "NodePredicate": "olympics.olympic_medal_honor.medal",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ygntp",
            "EntityName": "Athletics at the 1976 Summer Olympics - Men's Decathlon"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03bbdn": "Caitlyn Jenner"
    },
    "qid_topic_entity": {
      "Q365144": "Caitlyn Jenner"
    },
    "index": 211
  },
  {
    "QuestionId": "WebQTest-2022",
    "RawQuestion": "where is dwayne johnson ethnicity?",
    "ProcessedQuestion": "where is dwayne johnson ethnicity",
    "Parses": [
      {
        "ParseId": "WebQTest-2022.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.014g_s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.014g_s ns:people.person.ethnicity ?x .\n}\n",
        "PotentialTopicEntityMention": "dwayne johnson",
        "TopicEntityName": "Dwayne Johnson",
        "TopicEntityMid": "m.014g_s",
        "InferentialChain": [
          "people.person.ethnicity"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07j80c",
            "EntityName": "Samoan American"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0x67",
            "EntityName": "African American"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.014g_s": "Dwayne Johnson"
    },
    "qid_topic_entity": {
      "Q10738": "Dwayne Johnson"
    },
    "index": 212
  },
  {
    "QuestionId": "WebQTest-249",
    "RawQuestion": "what was the cause of death for bruce lee?",
    "ProcessedQuestion": "what was the cause of death for bruce lee",
    "Parses": [
      {
        "ParseId": "WebQTest-249.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.099d4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.099d4 ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "bruce lee",
        "TopicEntityName": "Bruce Lee",
        "TopicEntityMid": "m.099d4",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0219bz",
            "EntityName": "Cerebral edema"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.099d4": "Bruce Lee"
    },
    "qid_topic_entity": {
      "Q16397": "Bruce Lee"
    },
    "index": 213
  },
  {
    "QuestionId": "WebQTest-768",
    "RawQuestion": "who owns volkswagen car company?",
    "ProcessedQuestion": "who owns volkswagen car company",
    "Parses": [
      {
        "ParseId": "WebQTest-768.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ywl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ywl ns:organization.organization.parent ?y .\n?y ns:organization.organization_relationship.parent ?x .\n}\n",
        "PotentialTopicEntityMention": "volkswagen",
        "TopicEntityName": "Volkswagen Passenger Cars",
        "TopicEntityMid": "m.07ywl",
        "InferentialChain": [
          "organization.organization.parent",
          "organization.organization_relationship.parent"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07_zt",
            "EntityName": "Volkswagen Group"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07ywl": "Volkswagen Passenger Cars"
    },
    "qid_topic_entity": {
      "Q246": "Volkswagen Passenger Cars"
    },
    "index": 214
  },
  {
    "QuestionId": "WebQTest-648",
    "RawQuestion": "who did kimberly williams marry?",
    "ProcessedQuestion": "who did kimberly williams marry",
    "Parses": [
      {
        "ParseId": "WebQTest-648.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05d5mc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05d5mc ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "PotentialTopicEntityMention": "kimberly williams",
        "TopicEntityName": "Kimberly Williams-Paisley",
        "TopicEntityMid": "m.05d5mc",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gr7w",
            "EntityName": "Brad Paisley"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05d5mc": "Kimberly Williams-Paisley"
    },
    "qid_topic_entity": {
      "Q234967": "Kimberly Williams-Paisley"
    },
    "index": 215
  },
  {
    "QuestionId": "WebQTest-519",
    "RawQuestion": "what timezone is nashville tn?",
    "ProcessedQuestion": "what timezone is nashville tn",
    "Parses": [
      {
        "ParseId": "WebQTest-519.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05jbn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05jbn ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "nashville tn",
        "TopicEntityName": "Nashville",
        "TopicEntityMid": "m.05jbn",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02fqwt",
            "EntityName": "Central Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05jbn": "Nashville"
    },
    "qid_topic_entity": {
      "Q23197": "Nashville"
    },
    "index": 216
  },
  {
    "QuestionId": "WebQTest-1009",
    "RawQuestion": "where did george herbert walker bush go to college?",
    "ProcessedQuestion": "where did george herbert walker bush go to college",
    "Parses": [
      {
        "ParseId": "WebQTest-1009.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.034ls)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.034ls ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "george herbert walker bush",
        "TopicEntityName": "George H. W. Bush",
        "TopicEntityMid": "m.034ls",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08815",
            "EntityName": "University Yale"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.034ls": "George H. W. Bush"
    },
    "qid_topic_entity": {
      "Q23505": "George H. W. Bush"
    },
    "index": 217
  },
  {
    "QuestionId": "WebQTest-427",
    "RawQuestion": "what is the zip code for midland tx?",
    "ProcessedQuestion": "what is the zip code for midland tx",
    "Parses": [
      {
        "ParseId": "WebQTest-427.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.013n2h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.013n2h ns:location.citytown.postal_codes ?x .\n}\n",
        "PotentialTopicEntityMention": "midland tx",
        "TopicEntityName": "Midland",
        "TopicEntityMid": "m.013n2h",
        "InferentialChain": [
          "location.citytown.postal_codes"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020zz8q",
            "EntityName": "79702"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0215s_p",
            "EntityName": "79705"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0215t0_",
            "EntityName": "79701"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0215t3_",
            "EntityName": "79707"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0215t88",
            "EntityName": "79703"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0215t9t",
            "EntityName": "79706"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nq9l_",
            "EntityName": "79711"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nq9ls",
            "EntityName": "79712"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nq9m6",
            "EntityName": "79710"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nq9mf",
            "EntityName": "79708"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nq9mn",
            "EntityName": "79704"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.013n2h": "Midland"
    },
    "qid_topic_entity": {
      "Q128321": "Midland"
    },
    "index": 218
  },
  {
    "QuestionId": "WebQTest-958",
    "RawQuestion": "what are some famous people from el salvador?",
    "ProcessedQuestion": "what are some famous people from el salvador",
    "Parses": [
      {
        "ParseId": "WebQTest-958.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k8k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k8k ns:location.location.people_born_here ?x .\n}\n",
        "PotentialTopicEntityMention": "el salvador",
        "TopicEntityName": "El Salvador",
        "TopicEntityMid": "m.02k8k",
        "InferentialChain": [
          "location.location.people_born_here"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.11b8058v7j",
            "EntityName": ""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010h0d8y",
            "EntityName": "William Armando"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011k0bpp",
            "EntityName": "Victor Lopez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011k0bx8",
            "EntityName": "Johnny Lopez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011v5_6y",
            "EntityName": "Francisco Funes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012_0d7s",
            "EntityName": "Damaris Qu\u00e9les"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012_0fc_",
            "EntityName": "Francisca Gonz\u00e1lez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012z_6bb",
            "EntityName": "Ricardo L\u00f3pez Tenorio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01311sns",
            "EntityName": "Xenia Estrada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0131y42k",
            "EntityName": "Mauricio Alvarenga"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.013b7xby",
            "EntityName": "Milton Palacios"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026xmgs",
            "EntityName": "Alexander Campos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02phhjj",
            "EntityName": "Jose Orlando Martinez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pyjqw",
            "EntityName": "Mauricio Alonso Rodr\u00edguez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qgkkg",
            "EntityName": "Miguel Ca\u00f1izalez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qsc86",
            "EntityName": "Francisco Gavidia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qscbm",
            "EntityName": "Pedro Geoffroy Rivas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qsclj",
            "EntityName": "Camilo Minero"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02v_3hr",
            "EntityName": "Ana Sol Gutierrez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vmtpg",
            "EntityName": "Joel Aguilar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x5pqn",
            "EntityName": "Wilfredo Iraheta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c250_",
            "EntityName": "Mauricio Alfaro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c5z5s",
            "EntityName": "Jos\u00e9 Luis Rugamas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c9124",
            "EntityName": "Eduardo Hern\u00e1ndez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cblzx",
            "EntityName": "Roberto Carlos Martinez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cfwyh",
            "EntityName": "Jos\u00e9 Manfredi Portillo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03chqtt",
            "EntityName": "Melvin Barrera"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03chr1c",
            "EntityName": "Pedro Chavarria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ck2fb",
            "EntityName": "Jos\u00e9 Mar\u00eda Ca\u00f1as"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ctvv4",
            "EntityName": "Ruben Cedillos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03f4fxd",
            "EntityName": "Keoki"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03hzxty",
            "EntityName": "DJ Quest"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m4f_f",
            "EntityName": "Prudencia Ayala"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03nxgl4",
            "EntityName": "Andr\u00e9s Eduardo Men\u00e9ndez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03nxqf0",
            "EntityName": "William Renderos Iraheta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04_076h",
            "EntityName": "Laura Molina"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.043ks6h",
            "EntityName": "F\u00e9lix Pineda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04cykvj",
            "EntityName": "Jos\u00e9 Castellanos Contreras"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04dyyg2",
            "EntityName": "Jose Solis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f4spb",
            "EntityName": "Edwin Ramos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f69lb",
            "EntityName": "Roberto Rivas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lhqln",
            "EntityName": "Alfredo Ruano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04n3xqn",
            "EntityName": "Rafael Menj\u00edvar Ochoa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04q8w4h",
            "EntityName": "Papa A.P."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04y963w",
            "EntityName": "Elmer Acevedo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yfkr7",
            "EntityName": "Armando Chac\u00f3n"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b_737",
            "EntityName": "Saturnino Osorio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05c2y_f",
            "EntityName": "Ernesto Aparicio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05m3gg",
            "EntityName": "Arturo Armando Molina"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05yr4wm",
            "EntityName": "Diego Vel\u00e1zquez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zkrkw",
            "EntityName": "Miguel Cruz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zv1fd",
            "EntityName": "Juan Rafael Bustillo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065thkd",
            "EntityName": "Sarah Ramos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.066127x",
            "EntityName": "Juan Ram\u00f3n S\u00e1nchez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06w9_j6",
            "EntityName": "Jorge B\u00facaro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y1sn",
            "EntityName": "Tom\u00e1s Medina"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y1tb",
            "EntityName": "Doroteo Vasconcelos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y1yh",
            "EntityName": "Rafael Campo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y1yv",
            "EntityName": "Francisco Due\u00f1as"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y25k",
            "EntityName": "Gerardo Barrios"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y27b",
            "EntityName": "Francisco Men\u00e9ndez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y2bv",
            "EntityName": "Pedro Jos\u00e9 Escal\u00f3n"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y2cw",
            "EntityName": "Manuel Enrique Araujo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y2kd",
            "EntityName": "Jorge Mel\u00e9ndez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y2mv",
            "EntityName": "Salvador Castaneda Castro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y2q9",
            "EntityName": "Julio Adalberto Rivera Carballo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07bk65",
            "EntityName": "Consuelo de Saint Exup\u00e9ry"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07p8ps",
            "EntityName": "Rub\u00e9n Zamora"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07swd6",
            "EntityName": "Rutilio Grande"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.080bz0l",
            "EntityName": "V\u00edctor Ram\u00edrez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08vz5d",
            "EntityName": "Nicolas F. Shi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09ggck_",
            "EntityName": "Eva Dimas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09v1mhy",
            "EntityName": "Fausto Omar V\u00e1squez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b__gm3",
            "EntityName": "Steve Montenegro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b_qjns",
            "EntityName": "Carlos Linares"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bm9y7c",
            "EntityName": "Miguel Angel Deras"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cc70k9",
            "EntityName": "Gualberto Fern\u00e1ndez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cc8gnq",
            "EntityName": "Paula Heredia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cny39v",
            "EntityName": "Jorge Rivera"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dbk9r",
            "EntityName": "Erwin McManus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dd34w",
            "EntityName": "Claudia Lars"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dlnrmt",
            "EntityName": "Victor Manuel Ochoa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0drw_42",
            "EntityName": "Ra\u00fal Cicero"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ds0ght",
            "EntityName": "Carlos Barrios"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fbs00",
            "EntityName": "Jos\u00e9 Inocencio Alas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gck6d6",
            "EntityName": "Elena Diaz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0glt20_",
            "EntityName": "Patricia Chica"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gx_9sj",
            "EntityName": "Bernard Lewinsky"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gyr_2r",
            "EntityName": "Jaime Portillo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gysvkq",
            "EntityName": "Genaro Serme\u00f1o"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h1bw_6",
            "EntityName": "Ana Maria de Martinez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h1gfdk",
            "EntityName": "Eduardo \\\"Volkswagen\\\" Hern\u00e1ndez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h2lqh",
            "EntityName": "Arturo Rivera y Damas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h3cwk",
            "EntityName": "Enrique \u00c1lvarez C\u00f3rdova"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h3vkz2",
            "EntityName": "Mario Montoya"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h5595b",
            "EntityName": "Jos\u00e9 Francisco Valiente"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h7mwf5",
            "EntityName": "Norman Quijano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h8k38b",
            "EntityName": "Rene Moran"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hr5tm9",
            "EntityName": "Jose B. Gonzalez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hrgx45",
            "EntityName": "Richard Oriani"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3y75j",
            "EntityName": "Alexander M\u00e9ndoza"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j442fb",
            "EntityName": "\u00c1ngel Orellana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j9k7c7",
            "EntityName": "Emilio Guardado"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j9nts6",
            "EntityName": "Am\u00e9rico Gonz\u00e1lez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k_fvt",
            "EntityName": "Bobby Rivas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kg2yh2",
            "EntityName": "\u00d3scar Antonio Ulloa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kmy4yx",
            "EntityName": "Guillermo Garc\u00eda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0knmfg3",
            "EntityName": "Selvin Gonz\u00e1lez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0knxpym",
            "EntityName": "William L\u00f3pez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ktzqtz",
            "EntityName": "Marlon Menj\u00edvar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n484vf",
            "EntityName": "Isa\u00edas Choto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ndx3dp",
            "EntityName": "Takeshi Fujiwara"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pmg_63",
            "EntityName": "Mario Wilfredo Contreras"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0q200b9",
            "EntityName": "Malin Arvidsson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0v_3g3z",
            "EntityName": "Robert Renderos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yzmtry",
            "EntityName": "Santiago \\\"Jimmy\\\" Mellado"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02k8k": "El Salvador"
    },
    "qid_topic_entity": {
      "Q792": "El Salvador"
    },
    "index": 219
  },
  {
    "QuestionId": "WebQTest-327",
    "RawQuestion": "what two continents is turkey on?",
    "ProcessedQuestion": "what two continents is turkey on",
    "Parses": [
      {
        "ParseId": "WebQTest-327.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01znc_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01znc_ ns:base.locations.countries.continent ?x .\n}\n",
        "PotentialTopicEntityMention": "turkey",
        "TopicEntityName": "Turkey",
        "TopicEntityMid": "m.01znc_",
        "InferentialChain": [
          "base.locations.countries.continent"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qkt",
            "EntityName": "Eurasia"
          }
        ]
      },
      {
        "ParseId": "WebQTest-327.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01znc_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01znc_ ns:location.location.partially_containedby ?x .\n?x ns:common.topic.notable_types ns:m.01mh .\n}\n",
        "PotentialTopicEntityMention": "turkey",
        "TopicEntityName": "Turkey",
        "TopicEntityMid": "m.01znc_",
        "InferentialChain": [
          "location.location.partially_containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01mh",
            "EntityName": "Continent",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02j9z",
            "EntityName": "Europe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j0k",
            "EntityName": "Asia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01znc_": "Turkey"
    },
    "qid_topic_entity": {
      "Q43": "Turkey"
    },
    "index": 220
  },
  {
    "QuestionId": "WebQTest-73",
    "RawQuestion": "what language do the maasai tribe speak?",
    "ProcessedQuestion": "what language do the maasai tribe speak",
    "Parses": [
      {
        "ParseId": "WebQTest-73.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.054vv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.054vv ns:people.ethnicity.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "maasai",
        "TopicEntityName": "Maasai people",
        "TopicEntityMid": "m.054vv",
        "InferentialChain": [
          "people.ethnicity.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064kl7",
            "EntityName": "Maasai Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.054vv": "Maasai people"
    },
    "qid_topic_entity": {
      "Q163022": "Maasai people"
    },
    "index": 221
  },
  {
    "QuestionId": "WebQTest-618",
    "RawQuestion": "where is chesapeake bay bridge?",
    "ProcessedQuestion": "where is chesapeake bay bridge",
    "Parses": [
      {
        "ParseId": "WebQTest-618.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03xksb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03xksb ns:transportation.bridge.locale ?x .\n}\n",
        "PotentialTopicEntityMention": "chesapeake bay bridge",
        "TopicEntityName": "Chesapeake Bay Bridge",
        "TopicEntityMid": "m.03xksb",
        "InferentialChain": [
          "transportation.bridge.locale"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dn8b",
            "EntityName": "Anne Arundel County"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g834",
            "EntityName": "Queen Anne's County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03xksb": "Chesapeake Bay Bridge"
    },
    "qid_topic_entity": {
      "Q1319988": "Chesapeake Bay Bridge"
    },
    "index": 222
  },
  {
    "QuestionId": "WebQTest-1340",
    "RawQuestion": "what is steve nash nationality?",
    "ProcessedQuestion": "what is steve nash nationality",
    "Parses": [
      {
        "ParseId": "WebQTest-1340.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01yqrk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01yqrk ns:people.person.nationality ?x .\n}\n",
        "PotentialTopicEntityMention": "steve nash",
        "TopicEntityName": "Steve Nash",
        "TopicEntityMid": "m.01yqrk",
        "InferentialChain": [
          "people.person.nationality"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ssc",
            "EntityName": "United Kingdom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01yqrk": "Steve Nash"
    },
    "qid_topic_entity": {
      "Q192955": "Steve Nash"
    },
    "index": 223
  },
  {
    "QuestionId": "WebQTest-1342",
    "RawQuestion": "what kind of language does france speak?",
    "ProcessedQuestion": "what kind of language does france speak",
    "Parses": [
      {
        "ParseId": "WebQTest-1342.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f8l9c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f8l9c ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "france",
        "TopicEntityName": "France",
        "TopicEntityMid": "m.0f8l9c",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064_8sq",
            "EntityName": "French"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f8l9c": "France"
    },
    "qid_topic_entity": {
      "Q142": "France"
    },
    "index": 224
  },
  {
    "QuestionId": "WebQTest-903",
    "RawQuestion": "where turkish people originate?",
    "ProcessedQuestion": "where turkish people originate",
    "Parses": [
      {
        "ParseId": "WebQTest-903.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hb7h_z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hb7h_z ns:people.ethnicity.geographic_distribution ?x .\n}\n",
        "PotentialTopicEntityMention": "turkish people",
        "TopicEntityName": "Turkish people",
        "TopicEntityMid": "m.0hb7h_z",
        "InferentialChain": [
          "people.ethnicity.geographic_distribution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0154j",
            "EntityName": "Belgium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015qh",
            "EntityName": "Bulgaria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0166b",
            "EntityName": "Bosnia and Herzegovina"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nx28",
            "EntityName": "Northern Cyprus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01znc_",
            "EntityName": "Turkey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0345h",
            "EntityName": "Germany"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047lj",
            "EntityName": "Kazakhstan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04fh3",
            "EntityName": "Republic of Kosovo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059j2",
            "EntityName": "Netherlands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b4w",
            "EntityName": "Norway"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06vbd",
            "EntityName": "Syria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ssc",
            "EntityName": "United Kingdom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d05q4",
            "EntityName": "Iraq"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d0vqn",
            "EntityName": "Sweden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f8l9c",
            "EntityName": "France"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h3y",
            "EntityName": "Algeria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h7x",
            "EntityName": "Austria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jhd",
            "EntityName": "Azerbaijan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jt3tjf",
            "EntityName": "Kyrgyzstan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k6nt",
            "EntityName": "Denmark"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0hb7h_z": "Turkish people"
    },
    "qid_topic_entity": {
      "UnknownQID": "Turkish people"
    },
    "index": 225
  },
  {
    "QuestionId": "WebQTest-1625",
    "RawQuestion": "what are some inventions that leonardo da vinci invented?",
    "ProcessedQuestion": "what are some inventions that leonardo da vinci invented",
    "Parses": [
      {
        "ParseId": "WebQTest-1625.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04lg6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04lg6 ns:law.inventor.inventions ?x .\n}\n",
        "PotentialTopicEntityMention": "leonardo da vinci",
        "TopicEntityName": "Leonardo da Vinci",
        "TopicEntityMid": "m.04lg6",
        "InferentialChain": [
          "law.inventor.inventions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012rm",
            "EntityName": "Anemometer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01w6mc",
            "EntityName": "Diving suit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01x3y7",
            "EntityName": "Ornithopter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05my_3",
            "EntityName": "Viola organista"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0796wt",
            "EntityName": "Double hull"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cyfs",
            "EntityName": "Parachute"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w11gwh",
            "EntityName": "Triple Barrel Canon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w11h15",
            "EntityName": "33-Barreled Organ"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w11hbh",
            "EntityName": "Aerial Screw"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y8r",
            "EntityName": "Armored car"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04lg6": "Leonardo da Vinci"
    },
    "qid_topic_entity": {
      "Q762": "Leonardo da Vinci"
    },
    "index": 226
  },
  {
    "QuestionId": "WebQTest-1854",
    "RawQuestion": "who originally voiced lois griffin?",
    "ProcessedQuestion": "who originally voiced lois griffin",
    "Parses": [
      {
        "ParseId": "WebQTest-1854.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03pcqz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03pcqz ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.special_performance_type ns:m.02nsjvf .\n}\n",
        "PotentialTopicEntityMention": "lois griffin",
        "TopicEntityName": "Lois Griffin",
        "TopicEntityMid": "m.03pcqz",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02nsjvf",
            "EntityName": "Voice",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.special_performance_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03jldb",
            "EntityName": "Alex Borstein"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03pcqz": "Lois Griffin"
    },
    "qid_topic_entity": {
      "Q853073": "Lois Griffin"
    },
    "index": 227
  },
  {
    "QuestionId": "WebQTest-1050",
    "RawQuestion": "who does mila kunis play on family guy?",
    "ProcessedQuestion": "who does mila kunis play on family guy",
    "Parses": [
      {
        "ParseId": "WebQTest-1050.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019nnl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019nnl ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.character ?x .\n?y ns:tv.regular_tv_appearance.actor ns:m.023v4_ .\n}\n",
        "PotentialTopicEntityMention": "family guy",
        "TopicEntityName": "Family Guy",
        "TopicEntityMid": "m.019nnl",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.023v4_",
            "EntityName": "Mila Kunis",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.actor",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035szd",
            "EntityName": "Meg Griffin"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.019nnl": "Family Guy"
    },
    "qid_topic_entity": {
      "Q5930": "Family Guy"
    },
    "index": 228
  },
  {
    "QuestionId": "WebQTest-1479",
    "RawQuestion": "who is dustin johnson the golfer?",
    "ProcessedQuestion": "who is dustin johnson the golfer",
    "Parses": [
      {
        "ParseId": "WebQTest-1479.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04n4sw4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04n4sw4 ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "dustin johnson",
        "TopicEntityName": "Dustin Johnson",
        "TopicEntityMid": "m.04n4sw4",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025smyp",
            "EntityName": "Golfer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04n4sw4": "Dustin Johnson"
    },
    "qid_topic_entity": {
      "Q1002293": "Dustin Johnson"
    },
    "index": 229
  },
  {
    "QuestionId": "WebQTest-965",
    "RawQuestion": "where did anne frank go to school?",
    "ProcessedQuestion": "where did anne frank go to school",
    "Parses": [
      {
        "ParseId": "WebQTest-965.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03d9rk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03d9rk ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "anne frank",
        "TopicEntityName": "Anne Frank",
        "TopicEntityMid": "m.03d9rk",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wf8d8",
            "EntityName": "Montessori Lyceum Amsterdam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.074600n",
            "EntityName": "Jewish Lyceum"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03d9rk": "Anne Frank"
    },
    "qid_topic_entity": {
      "Q4583": "Anne Frank"
    },
    "index": 230
  },
  {
    "QuestionId": "WebQTest-508",
    "RawQuestion": "what is the best currency to take to turkey?",
    "ProcessedQuestion": "what is the best currency to take to turkey",
    "Parses": [
      {
        "ParseId": "WebQTest-508.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01znc_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01znc_ ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "turkey",
        "TopicEntityName": "Turkey",
        "TopicEntityMid": "m.01znc_",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04dq0w",
            "EntityName": "Turkish lira"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01znc_": "Turkey"
    },
    "qid_topic_entity": {
      "Q43": "Turkey"
    },
    "index": 231
  },
  {
    "QuestionId": "WebQTest-418",
    "RawQuestion": "what league are the indianapolis colts in?",
    "ProcessedQuestion": "what league are the indianapolis colts in",
    "Parses": [
      {
        "ParseId": "WebQTest-418.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03wnh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03wnh ns:sports.sports_team.league ?y .\n?y ns:sports.sports_league_participation.league ?x .\n}\n",
        "PotentialTopicEntityMention": "indianapolis colts",
        "TopicEntityName": "Indianapolis Colts",
        "TopicEntityMid": "m.03wnh",
        "InferentialChain": [
          "sports.sports_team.league",
          "sports.sports_league_participation.league"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059yj",
            "EntityName": "National Football League"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.068g_2",
            "EntityName": "AFC South"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hh4",
            "EntityName": "American Football Conference"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03wnh": "Indianapolis Colts"
    },
    "qid_topic_entity": {
      "Q193753": "Indianapolis Colts"
    },
    "index": 232
  },
  {
    "QuestionId": "WebQTest-1534",
    "RawQuestion": "who are the coaches for the oakland raiders?",
    "ProcessedQuestion": "who are the coaches for the oakland raiders",
    "Parses": [
      {
        "ParseId": "WebQTest-1534.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05l71)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05l71 ns:american_football.football_team.current_head_coach ?x .\n}\n",
        "PotentialTopicEntityMention": "oakland raiders",
        "TopicEntityName": "Oakland Raiders",
        "TopicEntityMid": "m.05l71",
        "InferentialChain": [
          "american_football.football_team.current_head_coach"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03h4k5d",
            "EntityName": "Tony Sparano"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05l71": "Oakland Raiders"
    },
    "qid_topic_entity": {
      "Q324523": "Oakland Raiders"
    },
    "index": 233
  },
  {
    "QuestionId": "WebQTest-1813",
    "RawQuestion": "what team does messi play for 2011?",
    "ProcessedQuestion": "what team does messi play for 2011",
    "Parses": [
      {
        "ParseId": "WebQTest-1813.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06qjgc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06qjgc ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "messi",
        "TopicEntityName": "Lionel Messi",
        "TopicEntityMid": "m.06qjgc",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2011-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2011-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2011-01-01",
          "End": "2011-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "2011"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bh_v",
            "EntityName": "Argentina national football team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hvgt",
            "EntityName": "FC Barcelona"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06qjgc": "Lionel Messi"
    },
    "qid_topic_entity": {
      "Q615": "Lionel Messi"
    },
    "index": 234
  },
  {
    "QuestionId": "WebQTest-944",
    "RawQuestion": "what was van halen first album?",
    "ProcessedQuestion": "what was van halen first album",
    "Parses": [
      {
        "ParseId": "WebQTest-944.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ycfj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ycfj ns:music.artist.album ?x .\n?x ns:music.album.release_date ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "PotentialTopicEntityMention": "van halen",
        "TopicEntityName": "Van Halen",
        "TopicEntityMid": "m.0ycfj",
        "InferentialChain": [
          "music.artist.album"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Ascending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "music.album.release_date",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0vs85p3",
            "EntityName": "Ain't Talkin' 'Bout Love"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ycfj": "Van Halen"
    },
    "qid_topic_entity": {
      "Q190155": "Van Halen"
    },
    "index": 235
  },
  {
    "QuestionId": "WebQTest-1477",
    "RawQuestion": "what episode of how i met your mother is carrie underwood on?",
    "ProcessedQuestion": "what episode of how i met your mother is carrie underwood on",
    "Parses": [
      {
        "ParseId": "WebQTest-1477.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.058s57)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.058s57 ns:tv.tv_actor.guest_roles ?y .\n?y ns:tv.tv_guest_role.episodes_appeared_in ?x .\n?x ns:tv.tv_series_episode.series ns:m.07zhjj .\n}\n",
        "PotentialTopicEntityMention": "carrie underwood",
        "TopicEntityName": "Carrie Underwood",
        "TopicEntityMid": "m.058s57",
        "InferentialChain": [
          "tv.tv_actor.guest_roles",
          "tv.tv_guest_role.episodes_appeared_in"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.07zhjj",
            "EntityName": "How I Met Your Mother",
            "SourceNodeIndex": 1,
            "NodePredicate": "tv.tv_series_episode.series",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bbt_3x",
            "EntityName": "Hooked"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.058s57": "Carrie Underwood"
    },
    "qid_topic_entity": {
      "Q215546": "Carrie Underwood"
    },
    "index": 236
  },
  {
    "QuestionId": "WebQTest-1052",
    "RawQuestion": "who played damien in the omen 2006?",
    "ProcessedQuestion": "who played damien in the omen 2006",
    "Parses": [
      {
        "ParseId": "WebQTest-1052.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07c5kt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07c5kt ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.09s4pt .\n}\n",
        "PotentialTopicEntityMention": "the omen 2006",
        "TopicEntityName": "The Omen",
        "TopicEntityMid": "m.07c5kt",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.09s4pt",
            "EntityName": "Damien Thorn",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05h9v7d",
            "EntityName": "Tomas Wooler"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dcshy",
            "EntityName": "Seamus Davey-Fitzpatrick"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07c5kt": "The Omen"
    },
    "qid_topic_entity": {
      "Q518863": "The Omen"
    },
    "index": 237
  },
  {
    "QuestionId": "WebQTest-16",
    "RawQuestion": "what countries are part of the uk?",
    "ProcessedQuestion": "what countries are part of the uk",
    "Parses": [
      {
        "ParseId": "WebQTest-16.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ssc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ssc ns:base.aareas.schema.administrative_area.administrative_children ?x .\n?x ns:base.aareas.schema.administrative_area.administrative_area_type ns:m.0hzjlmp .\n}\n",
        "PotentialTopicEntityMention": "uk",
        "TopicEntityName": "United Kingdom",
        "TopicEntityMid": "m.07ssc",
        "InferentialChain": [
          "base.aareas.schema.administrative_area.administrative_children"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0hzjlmp",
            "EntityName": "UK constituent country",
            "SourceNodeIndex": 0,
            "NodePredicate": "base.aareas.schema.administrative_area.administrative_area_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jx1",
            "EntityName": "England"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bcl",
            "EntityName": "Northern Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q1r",
            "EntityName": "Scotland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5g9",
            "EntityName": "Wales"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07ssc": "United Kingdom"
    },
    "qid_topic_entity": {
      "Q145": "United Kingdom"
    },
    "index": 238
  },
  {
    "QuestionId": "WebQTest-484",
    "RawQuestion": "what language does australia use?",
    "ProcessedQuestion": "what language does australia use",
    "Parses": [
      {
        "ParseId": "WebQTest-484.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0chghy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0chghy ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "australia",
        "TopicEntityName": "Australia",
        "TopicEntityMid": "m.0chghy",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jcw",
            "EntityName": "Esperanto Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gd7",
            "EntityName": "Lojban"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0chghy": "Australia"
    },
    "qid_topic_entity": {
      "Q408": "Australia"
    },
    "index": 239
  },
  {
    "QuestionId": "WebQTest-1356",
    "RawQuestion": "what drug killed marilyn monroe?",
    "ProcessedQuestion": "what drug killed marilyn monroe",
    "Parses": [
      {
        "ParseId": "WebQTest-1356.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04wqr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04wqr ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "marilyn monroe",
        "TopicEntityName": "Marilyn Monroe",
        "TopicEntityMid": "m.04wqr",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bwj2gf",
            "EntityName": "Barbiturate overdose"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04wqr": "Marilyn Monroe"
    },
    "qid_topic_entity": {
      "Q4616": "Marilyn Monroe"
    },
    "index": 240
  },
  {
    "QuestionId": "WebQTest-1520",
    "RawQuestion": "what language speak in brazil?",
    "ProcessedQuestion": "what language speak in brazil",
    "Parses": [
      {
        "ParseId": "WebQTest-1520.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015fr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015fr ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "brazil",
        "TopicEntityName": "Brazil",
        "TopicEntityMid": "m.015fr",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bjrlw",
            "EntityName": "Italian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02zj58",
            "EntityName": "Brazilian Portuguese"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zjd",
            "EntityName": "Portuguese Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1520.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015fr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015fr ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "brazil",
        "TopicEntityName": "Brazil",
        "TopicEntityMid": "m.015fr",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zjd",
            "EntityName": "Portuguese Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.015fr": "Brazil"
    },
    "qid_topic_entity": {
      "Q155": "Brazil"
    },
    "index": 241
  },
  {
    "QuestionId": "WebQTest-1177",
    "RawQuestion": "where did mario lopez go to school?",
    "ProcessedQuestion": "where did mario lopez go to school",
    "Parses": [
      {
        "ParseId": "WebQTest-1177.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02w5q6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02w5q6 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "mario lopez",
        "TopicEntityName": "Mario Lopez",
        "TopicEntityMid": "m.02w5q6",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h0sx6",
            "EntityName": "Chula Vista High School"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02w5q6": "Mario Lopez"
    },
    "qid_topic_entity": {
      "Q372559": "Mario Lopez"
    },
    "index": 242
  },
  {
    "QuestionId": "WebQTest-294",
    "RawQuestion": "who was carolus linnaeus?",
    "ProcessedQuestion": "who was carolus linnaeus",
    "Parses": [
      {
        "ParseId": "WebQTest-294.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01lwd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01lwd ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "carolus linnaeus",
        "TopicEntityName": "Carl Linnaeus",
        "TopicEntityMid": "m.01lwd",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h6p1f",
            "EntityName": "Botanist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05t4q",
            "EntityName": "Physician"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q2q",
            "EntityName": "Scientist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07lqg0",
            "EntityName": "Biologist"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01lwd": "Carl Linnaeus"
    },
    "qid_topic_entity": {
      "Q1043": "Carl Linnaeus"
    },
    "index": 243
  },
  {
    "QuestionId": "WebQTest-1609",
    "RawQuestion": "who played alf on tv show?",
    "ProcessedQuestion": "who played alf on tv show",
    "Parses": [
      {
        "ParseId": "WebQTest-1609.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01klc1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01klc1 ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.0sgqfm0 .\n}\n",
        "PotentialTopicEntityMention": "alf",
        "TopicEntityName": "ALF",
        "TopicEntityMid": "m.01klc1",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0sgqfm0",
            "EntityName": "ALF",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.082765",
            "EntityName": "Paul Fusco"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01klc1": "ALF"
    },
    "qid_topic_entity": {
      "Q264221": "ALF"
    },
    "index": 244
  },
  {
    "QuestionId": "WebQTest-447",
    "RawQuestion": "what did laura ingalls wilder wrote?",
    "ProcessedQuestion": "what did laura ingalls wilder wrote",
    "Parses": [
      {
        "ParseId": "WebQTest-447.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bt87)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bt87 ns:book.author.book_editions_published ?x .\n}\n",
        "PotentialTopicEntityMention": "laura ingalls wilder",
        "TopicEntityName": "Laura Ingalls Wilder",
        "TopicEntityMid": "m.01bt87",
        "InferentialChain": [
          "book.author.book_editions_published"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028xv15",
            "EntityName": "Little House on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3_d",
            "EntityName": "On the banks of Plum Creek"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3_v",
            "EntityName": "Dance at Grandpa's (My First Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3sz",
            "EntityName": "A Little house reader"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3td",
            "EntityName": "A little house sampler"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3v8",
            "EntityName": "A little house treasury"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3vt",
            "EntityName": "Winter on the Farm (My First Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3w0",
            "EntityName": "Little House Farm Days"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3w7",
            "EntityName": "My Little House Chapter Book Collection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3wg",
            "EntityName": "By the shores of Silver Lake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3wx",
            "EntityName": "Little town on the prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3x_",
            "EntityName": "Laura & Mr. Edwards (Little House Chapter Book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3xb",
            "EntityName": "Little House the Laura Years Boxed Set"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3xk",
            "EntityName": "Prairie Day (My First Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3xs",
            "EntityName": "The Little House Collection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3y6",
            "EntityName": "West from home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3ym",
            "EntityName": "Laura's Christmas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3yw",
            "EntityName": "A Little Prairie House (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3z2",
            "EntityName": "These happy golden years"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3zj",
            "EntityName": "Going to Town (My First Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3zr",
            "EntityName": "Dear Laura"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3zz",
            "EntityName": "On the way home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv401",
            "EntityName": "The adventures of Laura and Jack"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv40h",
            "EntityName": "My Book of Little House Paper Dolls"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv40r",
            "EntityName": "Laura & Nellie (Little House Chapter Book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv40z",
            "EntityName": "Christmas Stories (Little House Chapter Book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv415",
            "EntityName": "Pioneer Sisters (Little House Chapter Book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv41d",
            "EntityName": "The long winter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv41v",
            "EntityName": "Little House (9 Books, Boxed Set)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv421",
            "EntityName": "Hard Times on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv428",
            "EntityName": "Going West (My First Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv42h",
            "EntityName": "Little House Friends (Little House Chapter Book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv42q",
            "EntityName": "School Days (Little House Chapter Book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv42y",
            "EntityName": "Christmas in the Big Woods (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv434",
            "EntityName": "The First Four Years CD (Little House the Laura Years)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv43c",
            "EntityName": "A Little house traveler"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv43n",
            "EntityName": "Sugar Snow (My First Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv43w",
            "EntityName": "Saving graces"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv449",
            "EntityName": "Animal Adventures (Little House Chapter Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv44j",
            "EntityName": "The Deer in the Wood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv44r",
            "EntityName": "Santa comes to little house"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv455",
            "EntityName": "County Fair (My First Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv45d",
            "EntityName": "Little house on the prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv45v",
            "EntityName": "Words from a fearless heart"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv468",
            "EntityName": "A Farmer Boy Birthday (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv46h",
            "EntityName": "Little House Parties (Little House Chapter Book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv46q",
            "EntityName": "Laura's Early Years Collection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv46y",
            "EntityName": "Farmer Boy Days (Little House Chapter Book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv474",
            "EntityName": "My Little House Songbook (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v60_0",
            "EntityName": "Little house in the big woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v60_g",
            "EntityName": "Little House in the Big Woods."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v60_q",
            "EntityName": "Little house in the big woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v60xs",
            "EntityName": "Little house in the big woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v60yj",
            "EntityName": "Little House in the Big Woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v60yt",
            "EntityName": "Little House in the Big Woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v60z2",
            "EntityName": "Little House in the Big Woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v60zb",
            "EntityName": "Little house in the big woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v60zr",
            "EntityName": "Little House in the Big Woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v6103",
            "EntityName": "Little house in the big woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v610t",
            "EntityName": "Little house in the big woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v6136",
            "EntityName": "Little house in the big woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v619n",
            "EntityName": "Farmer Boy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v619x",
            "EntityName": "Farmer boy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v61bb",
            "EntityName": "Farmer boy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v61bt",
            "EntityName": "Farmer Boy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v61c1",
            "EntityName": "Farmer Boy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v61c9",
            "EntityName": "Farmer Boy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v61cl",
            "EntityName": "Farmer Boy (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v61cv",
            "EntityName": "Farmer Boy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v61d2",
            "EntityName": "Farmer Boy (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v61db",
            "EntityName": "Farmer boy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v61dt",
            "EntityName": "Farmer Boy (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v61fj",
            "EntityName": "Farmer Boy (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v61g0",
            "EntityName": "Farmer Boy (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v61gk",
            "EntityName": "Farmer Boy (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62r4",
            "EntityName": "Little House in the Big Woods (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62rn",
            "EntityName": "Little House in the Big Woods (Classic Mammoth)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62ry",
            "EntityName": "Little House in the Big Woods (Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62sf",
            "EntityName": "Little House in the Big Woods 75th Anniversary Edition (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62sp",
            "EntityName": "Little House in the Big Woods (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62sy",
            "EntityName": "Little House In The Big Woods CD (Little House the Laura Years)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62t5",
            "EntityName": "Little House in the Big Woods (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62tf",
            "EntityName": "Little House in the Big Woods (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62tp",
            "EntityName": "Little House in the Big Woods Book and Charm (Charming Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62ty",
            "EntityName": "A Farmer Boy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62vf",
            "EntityName": "Farmer Boy (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62w4",
            "EntityName": "Farmer Boy (Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62wz",
            "EntityName": "Farmer Boy (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v63s9",
            "EntityName": "Little House in the Big Woods (Isis Large Print for Children Windrush)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v63sl",
            "EntityName": "Little House In The Big Woods Unabr CD Low Price (Little House the Laura Years)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfk6g",
            "EntityName": "The first four years"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfk6x",
            "EntityName": "The First Four Years (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfk74",
            "EntityName": "The First Four Years (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfk7d",
            "EntityName": "The first four years."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfk7w",
            "EntityName": "The first four years"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfk8b",
            "EntityName": "The First Four Years (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfk8l",
            "EntityName": "The First Four Years (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfk8v",
            "EntityName": "The First Four Years (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfk92",
            "EntityName": "The First Four Years (Little House the Laura Years)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfk9n",
            "EntityName": "First Four Years (Little House (HarperTrophy))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfk9x",
            "EntityName": "The First Four Years (Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfkbm",
            "EntityName": "The First Four Years (Little House (Original Series Library))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfkbw",
            "EntityName": "First Four Years (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhcqn",
            "EntityName": "The Long Winter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhcr5",
            "EntityName": "Long Winter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhcrf",
            "EntityName": "The Long Winter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhcrq",
            "EntityName": "The Long Winter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhcs_",
            "EntityName": "The Long Winter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhcs7",
            "EntityName": "Long Winter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhcsh",
            "EntityName": "The Long Winter (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhcsr",
            "EntityName": "The Long Winter (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhct7",
            "EntityName": "The Long Winter (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhcth",
            "EntityName": "The Long Winter (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhf3b",
            "EntityName": "Long Winter (Little House (HarperTrophy))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhf3w",
            "EntityName": "The Long Winter (Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhf43",
            "EntityName": "Long Winter (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhf4w",
            "EntityName": "The Long Winter (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj_94",
            "EntityName": "By the Shores of Silver Lake (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj_bg",
            "EntityName": "By the Shores of Silver Lake (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj2kx",
            "EntityName": "Little Town on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj2mg",
            "EntityName": "Little Town on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj2mq",
            "EntityName": "Little Town on the Prairie CD"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj2mz",
            "EntityName": "Little Town on the Prairie (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj2n_",
            "EntityName": "Little Town on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj2n6",
            "EntityName": "Little Town on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj2nh",
            "EntityName": "Little Town on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj2nr",
            "EntityName": "Little Town on the Prairie (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj2pr",
            "EntityName": "Little Town on the Prairie (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj2q0",
            "EntityName": "Little Town on the Prairie (Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj2q8",
            "EntityName": "Little Town on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj347",
            "EntityName": "Little Town On The Prairie (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj5v9",
            "EntityName": "These Happy Golden Years"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj5x3",
            "EntityName": "These Happy Golden Years CD"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj5xc",
            "EntityName": "These happy golden years"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj5xt",
            "EntityName": "These Happy Golden Years (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj5y1",
            "EntityName": "These Happy Golden Years (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj5y9",
            "EntityName": "These Happy Golden Years (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj5yk",
            "EntityName": "These Happy Golden Years (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj5z2",
            "EntityName": "These Happy Golden Years (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj5zb",
            "EntityName": "These Happy Golden Years"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj5zl",
            "EntityName": "These Happy Golden Years (Laura Years)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj6sy",
            "EntityName": "These Happy Golden Years (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj6ty",
            "EntityName": "These Happy Golden Years (Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj6vq",
            "EntityName": "These Happy Golden Years (Little House on the Prairie)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj6w8",
            "EntityName": "These Happy Golden Years (Little House (HarperTrophy))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjy1q",
            "EntityName": "On the Banks of Plum Creek"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjy1z",
            "EntityName": "On the Banks of Plum Creek"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjy27",
            "EntityName": "On the Banks of Plum Creek"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjy2k",
            "EntityName": "On the Banks of Plum Creek"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjy2w",
            "EntityName": "On the Banks of Plum Creek"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjy3d",
            "EntityName": "On the Banks of Plum Creek (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjy3p",
            "EntityName": "On the Banks of Plum Creek (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjy3z",
            "EntityName": "On the Banks of Plum Creek (One Cassette)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjy46",
            "EntityName": "On the Banks of Plum Creek (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjy4g",
            "EntityName": "On the Banks of Plum Creek (Little House the Laura Years)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjy4q",
            "EntityName": "On the Banks of Plum Creek (Classic Mammoth)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjysz",
            "EntityName": "On the Banks of Plum Creek CD (Little House the Laura Years)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjyt6",
            "EntityName": "On the Banks of Plum Creek"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjytq",
            "EntityName": "On the Banks of Plum Creek (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjyvg",
            "EntityName": "On the Banks of Plum Creek (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjz_f",
            "EntityName": "By the Shores of Silver Lake (Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjzw_",
            "EntityName": "By the Shores of Silver Lake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjzxk",
            "EntityName": "By the shores of Silver Lake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjzy0",
            "EntityName": "By the Shores of Silver Lake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjzy8",
            "EntityName": "By the Shores of Silver Lake (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjzyj",
            "EntityName": "By the shores of Silver Lake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjzyy",
            "EntityName": "By the Shores of Silver Lake CD (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjzz5",
            "EntityName": "By the Shores of Silver Lake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjzzg",
            "EntityName": "By the Shores of Silver Lake (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjzzq",
            "EntityName": "By the Shores of Silver Lake (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk2qs",
            "EntityName": "West from Home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk2rb",
            "EntityName": "West from home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk2rt",
            "EntityName": "West from Home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk30q",
            "EntityName": "On the way home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk34c",
            "EntityName": "On the Way Home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk34p",
            "EntityName": "On the way home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk35b",
            "EntityName": "On the Way Home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk35m",
            "EntityName": "On the Way Home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk35w",
            "EntityName": "On the Way Home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vr9mc",
            "EntityName": "A Little House Reader"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vr9ns",
            "EntityName": "A Little House Sampler"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vr9p3",
            "EntityName": "A Little House Sampler"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vr9qg",
            "EntityName": "A Little Prairie House (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vr9r1",
            "EntityName": "Little House Farm Days (Little House Chapter Books/the Laura Years, 7)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vr9rb",
            "EntityName": "Little House Farm Days (Little House Chapter Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vr9s3",
            "EntityName": "Dear Laura"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vr9vt",
            "EntityName": "Winter on the Farm (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vr9x4",
            "EntityName": "Winter on the Farm (My First Little House Books (Sagebrush))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vr9xg",
            "EntityName": "The Adventures of Laura and Jack (A Little House Chapter Book) (A Little house chapter book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vr9xr",
            "EntityName": "Christmas Stories (Little House Chapter Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vr9yb",
            "EntityName": "Christmas Stories (Little House Chapter Books/the Laura Years, 10)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb04",
            "EntityName": "Going to Town"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb0k",
            "EntityName": "My Book of Little House Paper Dolls"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb0t",
            "EntityName": "Going to Town (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb12",
            "EntityName": "Going to Town (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb1c",
            "EntityName": "Little House Friends (Little House Chapter Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb1n",
            "EntityName": "Going to Town (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb1x",
            "EntityName": "Little House Friends (Little House Chapter Books/the Laura Years, 9)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb24",
            "EntityName": "Hard Times on the Prairie (Little House Chapter Books/the Laura Years, 8)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb2d",
            "EntityName": "Going to town"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb2p",
            "EntityName": "Going West (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb2y",
            "EntityName": "Hard Times on the Prairie (Little House Chapter Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb3_",
            "EntityName": "Pioneer Sisters (Laura (Econo-Clad))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb36",
            "EntityName": "Pioneer Sisters (Little House Chapter Books/the Laura Years, 2)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb49",
            "EntityName": "Going West (My First Little Houe Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb4l",
            "EntityName": "Christmas in the Big Woods (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb4x",
            "EntityName": "Going West (My First Little House Books (Sagebrush))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb55",
            "EntityName": "Christmas in the Big Woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb5f",
            "EntityName": "Christmas in the Big Woods (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb5q",
            "EntityName": "Sugar Snow (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb5z",
            "EntityName": "Sugar Snow (My First Little House Books (Sagebrush))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb6d",
            "EntityName": "A Little House Collection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb6n",
            "EntityName": "Animal Adventures (Little House Chapter Books/the Laura Years, 3)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb6x",
            "EntityName": "The Little House Collection Box Set (Full Color) (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb75",
            "EntityName": "Animal Adventures (Little House Chapter Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb7f",
            "EntityName": "School Days (Little House Chapter Books/the Laura Years, 4)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb7q",
            "EntityName": "School Days (Laura (Econo-Clad))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb80",
            "EntityName": "School days (Little house chapter book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb88",
            "EntityName": "County Fair (My First Little House Books (Sagebrush))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb8l",
            "EntityName": "Little House Parties (Little House Chapter Books/the Laura Years, 14)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb8y",
            "EntityName": "Little House Parties (Little House Chapter Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb96",
            "EntityName": "Farmer Boy Days (Little House Chapter Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb9h",
            "EntityName": "Farmer Boy Days (Little House Chapter Books/the Laura Years, 6)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb9r",
            "EntityName": "Santa Comes to Little House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrbb1",
            "EntityName": "The Deer in the Wood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrbb9",
            "EntityName": "My Little House Songbook (My First Little House Books Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrbbl",
            "EntityName": "The Deer in the Wood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrbbv",
            "EntityName": "My Little House Songbook (My First Little House Books, No 1)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrbc2",
            "EntityName": "Santa Comes to Little House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrbcb",
            "EntityName": "Santa Comes to Little House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrbcm",
            "EntityName": "Deer in the Wood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrbcy",
            "EntityName": "The deer in the wood (My first Little house books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrbd5",
            "EntityName": "The Deer in the Wood (My First Little House Books (Sagebrush))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrbdf",
            "EntityName": "The Deer in the Wood (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrbdp",
            "EntityName": "The Deer in the Wood (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrbdz",
            "EntityName": "The Deer in the Wood (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w01c1",
            "EntityName": "Little House on the Prairie (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w01c9",
            "EntityName": "Little House on the Prairie (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w01ck",
            "EntityName": "Little House on the Prairie (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w01d2",
            "EntityName": "Little House on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w01db",
            "EntityName": "Little house on the prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w01dn",
            "EntityName": "Little House on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w01f5",
            "EntityName": "Little House on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w01g5",
            "EntityName": "The Little House on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w01h5",
            "EntityName": "The Little House on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w01hg",
            "EntityName": "Little House on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w01j7",
            "EntityName": "Little House On The Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w03z6",
            "EntityName": "Little house on the prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w040v",
            "EntityName": "Little house on the prairie."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w0412",
            "EntityName": "Little house on the prairie."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w041j",
            "EntityName": "Little House On The Prairie (Little House the Laura Years)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w041s",
            "EntityName": "Little house on the prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w0426",
            "EntityName": "Little house on the prairie."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w043p",
            "EntityName": "Little house on the prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w06jj",
            "EntityName": "Little House on the Prairie (Classic Mammoth)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w06jt",
            "EntityName": "Little House on the Prairie NW 247"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w06ks",
            "EntityName": "Little House on the Prairie (Little Brown Notebook Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w06l1",
            "EntityName": "Little House on the Prairie (Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w06l9",
            "EntityName": "Little House on the Prairie (Little House (HarperTrophy))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w06lt",
            "EntityName": "Little House On The Prairie CD (Little House the Laura Years)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w06mm",
            "EntityName": "Little House on the Prairie Tie-in Edition (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w06mw",
            "EntityName": "Little House on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w06ng",
            "EntityName": "Little House On The Prairie (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w06nq",
            "EntityName": "Little House on the Prairie Book and Charm (Charming Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w07f9",
            "EntityName": "Little House On The Prairie Low Price CD"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w07gk",
            "EntityName": "Little House on the Prairie Boxed Set ((9 Books) Little House On the Prairie; Farmer Boy; On the Banks of Plum Creek; the Long Winter; These Happy Golden Years; the First Four Years; By the Shores of Silver Lake; Little House In the Big Woods; Little Town On the Prairie)"
          }
        ]
      },
      {
        "ParseId": "WebQTest-447.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bt87)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bt87 ns:book.author.works_written ?x .\n}\n",
        "PotentialTopicEntityMention": "laura ingalls wilder",
        "TopicEntityName": "Laura Ingalls Wilder",
        "TopicEntityMid": "m.01bt87",
        "InferentialChain": [
          "book.author.works_written"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.11b60fcs_w",
            "EntityName": ""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.122chq7m",
            "EntityName": ""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_ggzp5",
            "EntityName": "Little House in the Ozarks: The Rediscovered Writings"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_gh1b9",
            "EntityName": "A Little House Birthday"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_gh2zr",
            "EntityName": "Summertime in the Big Woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_gh312",
            "EntityName": "Winter Days in the Big Woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_gh3gq",
            "EntityName": "Bedtime for Laura"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_gh4d6",
            "EntityName": "Laura Helps Pa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_gh67y",
            "EntityName": "Laura's Garden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_gh69s",
            "EntityName": "Hello, Laura!"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_gh9fh",
            "EntityName": "My Book of Little House Christmas Paper Dolls: Christmas on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_ghb47",
            "EntityName": "My Little House 123"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_ghcz6",
            "EntityName": "My Little House Birthday Book"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_ghdw7",
            "EntityName": "My Little House Book of Animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_ghdyx",
            "EntityName": "My Little House Book of Family"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_ghfbg",
            "EntityName": "My Little House Book of Memories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_ghfvc",
            "EntityName": "My Little House Diary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_ghfx8",
            "EntityName": "Dear Laura: Letters from Children to Laura Ingalls Wilder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_ghgcw",
            "EntityName": "Little House Sisters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_ghgmr",
            "EntityName": "The Little House Baby Book"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010r34qs",
            "EntityName": "Santa comes to little house"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010r3lf1",
            "EntityName": "Laura & Mr. Edwards"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010r4070",
            "EntityName": "Saving graces"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010r40l7",
            "EntityName": "Little House Friends"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010r4f77",
            "EntityName": "A Farmer Boy Birthday"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010r4sgv",
            "EntityName": "A Little House Reader"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010r506y",
            "EntityName": "Little House Farm Days"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010r8h92",
            "EntityName": "Country Fair"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010rnr_1",
            "EntityName": "Christmas Stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027qfnk",
            "EntityName": "The Long Winter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q8085",
            "EntityName": "The First Four Years"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qqh0p",
            "EntityName": "Little House in the Big Woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vl7t6",
            "EntityName": "On the Banks of Plum Creek"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x87pj",
            "EntityName": "By the Shores of Silver Lake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x87s8",
            "EntityName": "Little Town on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x87t_",
            "EntityName": "These Happy Golden Years"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x880w",
            "EntityName": "Farmer Boy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0462nj3",
            "EntityName": "West from Home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0462r95",
            "EntityName": "On the Way Home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31_h",
            "EntityName": "School Days"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31_r",
            "EntityName": "Christmas in the Big Woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31th",
            "EntityName": "A little house sampler"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31v_",
            "EntityName": "Little House the Laura Years Boxed Set"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31v7",
            "EntityName": "Winter on the Farm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31vr",
            "EntityName": "My Little House Chapter Book Collection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31w_",
            "EntityName": "Laura's Christmas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31w7",
            "EntityName": "Prairie Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31wh",
            "EntityName": "A little house treasury"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31x_",
            "EntityName": "Dance at Grandpa's"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31x7",
            "EntityName": "A Little Prairie House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31xh",
            "EntityName": "Going to Town"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31xr",
            "EntityName": "Dear Laura"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31y7",
            "EntityName": "The adventures of Laura and Jack"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31yh",
            "EntityName": "My Book of Little House Paper Dolls"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31yr",
            "EntityName": "Laura & Nellie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31z_",
            "EntityName": "Going West"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31z7",
            "EntityName": "Pioneer Sisters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31zh",
            "EntityName": "Little House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31zr",
            "EntityName": "Hard Times on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t320_",
            "EntityName": "The Deer in the Wood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t3207",
            "EntityName": "Sugar Snow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t320r",
            "EntityName": "Animal Adventures"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t321r",
            "EntityName": "Words from a fearless heart"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t322_",
            "EntityName": "My Little House Songbook"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t3227",
            "EntityName": "Little House Parties"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t322h",
            "EntityName": "Laura's Early Years Collection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t322r",
            "EntityName": "Farmer Boy Days"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06_tw6s",
            "EntityName": "A Little House Traveler"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06614rb",
            "EntityName": "Little House on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.068f65l",
            "EntityName": "A FAMILY COLLECTION"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.069832t",
            "EntityName": "Orillas del r\u00edo Plum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06bwxcn",
            "EntityName": "1998 Laura Ingalls Wilder Country Engagement Book"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dgz9j",
            "EntityName": "Caroline and Her Sister"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dwl46",
            "EntityName": "The Complete Little House on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06jjd8t",
            "EntityName": "Laura's Little House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06qllnk",
            "EntityName": "Laura Ingalls Wilder's prairie wisdom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06qzzw7",
            "EntityName": "Largo Invierno"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s4dxs",
            "EntityName": "A Day on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06tlq0c",
            "EntityName": "Laura's Pa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06tprs4",
            "EntityName": "Writings to young women from Laura Ingalls Wilder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3zd0c",
            "EntityName": "Little House on the Prairie"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01bt87": "Laura Ingalls Wilder"
    },
    "qid_topic_entity": {
      "Q237514": "Laura Ingalls Wilder"
    },
    "index": 245
  },
  {
    "QuestionId": "WebQTest-1582",
    "RawQuestion": "what time in china hong kong?",
    "ProcessedQuestion": "what time in china hong kong",
    "Parses": [
      {
        "ParseId": "WebQTest-1582.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03h64)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03h64 ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "hong kong",
        "TopicEntityName": "Hong Kong",
        "TopicEntityMid": "m.03h64",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04qqww",
            "EntityName": "Hong Kong Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03h64": "Hong Kong"
    },
    "qid_topic_entity": {
      "Q8646": "Hong Kong"
    },
    "index": 246
  },
  {
    "QuestionId": "WebQTest-1501",
    "RawQuestion": "where is the un based?",
    "ProcessedQuestion": "where is the un based",
    "Parses": [
      {
        "ParseId": "WebQTest-1501.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07t65)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07t65 ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "un",
        "TopicEntityName": "United Nations",
        "TopicEntityMid": "m.07t65",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_286",
            "EntityName": "New York City"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07t65": "United Nations"
    },
    "qid_topic_entity": {
      "Q1065": "United Nations"
    },
    "index": 247
  },
  {
    "QuestionId": "WebQTest-559",
    "RawQuestion": "what instrument did robin gibb play?",
    "ProcessedQuestion": "what instrument did robin gibb play",
    "Parses": [
      {
        "ParseId": "WebQTest-559.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0137hn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0137hn ns:music.group_member.instruments_played ?x .\n}\n",
        "PotentialTopicEntityMention": "robin gibb",
        "TopicEntityName": "Robin Gibb",
        "TopicEntityMid": "m.0137hn",
        "InferentialChain": [
          "music.group_member.instruments_played"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05r5c",
            "EntityName": "Piano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07y_7",
            "EntityName": "Violin"
          }
        ]
      },
      {
        "ParseId": "WebQTest-559.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0137hn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0137hn ns:music.group_member.membership ?y .\n?y ns:music.group_membership.role ?x .\n?x ns:common.topic.notable_types ns:m.0kpv25 .\n}\n",
        "PotentialTopicEntityMention": "robin gibb",
        "TopicEntityName": "Robin Gibb",
        "TopicEntityMid": "m.0137hn",
        "InferentialChain": [
          "music.group_member.membership",
          "music.group_membership.role"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpv25",
            "EntityName": "Musical instrument",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0290ngj",
            "EntityName": "Vocals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03qjg",
            "EntityName": "Harmonica"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05r5c",
            "EntityName": "Piano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07y_7",
            "EntityName": "Violin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cfdd",
            "EntityName": "Drum machine"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0137hn": "Robin Gibb"
    },
    "qid_topic_entity": {
      "Q188482": "Robin Gibb"
    },
    "index": 248
  },
  {
    "QuestionId": "WebQTest-1562",
    "RawQuestion": "what countries constitute the eu?",
    "ProcessedQuestion": "what countries constitute the eu",
    "Parses": [
      {
        "ParseId": "WebQTest-1562.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_6t_z8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_6t_z8 ns:organization.membership_organization.members ?y .\n?y ns:organization.organization_membership.member ?x .\n}\n",
        "PotentialTopicEntityMention": "eu",
        "TopicEntityName": "European Union",
        "TopicEntityMid": "m.0_6t_z8",
        "InferentialChain": [
          "organization.membership_organization.members",
          "organization.organization_membership.member"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0154j",
            "EntityName": "Belgium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015qh",
            "EntityName": "Bulgaria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01mjq",
            "EntityName": "Czech Republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01pj7",
            "EntityName": "Croatia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01ppq",
            "EntityName": "Cyprus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kmm",
            "EntityName": "Estonia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vzc",
            "EntityName": "Finland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0345h",
            "EntityName": "Germany"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035qy",
            "EntityName": "Greece"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gj2",
            "EntityName": "Hungary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rjj",
            "EntityName": "Italy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rt9",
            "EntityName": "Republic of Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04g5k",
            "EntityName": "Latvia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04g61",
            "EntityName": "Luxembourg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gzd",
            "EntityName": "Lithuania"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3q",
            "EntityName": "Malta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059j2",
            "EntityName": "Netherlands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qhw",
            "EntityName": "Poland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05r4w",
            "EntityName": "Portugal"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06c1y",
            "EntityName": "Romania"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mkj",
            "EntityName": "Spain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06npd",
            "EntityName": "Slovakia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06t8v",
            "EntityName": "Slovenia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ssc",
            "EntityName": "United Kingdom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d0vqn",
            "EntityName": "Sweden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f8l9c",
            "EntityName": "France"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h7x",
            "EntityName": "Austria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k6nt",
            "EntityName": "Denmark"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0_6t_z8": "European Union"
    },
    "qid_topic_entity": {
      "Q458": "European Union"
    },
    "index": 249
  },
  {
    "QuestionId": "WebQTest-20",
    "RawQuestion": "what did st augustine do?",
    "ProcessedQuestion": "what did st augustine do",
    "Parses": [
      {
        "ParseId": "WebQTest-20.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0w6w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0w6w ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "augustine",
        "TopicEntityName": "Augustine of Hippo",
        "TopicEntityMid": "m.0w6w",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h6fbs",
            "EntityName": "Philosopher"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05t4q",
            "EntityName": "Physician"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0w6w": "Augustine of Hippo"
    },
    "qid_topic_entity": {
      "Q8018": "Augustine of Hippo"
    },
    "index": 250
  },
  {
    "QuestionId": "WebQTest-1607",
    "RawQuestion": "who won fedex cup 2012?",
    "ProcessedQuestion": "who won fedex cup 2012",
    "Parses": [
      {
        "ParseId": "WebQTest-1607.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? 2012"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08q5ws)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08q5ws ns:sports.sports_award_type.winners ?y .\n?y ns:sports.sports_award.award_winner ?x .\n?y ns:sports.sports_award.season ns:m.0hrfg40 .\n}\n",
        "PotentialTopicEntityMention": "fedex cup",
        "TopicEntityName": "FedEx Cup",
        "TopicEntityMid": "m.08q5ws",
        "InferentialChain": [
          "sports.sports_award_type.winners",
          "sports.sports_award.award_winner"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0hrfg40",
            "EntityName": "2012 PGA Tour",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_award.season",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vnxb_",
            "EntityName": "Brandt Snedeker"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.08q5ws": "FedEx Cup"
    },
    "qid_topic_entity": {
      "Q1399835": "FedEx Cup"
    },
    "index": 251
  },
  {
    "QuestionId": "WebQTest-1696",
    "RawQuestion": "what did ferdinand magellan do?",
    "ProcessedQuestion": "what did ferdinand magellan do",
    "Parses": [
      {
        "ParseId": "WebQTest-1696.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.033ky)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.033ky ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "ferdinand magellan",
        "TopicEntityName": "Ferdinand Magellan",
        "TopicEntityMid": "m.033ky",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016wtf",
            "EntityName": "Sailor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.023nrw",
            "EntityName": "Navigator"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.040vc4s",
            "EntityName": "Explorer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.033ky": "Ferdinand Magellan"
    },
    "qid_topic_entity": {
      "Q1496": "Ferdinand Magellan"
    },
    "index": 252
  },
  {
    "QuestionId": "WebQTest-1553",
    "RawQuestion": "where does sami yusuf live?",
    "ProcessedQuestion": "where does sami yusuf live",
    "Parses": [
      {
        "ParseId": "WebQTest-1553.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08cnsg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08cnsg ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\nFILTER(NOT EXISTS {?y ns:people.place_lived.end_date ?sk0} || \nEXISTS {?y ns:people.place_lived.end_date ?sk1 . \nFILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.place_lived.start_date ?sk2} || \nEXISTS {?y ns:people.place_lived.start_date ?sk3 . \nFILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "sami yusuf",
        "TopicEntityName": "Sami Yusuf",
        "TopicEntityMid": "m.08cnsg",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.place_lived.end_date",
            "ValueType": "DateTime"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.place_lived.start_date",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ftlx",
            "EntityName": "Tehran"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.08cnsg": "Sami Yusuf"
    },
    "qid_topic_entity": {
      "Q558226": "Sami Yusuf"
    },
    "index": 253
  },
  {
    "QuestionId": "WebQTest-561",
    "RawQuestion": "when was abe lincoln president?",
    "ProcessedQuestion": "when was abe lincoln president",
    "Parses": [
      {
        "ParseId": "WebQTest-561.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gzh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gzh ns:base.inaugurations.inauguration_speaker.inauguration ?x .\n}\n",
        "PotentialTopicEntityMention": "abe lincoln",
        "TopicEntityName": "Abraham Lincoln",
        "TopicEntityMid": "m.0gzh",
        "InferentialChain": [
          "base.inaugurations.inauguration_speaker.inauguration"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05brd51",
            "EntityName": "Abraham Lincoln 1861 presidential inauguration"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05brd5c",
            "EntityName": "Abraham Lincoln 1865 presidential inauguration"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0gzh": "Abraham Lincoln"
    },
    "qid_topic_entity": {
      "Q91": "Abraham Lincoln"
    },
    "index": 254
  },
  {
    "QuestionId": "WebQTest-300",
    "RawQuestion": "who is sir francis bacon?",
    "ProcessedQuestion": "who is sir francis bacon",
    "Parses": [
      {
        "ParseId": "WebQTest-300.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.030dr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.030dr ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "francis bacon",
        "TopicEntityName": "Francis Bacon",
        "TopicEntityMid": "m.030dr",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.125_hzb47",
            "EntityName": "Spy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016fc2",
            "EntityName": "Statesman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h6fbs",
            "EntityName": "Philosopher"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q2q",
            "EntityName": "Scientist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kyk",
            "EntityName": "Author"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.030dr": "Francis Bacon"
    },
    "qid_topic_entity": {
      "Q37388": "Francis Bacon"
    },
    "index": 255
  },
  {
    "QuestionId": "WebQTest-638",
    "RawQuestion": "what languages are there in japan?",
    "ProcessedQuestion": "what languages are there in japan",
    "Parses": [
      {
        "ParseId": "WebQTest-638.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_3d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_3d ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "japan",
        "TopicEntityName": "Japan",
        "TopicEntityMid": "m.03_3d",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwhyv",
            "EntityName": "Korean Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jcw",
            "EntityName": "Esperanto Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_9r",
            "EntityName": "Japanese Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jdg7",
            "EntityName": "Ainu Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03_3d": "Japan"
    },
    "qid_topic_entity": {
      "Q17": "Japan"
    },
    "index": 256
  },
  {
    "QuestionId": "WebQTest-83",
    "RawQuestion": "which countries speak german officially?",
    "ProcessedQuestion": "which countries speak german officially",
    "Parses": [
      {
        "ParseId": "WebQTest-83.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04306rv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04306rv ns:language.human_language.countries_spoken_in ?x .\n?x ns:location.country.official_language ns:m.04306rv .\n}\n",
        "PotentialTopicEntityMention": "german",
        "TopicEntityName": "German Language",
        "TopicEntityMid": "m.04306rv",
        "InferentialChain": [
          "language.human_language.countries_spoken_in"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04306rv",
            "EntityName": "German Language",
            "SourceNodeIndex": 0,
            "NodePredicate": "location.country.official_language",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0154j",
            "EntityName": "Belgium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0345h",
            "EntityName": "Germany"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03f2w",
            "EntityName": "East Germany"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04g61",
            "EntityName": "Luxembourg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j53",
            "EntityName": "Liechtenstein"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mzp",
            "EntityName": "Switzerland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h7x",
            "EntityName": "Austria"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04306rv": "German Language"
    },
    "qid_topic_entity": {
      "Q188": "German Language"
    },
    "index": 257
  },
  {
    "QuestionId": "WebQTest-502",
    "RawQuestion": "where did al qaeda attack?",
    "ProcessedQuestion": "where did al qaeda attack",
    "Parses": [
      {
        "ParseId": "WebQTest-502.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "?? attack event vs. where"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0v74)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0v74 ns:base.disaster2.attacker.attack_s ?y .\n?y ns:base.disaster2.attack_process.attack_event ?x .\n?y ns:base.disaster2.attack_process.attacker ns:m.0v74 .\n}\n",
        "PotentialTopicEntityMention": "al qaeda",
        "TopicEntityName": "Al-Qaeda",
        "TopicEntityMid": "m.0v74",
        "InferentialChain": [
          "base.disaster2.attacker.attack_s",
          "base.disaster2.attack_process.attack_event"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0v74",
            "EntityName": "Al-Qaeda",
            "SourceNodeIndex": 0,
            "NodePredicate": "base.disaster2.attack_process.attacker",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c6cwg",
            "EntityName": "Taliban insurgency"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d0vp3",
            "EntityName": "September 11 attacks"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0v74": "Al-Qaeda"
    },
    "qid_topic_entity": {
      "Q34490": "Al-Qaeda"
    },
    "index": 258
  },
  {
    "QuestionId": "WebQTest-1617",
    "RawQuestion": "what did nicholas copernicus discover?",
    "ProcessedQuestion": "what did nicholas copernicus discover",
    "Parses": [
      {
        "ParseId": "WebQTest-1617.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01vvm4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01vvm4 ns:base.argumentmaps.innovator.original_ideas ?x .\n}\n",
        "PotentialTopicEntityMention": "nicholas copernicus",
        "TopicEntityName": "Nicolaus Copernicus",
        "TopicEntityMid": "m.01vvm4",
        "InferentialChain": [
          "base.argumentmaps.innovator.original_ideas"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01kf8z",
            "EntityName": "Heliocentrism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027lfyz",
            "EntityName": "Copernican heliocentrism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02p6y2z",
            "EntityName": "Copernican Revolution"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01vvm4": "Nicolaus Copernicus"
    },
    "qid_topic_entity": {
      "Q619": "Nicolaus Copernicus"
    },
    "index": 259
  },
  {
    "QuestionId": "WebQTest-1101",
    "RawQuestion": "who is martin luther king jr facts?",
    "ProcessedQuestion": "who is martin luther king jr facts",
    "Parses": [
      {
        "ParseId": "WebQTest-1101.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051cc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051cc ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "martin luther king jr",
        "TopicEntityName": "Martin Luther King, Jr.",
        "TopicEntityMid": "m.051cc",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010b8yqs",
            "EntityName": "Civil rights activist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fhsb",
            "EntityName": "Pastor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0377kt",
            "EntityName": "Minister"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065qmpf",
            "EntityName": "Humanitarian"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0db79",
            "EntityName": "Clergy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.051cc": "Martin Luther King, Jr."
    },
    "qid_topic_entity": {
      "Q8027": "Martin Luther King, Jr."
    },
    "index": 260
  },
  {
    "QuestionId": "WebQTest-1269",
    "RawQuestion": "where was the boston tea party 1773?",
    "ProcessedQuestion": "where was the boston tea party 1773",
    "Parses": [
      {
        "ParseId": "WebQTest-1269.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ccd96)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ccd96 ns:time.event.locations ?x .\n}\n",
        "PotentialTopicEntityMention": "boston tea party",
        "TopicEntityName": "Boston Tea Party",
        "TopicEntityMid": "m.0ccd96",
        "InferentialChain": [
          "time.event.locations"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04n7kgz",
            "EntityName": "Boston Harbor"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ccd96": "Boston Tea Party"
    },
    "qid_topic_entity": {
      "Q19024": "Boston Tea Party"
    },
    "index": 261
  },
  {
    "QuestionId": "WebQTest-116",
    "RawQuestion": "which country was justin bieber born in?",
    "ProcessedQuestion": "which country was justin bieber born in",
    "Parses": [
      {
        "ParseId": "WebQTest-116.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: F Longer chain. Original comment: F place_of_birth -> contained_by & type = country"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n\tns:m.06w2sn5 ns:people.person.place_of_birth ?y .\n\t?y ns:location.location.containedby ?x .\n\t?x ns:common.topic.notable_types ns:m.01mp .  #Country\n}",
        "PotentialTopicEntityMention": "justin bieber",
        "TopicEntityName": "Justin Bieber",
        "TopicEntityMid": "m.06w2sn5",
        "InferentialChain": null,
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06w2sn5": "Justin Bieber"
    },
    "qid_topic_entity": {
      "Q34086": "Justin Bieber"
    },
    "index": 262
  },
  {
    "QuestionId": "WebQTest-659",
    "RawQuestion": "what form of government is the uk?",
    "ProcessedQuestion": "what form of government is the uk",
    "Parses": [
      {
        "ParseId": "WebQTest-659.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ssc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ssc ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "uk",
        "TopicEntityName": "United Kingdom",
        "TopicEntityMid": "m.07ssc",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018wl5",
            "EntityName": "Parliamentary system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fpfn",
            "EntityName": "Unitary state"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01q20",
            "EntityName": "Constitutional monarchy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07ssc": "United Kingdom"
    },
    "qid_topic_entity": {
      "Q145": "United Kingdom"
    },
    "index": 263
  },
  {
    "QuestionId": "WebQTest-1020",
    "RawQuestion": "what highschool did r. kelly attend?",
    "ProcessedQuestion": "what highschool did r. kelly attend",
    "Parses": [
      {
        "ParseId": "WebQTest-1020.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ffgh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ffgh ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:education.educational_institution.school_type ns:m.0bpgx .\n}\n",
        "PotentialTopicEntityMention": "r . kelly",
        "TopicEntityName": "R. Kelly",
        "TopicEntityMid": "m.0ffgh",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0bpgx",
            "EntityName": "High school",
            "SourceNodeIndex": 1,
            "NodePredicate": "education.educational_institution.school_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012vtjc5",
            "EntityName": "Kenwood Academy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ffgh": "R. Kelly"
    },
    "qid_topic_entity": {
      "Q273055": "R. Kelly"
    },
    "index": 264
  },
  {
    "QuestionId": "WebQTest-1362",
    "RawQuestion": "who is the state governor of florida?",
    "ProcessedQuestion": "who is the state governor of florida",
    "Parses": [
      {
        "ParseId": "WebQTest-1362.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02xry)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02xry ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.0fkvn .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "florida",
        "TopicEntityName": "Florida",
        "TopicEntityMid": "m.02xry",
        "InferentialChain": [
          "government.governmental_jurisdiction.governing_officials",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0fkvn",
            "EntityName": "Governor",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.basic_title",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0btx2g",
            "EntityName": "Rick Scott"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02xry": "Florida"
    },
    "qid_topic_entity": {
      "Q812": "Florida"
    },
    "index": 265
  },
  {
    "QuestionId": "WebQTest-1344",
    "RawQuestion": "what two states is st louis in?",
    "ProcessedQuestion": "what two states is st louis in",
    "Parses": [
      {
        "ParseId": "WebQTest-1344.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "not in two states, but we ignore when the question has the count wrong."
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06wxw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06wxw ns:location.location.containedby ?x .\n?x ns:base.biblioness.bibs_location.loc_type ?sk0 .\nFILTER (str(?sk0) = \"State\")\n}\n",
        "PotentialTopicEntityMention": "st louis",
        "TopicEntityName": "St. Louis",
        "TopicEntityMid": "m.06wxw",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Value",
            "Argument": "State",
            "EntityName": null,
            "SourceNodeIndex": 0,
            "NodePredicate": "base.biblioness.bibs_location.loc_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ych",
            "EntityName": "Missouri"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06wxw": "St. Louis"
    },
    "qid_topic_entity": {
      "Q38022": "St. Louis"
    },
    "index": 266
  },
  {
    "QuestionId": "WebQTest-256",
    "RawQuestion": "what is the primary language of china?",
    "ProcessedQuestion": "what is the primary language of china",
    "Parses": [
      {
        "ParseId": "WebQTest-256.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d05w3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d05w3 ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "china",
        "TopicEntityName": "China",
        "TopicEntityMid": "m.0d05w3",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0653m",
            "EntityName": "Standard Chinese"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d05w3": "China"
    },
    "qid_topic_entity": {
      "Q148": "China"
    },
    "index": 267
  },
  {
    "QuestionId": "WebQTest-51",
    "RawQuestion": "who will play mr gray in the film?",
    "ProcessedQuestion": "who will play mr gray in the film",
    "Parses": [
      {
        "ParseId": "WebQTest-51.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0nfjvrm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0nfjvrm ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n}\n",
        "PotentialTopicEntityMention": "mr gray",
        "TopicEntityName": "Christian Grey",
        "TopicEntityMid": "m.0nfjvrm",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fs4kv",
            "EntityName": "Jamie Dornan"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0nfjvrm": "Christian Grey"
    },
    "qid_topic_entity": {
      "UnknownQID": "Christian Grey"
    },
    "index": 268
  },
  {
    "QuestionId": "WebQTest-193",
    "RawQuestion": "what school did ben roethlisberger go to?",
    "ProcessedQuestion": "what school did ben roethlisberger go to",
    "Parses": [
      {
        "ParseId": "WebQTest-193.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.033t8w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.033t8w ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "ben roethlisberger",
        "TopicEntityName": "Ben Roethlisberger",
        "TopicEntityMid": "m.033t8w",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01r3y2",
            "EntityName": "Miami University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.033t8w": "Ben Roethlisberger"
    },
    "qid_topic_entity": {
      "Q537679": "Ben Roethlisberger"
    },
    "index": 269
  },
  {
    "QuestionId": "WebQTest-740",
    "RawQuestion": "who was selena gomez in barney and friends?",
    "ProcessedQuestion": "who was selena gomez in barney and friends",
    "Parses": [
      {
        "ParseId": "WebQTest-740.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gs6vr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gs6vr ns:tv.tv_actor.starring_roles ?y .\n?y ns:tv.regular_tv_appearance.character ?x .\n?y ns:tv.regular_tv_appearance.seasons ns:m.06xv1n1 .\n}\n",
        "PotentialTopicEntityMention": "selena gomez",
        "TopicEntityName": "Selena Gomez",
        "TopicEntityMid": "m.0gs6vr",
        "InferentialChain": [
          "tv.tv_actor.starring_roles",
          "tv.regular_tv_appearance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.06xv1n1",
            "EntityName": "Barney & Friends - Season 7",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.seasons",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gx3b6x",
            "EntityName": "Gianna"
          }
        ]
      },
      {
        "ParseId": "WebQTest-740.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gs6vr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gs6vr ns:tv.tv_actor.starring_roles ?y .\n?y ns:tv.regular_tv_appearance.character ?x .\n?y ns:tv.regular_tv_appearance.seasons ns:m.06xv1vj .\n}\n",
        "PotentialTopicEntityMention": "selena gomez",
        "TopicEntityName": "Selena Gomez",
        "TopicEntityMid": "m.0gs6vr",
        "InferentialChain": [
          "tv.tv_actor.starring_roles",
          "tv.regular_tv_appearance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.06xv1vj",
            "EntityName": "Barney & Friends - Season 8",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.seasons",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gx3b6x",
            "EntityName": "Gianna"
          }
        ]
      },
      {
        "ParseId": "WebQTest-740.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gs6vr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gs6vr ns:tv.tv_actor.starring_roles ?y .\n?y ns:tv.regular_tv_appearance.character ?x .\n?y ns:tv.regular_tv_appearance.series ns:m.01f4yy .\n}\n",
        "PotentialTopicEntityMention": "selena gomez",
        "TopicEntityName": "Selena Gomez",
        "TopicEntityMid": "m.0gs6vr",
        "InferentialChain": [
          "tv.tv_actor.starring_roles",
          "tv.regular_tv_appearance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01f4yy",
            "EntityName": "Barney & Friends",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.series",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gx3b6x",
            "EntityName": "Gianna"
          }
        ]
      },
      {
        "ParseId": "WebQTest-740.P3",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01f4yy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01f4yy ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.character ?x .\n?y ns:tv.regular_tv_appearance.actor ns:m.0gs6vr .\n}\n",
        "PotentialTopicEntityMention": "barney and friends",
        "TopicEntityName": "Barney & Friends",
        "TopicEntityMid": "m.01f4yy",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0gs6vr",
            "EntityName": "Selena Gomez",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.actor",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gx3b6x",
            "EntityName": "Gianna"
          }
        ]
      },
      {
        "ParseId": "WebQTest-740.P4",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01f4yy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01f4yy ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.character ?x .\n?y ns:tv.regular_tv_appearance.seasons ns:m.06xv1n1 .\n}\n",
        "PotentialTopicEntityMention": "barney and friends",
        "TopicEntityName": "Barney & Friends",
        "TopicEntityMid": "m.01f4yy",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.06xv1n1",
            "EntityName": "Barney & Friends - Season 7",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.seasons",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gx3b6x",
            "EntityName": "Gianna"
          }
        ]
      },
      {
        "ParseId": "WebQTest-740.P5",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01f4yy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01f4yy ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.character ?x .\n?y ns:tv.regular_tv_appearance.seasons ns:m.06xv1vj .\n}\n",
        "PotentialTopicEntityMention": "barney and friends",
        "TopicEntityName": "Barney & Friends",
        "TopicEntityMid": "m.01f4yy",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.06xv1vj",
            "EntityName": "Barney & Friends - Season 8",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.seasons",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gx3b6x",
            "EntityName": "Gianna"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0gs6vr": "Selena Gomez",
      "m.01f4yy": "Barney & Friends"
    },
    "qid_topic_entity": {
      "Q83287": "Selena Gomez",
      "Q213588": "Barney & Friends"
    },
    "index": 270
  },
  {
    "QuestionId": "WebQTest-1435",
    "RawQuestion": "who did kurt warner play 4?",
    "ProcessedQuestion": "who did kurt warner play 4",
    "Parses": [
      {
        "ParseId": "WebQTest-1435.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.025j0c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.025j0c ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n}\n",
        "PotentialTopicEntityMention": "kurt warner",
        "TopicEntityName": "Kurt Warner",
        "TopicEntityMid": "m.025j0c",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02y5f_",
            "EntityName": "Amsterdam Admirals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m3x9z",
            "EntityName": "Northern Iowa Panthers football"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bd9b5",
            "EntityName": "Iowa Barnstormers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05gg4",
            "EntityName": "New York Giants"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06x76",
            "EntityName": "St. Louis Rams"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ws7",
            "EntityName": "Arizona Cardinals"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.025j0c": "Kurt Warner"
    },
    "qid_topic_entity": {
      "Q945750": "Kurt Warner"
    },
    "index": 271
  },
  {
    "QuestionId": "WebQTest-651",
    "RawQuestion": "what is the currency of germany now?",
    "ProcessedQuestion": "what is the currency of germany now",
    "Parses": [
      {
        "ParseId": "WebQTest-651.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0345h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0345h ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "germany",
        "TopicEntityName": "Germany",
        "TopicEntityMid": "m.0345h",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02l6h",
            "EntityName": "Euro"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0345h": "Germany"
    },
    "qid_topic_entity": {
      "Q183": "Germany"
    },
    "index": 272
  },
  {
    "QuestionId": "WebQTest-1068",
    "RawQuestion": "what famous people are from barbados?",
    "ProcessedQuestion": "what famous people are from barbados",
    "Parses": [
      {
        "ParseId": "WebQTest-1068.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0162v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0162v ns:location.location.people_born_here ?x .\n}\n",
        "PotentialTopicEntityMention": "barbados",
        "TopicEntityName": "Barbados",
        "TopicEntityMid": "m.0162v",
        "InferentialChain": [
          "location.location.people_born_here"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.11b7k2x4z9",
            "EntityName": "Hadan Holligan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_g9k3x",
            "EntityName": "Xavier Marcus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0107zsh2",
            "EntityName": "Kycia Knight"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0108fxhy",
            "EntityName": "Shaquana Quintyne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0108k30n",
            "EntityName": "Shakera Selman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010944fr",
            "EntityName": "Kyshona Knight"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010q858j",
            "EntityName": "Shane Dowrich"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010q8lnv",
            "EntityName": "Ryan Wiggins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010q998q",
            "EntityName": "Rashidi Boucher"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010qdk6m",
            "EntityName": "Kyle Hope"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010qdlf6",
            "EntityName": "Kyle Corbin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010qxhv6",
            "EntityName": "Dadrian Forde"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010qy9tk",
            "EntityName": "Anthony Alleyne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010r2ym6",
            "EntityName": "Romario Harewood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010r2yzx",
            "EntityName": "Chai Lloyd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011v60p4",
            "EntityName": "Michael Stoute"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011v8dhb",
            "EntityName": "Kensley Reece"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011v9695",
            "EntityName": "Richard Roett"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011v9y2t",
            "EntityName": "Colin Forde"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0120_tpt",
            "EntityName": "Raheim Sargeant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012ccfhn",
            "EntityName": "Renaldo Fenty"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012fbp3v",
            "EntityName": "Eyre Sealy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012fnq_t",
            "EntityName": "Thomas Jordan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012hswmw",
            "EntityName": "Alana Shipp"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012zwmn9",
            "EntityName": "Andy Straughn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0131804q",
            "EntityName": "Jabarry Chandler"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0131l5ld",
            "EntityName": "Shai Hope"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01m_td",
            "EntityName": "Cecil Foster"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01n9gcl",
            "EntityName": "Rayvon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01sx302",
            "EntityName": "Kat Flint"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01vr2hw",
            "EntityName": "Arturo Tappin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0230n8",
            "EntityName": "Owen Arthur"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025tkwd",
            "EntityName": "Hartley Alleyne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026_1p7",
            "EntityName": "John Lucas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026_9br",
            "EntityName": "Arthur Hendy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026_9fv",
            "EntityName": "Hal Padmore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026tz62",
            "EntityName": "Albert Beckles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026vyy9",
            "EntityName": "Ricky Hoyte"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026vzz_",
            "EntityName": "Winston Reid"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026xq_7",
            "EntityName": "Wendell White"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026yx_5",
            "EntityName": "Roger Blades"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027m7rb",
            "EntityName": "Ashley Bickerton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028bj87",
            "EntityName": "Martin Nurse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02plmkt",
            "EntityName": "Emmerson Trotman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pv7kl",
            "EntityName": "Mabel Keaton Staupers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q3vwy",
            "EntityName": "Jim Hendy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q7q0v",
            "EntityName": "William T. Shorey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qbst5",
            "EntityName": "Greg Armstrong"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qq4b0",
            "EntityName": "Pamela Lavine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qx5n1",
            "EntityName": "Richard B. Moore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r19k7",
            "EntityName": "Float Woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rct77",
            "EntityName": "Avinash Persaud"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rs2md",
            "EntityName": "Frank L. White"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vwvpy",
            "EntityName": "Alvin Rouse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02w111v",
            "EntityName": "Percy Tarilton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02w9x1g",
            "EntityName": "George Blackman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wxfxz",
            "EntityName": "Redd Pepper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wz40d",
            "EntityName": "Chris Jordan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x05p0",
            "EntityName": "Clyde Mascoll"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z2pb2",
            "EntityName": "Sam Seale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.034vf3",
            "EntityName": "Anne Cools"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c5cr8",
            "EntityName": "Tony Cordle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c9nv4",
            "EntityName": "Wyndham Gittens"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cd2zh",
            "EntityName": "Magnet Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m5gpf",
            "EntityName": "Mia Mottley"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m73t1",
            "EntityName": "Shawn Terry Cox"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rtck",
            "EntityName": "Gordon Greenidge"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03y1rjj",
            "EntityName": "Douglas Dummett"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ypd7",
            "EntityName": "Billie Miller"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0404cm7",
            "EntityName": "Rickey A. Walcott"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04117kf",
            "EntityName": "Priya Balachandran"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.043jyyl",
            "EntityName": "Norman Forde"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.043ld4n",
            "EntityName": "Dave Wilkins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.043nldb",
            "EntityName": "Henry Doorly"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047g6p6",
            "EntityName": "Kirk Edwards"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047q1c6",
            "EntityName": "John Parris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047qgtj",
            "EntityName": "Frank Leslie Walcott"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04cwrys",
            "EntityName": "Seibert Straughn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ljlgb",
            "EntityName": "Sylvester Braithwaite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04mh9r",
            "EntityName": "Tom Adams"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04mzc8r",
            "EntityName": "George Alleyne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04n4k80",
            "EntityName": "William Perkins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04qj3s",
            "EntityName": "Arnold Josiah Ford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04y7h9y",
            "EntityName": "Edwin Lascelles, 1st Baron Harewood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04zy_n7",
            "EntityName": "Ricardo Ellcock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.052bx2",
            "EntityName": "Wilfred Wood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05693hn",
            "EntityName": "Anthony Forde"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.056yxj6",
            "EntityName": "Micky Welch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b_1p_",
            "EntityName": "Hal Linton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b1nny",
            "EntityName": "Lunden De'Leon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05p12q",
            "EntityName": "Nita Barrow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05p94m0",
            "EntityName": "Deandra Dottin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05st_5s",
            "EntityName": "Renn Dickson Hampden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05vbn23",
            "EntityName": "June Gibbons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05vbn2b",
            "EntityName": "Jennifer Gibbons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05x9ntq",
            "EntityName": "Austin Clarke"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05xcwdm",
            "EntityName": "Odimumba Kwamdela"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05yp45f",
            "EntityName": "Hilary Beckles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zqm30",
            "EntityName": "Colin Young"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zyb9w",
            "EntityName": "Hugh Laing"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0642g82",
            "EntityName": "John Holder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065__bc",
            "EntityName": "Nick Nanton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06yqvq",
            "EntityName": "Michael Stoute"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06z_b2",
            "EntityName": "Alison Sealy-Smith"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07bgh9",
            "EntityName": "Frank Collymore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07kfdb6",
            "EntityName": "G. Aubrey Goodman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07mpb5",
            "EntityName": "Lloyd Erskine Sandiford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07r45s",
            "EntityName": "Christopher Codrington"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07sbtf6",
            "EntityName": "Samuel Hinds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07zxk1",
            "EntityName": "Tony Reid"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.080k9x",
            "EntityName": "Conrad Hunte"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.087fwn",
            "EntityName": "Ryan Hinds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0893kc",
            "EntityName": "Philo Wallace"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08dgms",
            "EntityName": "Tony Cozier"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08k_fp",
            "EntityName": "William Maynard Gomm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08nk77",
            "EntityName": "Alan Emtage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08pv1p",
            "EntityName": "Seymour Nurse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08wk6h",
            "EntityName": "Anderson Cummins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09_thk",
            "EntityName": "Neville Goddard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09g74xf",
            "EntityName": "James Waithe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09gdd5t",
            "EntityName": "Lloyd A. Thompson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09gfmbm",
            "EntityName": "Jaicko"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n9zw",
            "EntityName": "Peter Lashley"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09nb1m",
            "EntityName": "Prof Edwards"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09pdvm",
            "EntityName": "Robert Callender"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09rt08y",
            "EntityName": "Agymah Kamau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09zmg_",
            "EntityName": "John Goddard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b4pgk",
            "EntityName": "Robin Bynoe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b4ptg",
            "EntityName": "Charlie Griffith"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b4rkl",
            "EntityName": "David Holford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b5pgq",
            "EntityName": "John Shepherd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b6kq0",
            "EntityName": "Ron King"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b7xfc",
            "EntityName": "Tony White"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bgkmm",
            "EntityName": "Zeeteah Massiah"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bm48p",
            "EntityName": "Robert Bailey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c3v54p",
            "EntityName": "Tim Thorogood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c4nk4",
            "EntityName": "Hugh Springer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c7wb4",
            "EntityName": "Goodridge Roberts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cc5g7x",
            "EntityName": "Jon Rubin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ch4swd",
            "EntityName": "Woodie Blackman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cm98yx",
            "EntityName": "Annalee Davis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cny4yb",
            "EntityName": "Nevada Phillips"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cp0yg6",
            "EntityName": "Clennell Wickham"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d282g",
            "EntityName": "Henry Honychurch Gorringe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d7lc1",
            "EntityName": "Trevor W. Payne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dllk5h",
            "EntityName": "Richard Pile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtr9d",
            "EntityName": "Hugh Gordon Cummins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f5cw7",
            "EntityName": "Lene Hall"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fhhp9",
            "EntityName": "Javon Searles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g8mmz",
            "EntityName": "Earl Maynard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g9cp88",
            "EntityName": "Karen Lord"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gc1y3",
            "EntityName": "Samuel Jackman Prescod"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gc9rb0",
            "EntityName": "Sylvesta Stuart"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gcbl8x",
            "EntityName": "Roy Callender"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gg3_l",
            "EntityName": "George Codrington"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gl7xv",
            "EntityName": "Marita Payne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gmdwcb",
            "EntityName": "John Richard Farre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gnjlj",
            "EntityName": "Gregory Goodridge"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gtt10v",
            "EntityName": "Wayne Sobers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gtvcmt",
            "EntityName": "Romell Brathwaite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gtxh22",
            "EntityName": "Dwight James"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gvs5vx",
            "EntityName": "Anthony Kellman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gyrytx",
            "EntityName": "Sir William Randolph Douglas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gyty25",
            "EntityName": "Denys Williams"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h0wgc",
            "EntityName": "Glenville Lovell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h30zg_",
            "EntityName": "Monica Braithwaite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h30zh5",
            "EntityName": "Ronald Fenty"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h5b5d",
            "EntityName": "Dennis Archer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h7ml7x",
            "EntityName": "William Cleeve"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3fw23",
            "EntityName": "Keith Griffith"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3wx9s",
            "EntityName": "Jason Boxhill"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3wxb7",
            "EntityName": "Omar Archer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3yfd8",
            "EntityName": "Bryan Neblett"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3yfdz",
            "EntityName": "Adrian Chase"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3yfg3",
            "EntityName": "Dwayne Stanford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3yfgl",
            "EntityName": "Barry Skeete"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3yfh1",
            "EntityName": "Rashida Williams"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3yfhr",
            "EntityName": "Kerry Holder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3yfjg",
            "EntityName": "Riviere Williams"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3yfk6",
            "EntityName": "Jonathan Straker"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3yfky",
            "EntityName": "Mario Harte"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3yflp",
            "EntityName": "Jason Carter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3yfm4",
            "EntityName": "Sheridan Grosvenor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j4nmrl",
            "EntityName": "Carlos Brathwaite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5b_89",
            "EntityName": "Bentley Springer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5byg1",
            "EntityName": "Ramuel Miller"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5bygf",
            "EntityName": "Stephen Griffith"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5bygt",
            "EntityName": "Omari Eastmond"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5byh5",
            "EntityName": "Lionel Paul"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5byhk",
            "EntityName": "Carl Joseph"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5byhy",
            "EntityName": "Renaldo Gilkes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5byj9",
            "EntityName": "Jomo Brathwaite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5byl5",
            "EntityName": "Andre Bourne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5bzqv",
            "EntityName": "Richard Lavine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5bzr6",
            "EntityName": "Diquan Adamson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5bzrl",
            "EntityName": "Kadeem Latham"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5bzrz",
            "EntityName": "Curtis Odle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5bzsb",
            "EntityName": "Jamal Chandler"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5bzsq",
            "EntityName": "Tristan Parris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5bzt2",
            "EntityName": "Kyle Gibson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j9pl_l",
            "EntityName": "George Moe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j9q6zl",
            "EntityName": "Horace Stoute"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jkx8sh",
            "EntityName": "Adriel Brathwaite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jw0g75",
            "EntityName": "Dwayne Griffith"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jw0s15",
            "EntityName": "Craig Worrell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k0l4zp",
            "EntityName": "Shakera Reece"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k8g_zx",
            "EntityName": "Kandy Fenty"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k8h3jx",
            "EntityName": "Crystal Fenty"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k8h3k5",
            "EntityName": "Brandy Fenty"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kr_sj",
            "EntityName": "Richard Moody"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ks4sy",
            "EntityName": "James Wedderburn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kt9r7",
            "EntityName": "David Comissiong"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nb45x5",
            "EntityName": "Chris Braithwaite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pl24lc",
            "EntityName": "Edward Evelyn Greaves"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0q3zvll",
            "EntityName": "Kirk Corbin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ql6xn8",
            "EntityName": "Jason Holder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0r8q19f",
            "EntityName": "Branford Taitt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rfdtlc",
            "EntityName": "Kyle Mayers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rqgsb9",
            "EntityName": "Ricardo Morris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rqgsfc",
            "EntityName": "Malcolm Marshall"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rqgshn",
            "EntityName": "Kemar Headley"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rqgsp0",
            "EntityName": "Armando Lashley"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0s9q0ly",
            "EntityName": "Louis Eugene King"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0vn2wtq",
            "EntityName": "Ella Jane New"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w0k1cm",
            "EntityName": "Don Kinch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w2f3c3",
            "EntityName": "Cynthia Rosalina La Touche Andersen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w5vltx",
            "EntityName": "Campbell Foster"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0wbkng2",
            "EntityName": "Jackie Roberts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0xpdtfn",
            "EntityName": "Ivor Germain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0z3sh5m",
            "EntityName": "Menelik Shabazz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zb3j8s",
            "EntityName": "Murr"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zs4kpg",
            "EntityName": "Denzil H. Hurley"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0162v": "Barbados"
    },
    "qid_topic_entity": {
      "Q244": "Barbados"
    },
    "index": 273
  },
  {
    "QuestionId": "WebQTest-700",
    "RawQuestion": "where is french spoken most?",
    "ProcessedQuestion": "where is french spoken most",
    "Parses": [
      {
        "ParseId": "WebQTest-700.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? spoken most"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.064_8sq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.064_8sq ns:language.human_language.countries_spoken_in ?x .\n}\n",
        "PotentialTopicEntityMention": "french",
        "TopicEntityName": "French",
        "TopicEntityMid": "m.064_8sq",
        "InferentialChain": [
          "language.human_language.countries_spoken_in"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0154j",
            "EntityName": "Belgium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0162v",
            "EntityName": "Barbados"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0164v",
            "EntityName": "Benin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01699",
            "EntityName": "Burkina Faso"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0169t",
            "EntityName": "Burundi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01n6c",
            "EntityName": "Comoros"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nln",
            "EntityName": "Cameroon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nyl",
            "EntityName": "Central African Republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01p1b",
            "EntityName": "Chad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01ppq",
            "EntityName": "Cyprus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01rxw",
            "EntityName": "Congo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01xbgx",
            "EntityName": "Cambodia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027jk",
            "EntityName": "Djibouti"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027nb",
            "EntityName": "Dominica"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kcz",
            "EntityName": "Equatorial Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_xj",
            "EntityName": "Jersey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03548",
            "EntityName": "Gabon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03676",
            "EntityName": "Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c8mkv",
            "EntityName": "Habsburg Netherlands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gk2",
            "EntityName": "Holy Roman Empire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gyl",
            "EntityName": "Haiti"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04g61",
            "EntityName": "Luxembourg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hhv",
            "EntityName": "Laos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hqz",
            "EntityName": "Lebanon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04sj3",
            "EntityName": "Madagascar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v09",
            "EntityName": "Mali"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vg8",
            "EntityName": "Martinique"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vs9",
            "EntityName": "Mauritius"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w58",
            "EntityName": "Monaco"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wgh",
            "EntityName": "Morocco"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05cc1",
            "EntityName": "Niger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0697s",
            "EntityName": "Qatar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dfg",
            "EntityName": "Rwanda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mzp",
            "EntityName": "Switzerland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06srk",
            "EntityName": "Senegal"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06sw9",
            "EntityName": "Seychelles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07fj_",
            "EntityName": "Tunisia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ytt",
            "EntityName": "Vatican City"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07z5n",
            "EntityName": "Vanuatu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f8l9c",
            "EntityName": "France"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fv4v",
            "EntityName": "Ivory Coast"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g8bw",
            "EntityName": "South Vietnam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h3y",
            "EntityName": "Algeria"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.064_8sq": "French"
    },
    "qid_topic_entity": {
      "Q150": "French"
    },
    "index": 274
  },
  {
    "QuestionId": "WebQTest-1510",
    "RawQuestion": "what are staffordshire terriers?",
    "ProcessedQuestion": "what are staffordshire terriers",
    "Parses": [
      {
        "ParseId": "WebQTest-1510.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01kv93)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01kv93 ns:biology.animal_breed.breed_of ?x .\n}\n",
        "PotentialTopicEntityMention": "staffordshire",
        "TopicEntityName": "Staffordshire Bull Terrier",
        "TopicEntityMid": "m.01kv93",
        "InferentialChain": [
          "biology.animal_breed.breed_of"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bt9lr",
            "EntityName": "Dog"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1510.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01kv93)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01kv93 ns:biology.organism_classification.higher_classification ?x .\n}\n",
        "PotentialTopicEntityMention": "staffordshire",
        "TopicEntityName": "Staffordshire Bull Terrier",
        "TopicEntityMid": "m.01kv93",
        "InferentialChain": [
          "biology.organism_classification.higher_classification"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bt9lr",
            "EntityName": "Dog"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01kv93": "Staffordshire Bull Terrier"
    },
    "qid_topic_entity": {
      "Q39285": "Staffordshire Bull Terrier"
    },
    "index": 275
  },
  {
    "QuestionId": "WebQTest-1480",
    "RawQuestion": "who did cher have a son with?",
    "ProcessedQuestion": "who did cher have a son with",
    "Parses": [
      {
        "ParseId": "WebQTest-1480.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: F Longer chain. Original comment: F Spouse of Cher whose count(children) > 0"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n\tns:m.01vtj38 ns:people.person.children ?y .\n\t?y ns:people.person.gender ns:m.05zppz . #Male\n\t?y ns:people.person.parents ?x .\n  FILTER (?x != ns:m.01vtj38)\n}",
        "PotentialTopicEntityMention": "cher",
        "TopicEntityName": "Cher",
        "TopicEntityMid": "m.01vtj38",
        "InferentialChain": [
          "people.person.children"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jg92",
            "EntityName": "Gregg Allman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06wmp",
            "EntityName": "Sonny Bono"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01vtj38": "Cher"
    },
    "qid_topic_entity": {
      "Q12003": "Cher"
    },
    "index": 276
  },
  {
    "QuestionId": "WebQTest-603",
    "RawQuestion": "what money to take to turkey?",
    "ProcessedQuestion": "what money to take to turkey",
    "Parses": [
      {
        "ParseId": "WebQTest-603.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01znc_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01znc_ ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "turkey",
        "TopicEntityName": "Turkey",
        "TopicEntityMid": "m.01znc_",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04dq0w",
            "EntityName": "Turkish lira"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01znc_": "Turkey"
    },
    "qid_topic_entity": {
      "Q43": "Turkey"
    },
    "index": 277
  },
  {
    "QuestionId": "WebQTest-1433",
    "RawQuestion": "what to do with kids in asheville nc?",
    "ProcessedQuestion": "what to do with kids in asheville nc",
    "Parses": [
      {
        "ParseId": "WebQTest-1433.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ydpd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ydpd ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "asheville nc",
        "TopicEntityName": "Asheville",
        "TopicEntityMid": "m.0ydpd",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01vnqb",
            "EntityName": "Blue Ridge Parkway"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rtgcx",
            "EntityName": "The Omni Grove Park Inn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03d2gy",
            "EntityName": "Biltmore Estate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03qhg3_",
            "EntityName": "Thomas Wolfe House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03qknx1",
            "EntityName": "Folk Art Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06_g_2g",
            "EntityName": "Smith-McDowell House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07pc_b",
            "EntityName": "Carl Sandburg Home National Historic Site"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08gz6r",
            "EntityName": "Pisgah National Forest"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fhdb5",
            "EntityName": "Bele Chere"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k5mxqg",
            "EntityName": "Asheville Art Museum"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ydpd": "Asheville"
    },
    "qid_topic_entity": {
      "Q648501": "Asheville"
    },
    "index": 278
  },
  {
    "QuestionId": "WebQTest-1638",
    "RawQuestion": "what language is most commonly spoken in belgium?",
    "ProcessedQuestion": "what language is most commonly spoken in belgium",
    "Parses": [
      {
        "ParseId": "WebQTest-1638.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0154j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0154j ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "belgium",
        "TopicEntityName": "Belgium",
        "TopicEntityMid": "m.0154j",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bv9",
            "EntityName": "Dutch Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04306rv",
            "EntityName": "German Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064_8sq",
            "EntityName": "French"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0154j": "Belgium"
    },
    "qid_topic_entity": {
      "Q31": "Belgium"
    },
    "index": 279
  },
  {
    "QuestionId": "WebQTest-1266",
    "RawQuestion": "what did romo do?",
    "ProcessedQuestion": "what did romo do",
    "Parses": [
      {
        "ParseId": "WebQTest-1266.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04cyz8g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04cyz8g ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "romo",
        "TopicEntityName": "Sergio Romo",
        "TopicEntityMid": "m.04cyz8g",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h664g",
            "EntityName": "Baseball player"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04cyz8g": "Sergio Romo"
    },
    "qid_topic_entity": {
      "Q3041597": "Sergio Romo"
    },
    "index": 280
  },
  {
    "QuestionId": "WebQTest-1261",
    "RawQuestion": "where did the battle of passchendaele happen?",
    "ProcessedQuestion": "where did the battle of passchendaele happen",
    "Parses": [
      {
        "ParseId": "WebQTest-1261.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c3mz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c3mz ns:time.event.locations ?x .\n}\n",
        "PotentialTopicEntityMention": "passchendaele",
        "TopicEntityName": "Battle of Passchendaele",
        "TopicEntityMid": "m.0c3mz",
        "InferentialChain": [
          "time.event.locations"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pb6l5",
            "EntityName": "Passendale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02y4t",
            "EntityName": "Flanders"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0c3mz": "Battle of Passchendaele"
    },
    "qid_topic_entity": {
      "Q426227": "Battle of Passchendaele"
    },
    "index": 281
  },
  {
    "QuestionId": "WebQTest-254",
    "RawQuestion": "what countries in the world speak chinese?",
    "ProcessedQuestion": "what countries in the world speak chinese",
    "Parses": [
      {
        "ParseId": "WebQTest-254.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01r2l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01r2l ns:language.human_language.countries_spoken_in ?x .\n}\n",
        "PotentialTopicEntityMention": "chinese",
        "TopicEntityName": "Chinese language",
        "TopicEntityMid": "m.01r2l",
        "InferentialChain": [
          "language.human_language.countries_spoken_in"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0167v",
            "EntityName": "Brunei"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01crd5",
            "EntityName": "Vietnam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06t2t",
            "EntityName": "Singapore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09pmkv",
            "EntityName": "Malaysia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d05w3",
            "EntityName": "China"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pb4_wn",
            "EntityName": "Sh\u011bn"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01r2l": "Chinese language"
    },
    "qid_topic_entity": {
      "Q7850": "Chinese language"
    },
    "index": 282
  },
  {
    "QuestionId": "WebQTest-400",
    "RawQuestion": "what was the capital city of the east roman empire?",
    "ProcessedQuestion": "what was the capital city of the east roman empire",
    "Parses": [
      {
        "ParseId": "WebQTest-400.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017cw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017cw ns:location.country.capital ?x .\n}\n",
        "PotentialTopicEntityMention": "east roman empire",
        "TopicEntityName": "Byzantine Empire",
        "TopicEntityMid": "m.017cw",
        "InferentialChain": [
          "location.country.capital"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01q0l",
            "EntityName": "Constantinople"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.017cw": "Byzantine Empire"
    },
    "qid_topic_entity": {
      "Q12544": "Byzantine Empire"
    },
    "index": 283
  },
  {
    "QuestionId": "WebQTest-818",
    "RawQuestion": "where was the ottoman empire based?",
    "ProcessedQuestion": "where was the ottoman empire based",
    "Parses": [
      {
        "ParseId": "WebQTest-818.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? based = containedby"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05kyr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05kyr ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "ottoman empire",
        "TopicEntityName": "Ottoman Empire",
        "TopicEntityMid": "m.05kyr",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01ffbn",
            "EntityName": "Near East"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05kyr": "Ottoman Empire"
    },
    "qid_topic_entity": {
      "Q12560": "Ottoman Empire"
    },
    "index": 284
  },
  {
    "QuestionId": "WebQTest-1998",
    "RawQuestion": "what party was thomas jefferson affiliated with?",
    "ProcessedQuestion": "what party was thomas jefferson affiliated with",
    "Parses": [
      {
        "ParseId": "WebQTest-1998.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07cbs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07cbs ns:government.politician.party ?y .\n?y ns:government.political_party_tenure.party ?x .\n}\n",
        "PotentialTopicEntityMention": "thomas jefferson",
        "TopicEntityName": "Thomas Jefferson",
        "TopicEntityMid": "m.07cbs",
        "InferentialChain": [
          "government.politician.party",
          "government.political_party_tenure.party"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07wf9",
            "EntityName": "Democratic-Republican Party"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07cbs": "Thomas Jefferson"
    },
    "qid_topic_entity": {
      "Q11812": "Thomas Jefferson"
    },
    "index": 285
  },
  {
    "QuestionId": "WebQTest-1449",
    "RawQuestion": "what was laura ingalls wilder famous for?",
    "ProcessedQuestion": "what was laura ingalls wilder famous for",
    "Parses": [
      {
        "ParseId": "WebQTest-1449.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bt87)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bt87 ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "laura ingalls wilder",
        "TopicEntityName": "Laura Ingalls Wilder",
        "TopicEntityMid": "m.01bt87",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d30f",
            "EntityName": "Teacher"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d8qb",
            "EntityName": "Journalist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kyk",
            "EntityName": "Author"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01bt87": "Laura Ingalls Wilder"
    },
    "qid_topic_entity": {
      "Q237514": "Laura Ingalls Wilder"
    },
    "index": 286
  },
  {
    "QuestionId": "WebQTest-269",
    "RawQuestion": "where does delaware river start?",
    "ProcessedQuestion": "where does delaware river start",
    "Parses": [
      {
        "ParseId": "WebQTest-269.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dtzd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dtzd ns:geography.river.origin ?x .\n}\n",
        "PotentialTopicEntityMention": "delaware river",
        "TopicEntityName": "Delaware River",
        "TopicEntityMid": "m.0dtzd",
        "InferentialChain": [
          "geography.river.origin"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.032h51",
            "EntityName": "West Branch Delaware River"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.036r_7",
            "EntityName": "Mount Jefferson"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0dtzd": "Delaware River"
    },
    "qid_topic_entity": {
      "Q143762": "Delaware River"
    },
    "index": 287
  },
  {
    "QuestionId": "WebQTest-488",
    "RawQuestion": "who did sir francis drake marry?",
    "ProcessedQuestion": "who did sir francis drake marry",
    "Parses": [
      {
        "ParseId": "WebQTest-488.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.031t2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.031t2 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "PotentialTopicEntityMention": "sir francis drake",
        "TopicEntityName": "Francis Drake",
        "TopicEntityMid": "m.031t2",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k1nmz5",
            "EntityName": "Mary Newman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k1nmzm",
            "EntityName": "Elizabeth Sydenham"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.031t2": "Francis Drake"
    },
    "qid_topic_entity": {
      "Q36517": "Francis Drake"
    },
    "index": 288
  },
  {
    "QuestionId": "WebQTest-777",
    "RawQuestion": "where is the main headquarters of google?",
    "ProcessedQuestion": "where is the main headquarters of google",
    "Parses": [
      {
        "ParseId": "WebQTest-777.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.045c7b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.045c7b ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "google",
        "TopicEntityName": "Google",
        "TopicEntityMid": "m.045c7b",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0r6c4",
            "EntityName": "Mountain View"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.045c7b": "Google"
    },
    "qid_topic_entity": {
      "Q95": "Google"
    },
    "index": 289
  },
  {
    "QuestionId": "WebQTest-1580",
    "RawQuestion": "what type of democracy is the united states?",
    "ProcessedQuestion": "what type of democracy is the united states",
    "Parses": [
      {
        "ParseId": "WebQTest-1580.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09c7w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09c7w0 ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "united states",
        "TopicEntityName": "United States of America",
        "TopicEntityMid": "m.09c7w0",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d9r3",
            "EntityName": "Presidential system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c9rw5",
            "EntityName": "Constitutional republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j729",
            "EntityName": "Federal republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09c7w0": "United States of America"
    },
    "qid_topic_entity": {
      "Q30": "United States of America"
    },
    "index": 290
  },
  {
    "QuestionId": "WebQTest-626",
    "RawQuestion": "what does the missouri river bisect?",
    "ProcessedQuestion": "what does the missouri river bisect",
    "Parses": [
      {
        "ParseId": "WebQTest-626.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04ykz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04ykz ns:location.location.partially_contained_by ?y .\n?y ns:location.partial_containment_relationship.partially_contained_by ?x .\n}\n",
        "PotentialTopicEntityMention": "missouri river",
        "TopicEntityName": "Missouri River",
        "TopicEntityMid": "m.04ykz",
        "InferentialChain": [
          "location.location.partially_contained_by",
          "location.partial_containment_relationship.partially_contained_by"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03s0w",
            "EntityName": "Iowa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0488g",
            "EntityName": "Kansas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ych",
            "EntityName": "Missouri"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050l8",
            "EntityName": "Montana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05fhy",
            "EntityName": "Nebraska"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05fky",
            "EntityName": "North Dakota"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mz5",
            "EntityName": "South Dakota"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04ykz": "Missouri River"
    },
    "qid_topic_entity": {
      "Q5419": "Missouri River"
    },
    "index": 291
  },
  {
    "QuestionId": "WebQTest-546",
    "RawQuestion": "who is michael j fox's wife?",
    "ProcessedQuestion": "who is michael j fox 's wife",
    "Parses": [
      {
        "ParseId": "WebQTest-546.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hz_1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hz_1 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\nFILTER(NOT EXISTS {?y ns:people.marriage.from ?sk0} || \nEXISTS {?y ns:people.marriage.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to ?sk2} || \nEXISTS {?y ns:people.marriage.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "michael j fox",
        "TopicEntityName": "Michael J. Fox",
        "TopicEntityMid": "m.0hz_1",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gpck",
            "EntityName": "Tracy Pollan"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0hz_1": "Michael J. Fox"
    },
    "qid_topic_entity": {
      "Q395274": "Michael J. Fox"
    },
    "index": 292
  },
  {
    "QuestionId": "WebQTest-287",
    "RawQuestion": "what movies has carmen electra been in?",
    "ProcessedQuestion": "what movies has carmen electra been in",
    "Parses": [
      {
        "ParseId": "WebQTest-287.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01lbp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01lbp ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "carmen electra",
        "TopicEntityName": "Carmen Electra",
        "TopicEntityMid": "m.01lbp",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0110g35j",
            "EntityName": "Dragula"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01265cw2",
            "EntityName": "Chocolate City"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01hjwf",
            "EntityName": "Good Burger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01pj_5",
            "EntityName": "Scary Movie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026hxwx",
            "EntityName": "Epic Movie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ntb8",
            "EntityName": "Starsky & Hutch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pjfgv",
            "EntityName": "Full of It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q5hqz",
            "EntityName": "I Want Candy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q674n",
            "EntityName": "Lil' Pimp"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qdrjx",
            "EntityName": "Bedtime Stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ck20l",
            "EntityName": "Meet the Spartans"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cn85q",
            "EntityName": "Christmas in Wonderland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03qhxn_",
            "EntityName": "Perfume"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ywfs",
            "EntityName": "Mr. 3000"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.040_ypz",
            "EntityName": "Sol Goode"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0479qny",
            "EntityName": "Disaster Movie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gbj8",
            "EntityName": "Baywatch: Hawaiian Wedding"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j08hn",
            "EntityName": "Naked Movie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j0wxq",
            "EntityName": "Hot Tamale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j1hm9",
            "EntityName": "30 Days Until I'm Famous"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j2m_x",
            "EntityName": "Whacked!"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04rk7s",
            "EntityName": "Uptown Girls"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.056p3k",
            "EntityName": "Get Over It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05nd09x",
            "EntityName": "Searching for Bobby D"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.066b_n",
            "EntityName": "Cheaper by the Dozen 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.072txz",
            "EntityName": "National Lampoon's Pledge This!"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07h9gp",
            "EntityName": "Scary Movie 4"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07zm5t",
            "EntityName": "The Chosen One: Legend of the Raven"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.080kmxp",
            "EntityName": "Oy Vey! My Son Is Gay!!"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08pqpg",
            "EntityName": "Date Movie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09t10b",
            "EntityName": "American Dreamz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b5mw7",
            "EntityName": "Dirty Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b64qt1",
            "EntityName": "Starstruck"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bh8xz2",
            "EntityName": "Barry Munday"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c02882",
            "EntityName": "American Vampire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cr_bqp",
            "EntityName": "Carmen Electra's Fit to Strip"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crrvj7",
            "EntityName": "Rent Control"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crv9zg",
            "EntityName": "BThere Dvd Magazine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crvchf",
            "EntityName": "We Are Family"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crw06",
            "EntityName": "Monster Island"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d042l",
            "EntityName": "Max Havoc: Curse of the Dragon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d2l2_",
            "EntityName": "My Boss's Daughter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d9z_7",
            "EntityName": "Getting Played"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0sjn",
            "EntityName": "The Mating Habits of the Earthbound Human"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gxsyb5",
            "EntityName": "The Back Nine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h3w444",
            "EntityName": "2-Headed Shark Attack"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h944f1",
            "EntityName": "Mardi Gras: Spring Break"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0tl8nwg",
            "EntityName": "Lap Dance"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0tl8ql6",
            "EntityName": "Book of Fire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0tl8srv",
            "EntityName": "The Axe Boat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0tl8vtw",
            "EntityName": "Lolo's Cafe"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01lbp": "Carmen Electra"
    },
    "qid_topic_entity": {
      "Q185122": "Carmen Electra"
    },
    "index": 293
  },
  {
    "QuestionId": "WebQTest-302",
    "RawQuestion": "what are the official colors of the dallas cowboys?",
    "ProcessedQuestion": "what are the official colors of the dallas cowboys",
    "Parses": [
      {
        "ParseId": "WebQTest-302.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02896)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02896 ns:sports.sports_team.colors ?x .\n}\n",
        "PotentialTopicEntityMention": "dallas cowboys",
        "TopicEntityName": "Dallas Cowboys",
        "TopicEntityMid": "m.02896",
        "InferentialChain": [
          "sports.sports_team.colors"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01g5v",
            "EntityName": "Blue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rnmb",
            "EntityName": "Navy Blue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03vtbc",
            "EntityName": "Silver"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06kqt3",
            "EntityName": "Royal blue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.083jv",
            "EntityName": "White"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02896": "Dallas Cowboys"
    },
    "qid_topic_entity": {
      "Q204862": "Dallas Cowboys"
    },
    "index": 294
  },
  {
    "QuestionId": "WebQTest-323",
    "RawQuestion": "what movies did ron howard director?",
    "ProcessedQuestion": "what movies did ron howard director",
    "Parses": [
      {
        "ParseId": "WebQTest-323.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g2lq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g2lq ns:film.director.film ?x .\n}\n",
        "PotentialTopicEntityMention": "ron howard",
        "TopicEntityName": "Ron Howard",
        "TopicEntityMid": "m.0g2lq",
        "InferentialChain": [
          "film.director.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011yd2",
            "EntityName": "Apollo 13"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0134tnr7",
            "EntityName": "Inferno"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01hw5kk",
            "EntityName": "Willow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01xvjb",
            "EntityName": "Splash"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_1sj",
            "EntityName": "EDtv"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02mh4b",
            "EntityName": "Night Shift"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02t9_q",
            "EntityName": "Backdraft"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vqsll",
            "EntityName": "Frost/Nixon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02yf34",
            "EntityName": "Grand Theft Auto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.034bm_",
            "EntityName": "Far and Away"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03r58n",
            "EntityName": "Cocoon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03xx0x",
            "EntityName": "Ransom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047nfz",
            "EntityName": "Parenthood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ynx7",
            "EntityName": "The Missing"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050gkf",
            "EntityName": "Cinderella Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05h3bcc",
            "EntityName": "The Dark Tower"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065dc4",
            "EntityName": "The Da Vinci Code"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06xz7w",
            "EntityName": "The Paper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09_rkp7",
            "EntityName": "Cotton Candy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09hfyy",
            "EntityName": "Gung Ho"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m6kg",
            "EntityName": "A Beautiful Mind"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c3_662",
            "EntityName": "The Dilemma"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cc5m07",
            "EntityName": "The Lost Symbol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crrc8",
            "EntityName": "Dr. Seuss' How the Grinch Stole Christmas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f4_2k",
            "EntityName": "Angels & Demons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gmdpnm",
            "EntityName": "Presidential Reunion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gy75pd",
            "EntityName": "Rush"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ngnf3x",
            "EntityName": "Jay-Z: Made in America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0xnx1p3",
            "EntityName": "In the Heart of the Sea"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0g2lq": "Ron Howard"
    },
    "qid_topic_entity": {
      "Q103646": "Ron Howard"
    },
    "index": 295
  },
  {
    "QuestionId": "WebQTest-164",
    "RawQuestion": "what did stephen hawking become famous for?",
    "ProcessedQuestion": "what did stephen hawking become famous for",
    "Parses": [
      {
        "ParseId": "WebQTest-164.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01tdnyh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01tdnyh ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "stephen hawking",
        "TopicEntityName": "Stephen Hawking",
        "TopicEntityMid": "m.01tdnyh",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016fly",
            "EntityName": "Professor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h65p0",
            "EntityName": "Astrophysicist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h666v",
            "EntityName": "Science writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03qsdk0",
            "EntityName": "Cosmologist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04s2z",
            "EntityName": "Mathematician"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05snw",
            "EntityName": "Physicist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q2q",
            "EntityName": "Scientist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h9c",
            "EntityName": "Astronomer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kyk",
            "EntityName": "Author"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01tdnyh": "Stephen Hawking"
    },
    "qid_topic_entity": {
      "Q17714": "Stephen Hawking"
    },
    "index": 296
  },
  {
    "QuestionId": "WebQTest-867",
    "RawQuestion": "what else has jennifer lawrence played in?",
    "ProcessedQuestion": "what else has jennifer lawrence played in",
    "Parses": [
      {
        "ParseId": "WebQTest-867.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02x0dzw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02x0dzw ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "jennifer lawrence",
        "TopicEntityName": "Jennifer Lawrence",
        "TopicEntityMid": "m.02x0dzw",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_4654w",
            "EntityName": "X-Men: Apocalypse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010sqq_d",
            "EntityName": "Joy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vm7h8",
            "EntityName": "Not Another High School Show"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cqk46",
            "EntityName": "The Burning Plain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03grp5m",
            "EntityName": "Garden Party"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07cgsg_",
            "EntityName": "Company Town"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.093dqjy",
            "EntityName": "Winter\u2019s Bone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09v71cj",
            "EntityName": "The Beaver"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bg9xm6",
            "EntityName": "The Poker House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cd2vh9",
            "EntityName": "X-Men: First Class"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fpmrlv",
            "EntityName": "Like Crazy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gkz15s",
            "EntityName": "The Hunger Games"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gydg4g",
            "EntityName": "House at the End of the Street"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gyn8bv",
            "EntityName": "Devil You Know"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h95927",
            "EntityName": "Silver Linings Playbook"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n40qmp",
            "EntityName": "The Hunger Games: Catching Fire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ngvsvk",
            "EntityName": "The Hunger Games: Mockingjay, Part 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ngvtb_",
            "EntityName": "The Hunger Games: Mockingjay, Part 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0r3r5jz",
            "EntityName": "X-Men: Days of Future Past"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0r8p2ll",
            "EntityName": "Serena"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ryt9m1",
            "EntityName": "American Hustle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y4y7jj",
            "EntityName": "East of Eden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yvlk0t",
            "EntityName": "Burial Rites"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yvm5dh",
            "EntityName": "The Glass Castle"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02x0dzw": "Jennifer Lawrence"
    },
    "qid_topic_entity": {
      "Q189490": "Jennifer Lawrence"
    },
    "index": 297
  },
  {
    "QuestionId": "WebQTest-240",
    "RawQuestion": "what colleges did albert einstein teach at?",
    "ProcessedQuestion": "what colleges did albert einstein teach at",
    "Parses": [
      {
        "ParseId": "WebQTest-240.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? employeed by university doe not necessarily mean teaching"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jcx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jcx ns:people.person.employment_history ?y .\n?y ns:business.employment_tenure.company ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "albert einstein",
        "TopicEntityName": "Albert Einstein",
        "TopicEntityMid": "m.0jcx",
        "InferentialChain": [
          "people.person.employment_history",
          "business.employment_tenure.company"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0194_r",
            "EntityName": "Institute for Advanced Study"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dyk8",
            "EntityName": "ETH Zurich"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01tpvt",
            "EntityName": "University of Zurich"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09hgk",
            "EntityName": "Charles University in Prague"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0lvng",
            "EntityName": "Leiden University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jcx": "Albert Einstein"
    },
    "qid_topic_entity": {
      "Q937": "Albert Einstein"
    },
    "index": 298
  },
  {
    "QuestionId": "WebQTest-134",
    "RawQuestion": "what type of books did agatha christie wrote?",
    "ProcessedQuestion": "what type of books did agatha christie wrote",
    "Parses": [
      {
        "ParseId": "WebQTest-134.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ldd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ldd ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "agatha christie",
        "TopicEntityName": "Agatha Christie",
        "TopicEntityMid": "m.0ldd",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hv44_",
            "EntityName": "Playwright"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02xhgwq",
            "EntityName": "Novelist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05z96",
            "EntityName": "Poet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dxtg",
            "EntityName": "Screenwriter"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ldd": "Agatha Christie"
    },
    "qid_topic_entity": {
      "Q35064": "Agatha Christie"
    },
    "index": 299
  },
  {
    "QuestionId": "WebQTest-1764",
    "RawQuestion": "where is daud ibrahim?",
    "ProcessedQuestion": "where is daud ibrahim",
    "Parses": [
      {
        "ParseId": "WebQTest-1764.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02ry1s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02ry1s ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n",
        "PotentialTopicEntityMention": "daud ibrahim",
        "TopicEntityName": "Dawood Ibrahim",
        "TopicEntityMid": "m.02ry1s",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.055vr",
            "EntityName": "Maharashtra"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02ry1s": "Dawood Ibrahim"
    },
    "qid_topic_entity": {
      "Q553191": "Dawood Ibrahim"
    },
    "index": 300
  },
  {
    "QuestionId": "WebQTest-1539",
    "RawQuestion": "who is ryan reynolds married to 2012?",
    "ProcessedQuestion": "who is ryan reynolds married to 2012",
    "Parses": [
      {
        "ParseId": "WebQTest-1539.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? the query doesn't really check that the marriage wasn't ended."
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.036hf4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.036hf4 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n?y ns:people.marriage.from ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "ryan reynolds",
        "TopicEntityName": "Ryan Reynolds",
        "TopicEntityMid": "m.036hf4",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "people.marriage.from",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06_bq1",
            "EntityName": "Blake Lively"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.036hf4": "Ryan Reynolds"
    },
    "qid_topic_entity": {
      "Q192682": "Ryan Reynolds"
    },
    "index": 301
  },
  {
    "QuestionId": "WebQTest-1752",
    "RawQuestion": "what did f. scott fitzgerald do?",
    "ProcessedQuestion": "what did f. scott fitzgerald do",
    "Parses": [
      {
        "ParseId": "WebQTest-1752.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02zjd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02zjd ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "f . scott fitzgerald",
        "TopicEntityName": "F. Scott Fitzgerald",
        "TopicEntityMid": "m.02zjd",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02xhgwq",
            "EntityName": "Novelist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05z96",
            "EntityName": "Poet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02zjd": "F. Scott Fitzgerald"
    },
    "qid_topic_entity": {
      "Q93354": "F. Scott Fitzgerald"
    },
    "index": 302
  },
  {
    "QuestionId": "WebQTest-1977",
    "RawQuestion": "where did crabtree go to college?",
    "ProcessedQuestion": "where did crabtree go to college",
    "Parses": [
      {
        "ParseId": "WebQTest-1977.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ccsym)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ccsym ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "crabtree",
        "TopicEntityName": "Michael Crabtree",
        "TopicEntityMid": "m.03ccsym",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01n_g9",
            "EntityName": "Texas Tech University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03ccsym": "Michael Crabtree"
    },
    "qid_topic_entity": {
      "Q2351787": "Michael Crabtree"
    },
    "index": 303
  },
  {
    "QuestionId": "WebQTest-1425",
    "RawQuestion": "what colleges did mitt romney attend?",
    "ProcessedQuestion": "what colleges did mitt romney attend",
    "Parses": [
      {
        "ParseId": "WebQTest-1425.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0271_s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0271_s ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "mitt romney",
        "TopicEntityName": "Mitt Romney",
        "TopicEntityMid": "m.0271_s",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014zws",
            "EntityName": "Harvard Law School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ksy",
            "EntityName": "Harvard University"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06pwq",
            "EntityName": "Stanford University"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kqj1",
            "EntityName": "Harvard Business School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0l2tk",
            "EntityName": "Brigham Young University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0271_s": "Mitt Romney"
    },
    "qid_topic_entity": {
      "Q4496": "Mitt Romney"
    },
    "index": 304
  },
  {
    "QuestionId": "WebQTest-1311",
    "RawQuestion": "what was antoni gaudi inspired by?",
    "ProcessedQuestion": "what was antoni gaudi inspired by",
    "Parses": [
      {
        "ParseId": "WebQTest-1311.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0yb0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0yb0 ns:influence.influence_node.influenced_by ?x .\n}\n",
        "PotentialTopicEntityMention": "antoni gaudi",
        "TopicEntityName": "Antoni Gaud\u00ed",
        "TopicEntityMid": "m.0yb0",
        "InferentialChain": [
          "influence.influence_node.influenced_by"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02mpv",
            "EntityName": "Eug\u00e8ne Viollet-le-Duc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08304",
            "EntityName": "William Morris"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0yb0": "Antoni Gaud\u00ed"
    },
    "qid_topic_entity": {
      "Q25328": "Antoni Gaud\u00ed"
    },
    "index": 305
  },
  {
    "QuestionId": "WebQTest-891",
    "RawQuestion": "who was the leader of the first communist party of china?",
    "ProcessedQuestion": "who was the leader of the first communist party of china",
    "Parses": [
      {
        "ParseId": "WebQTest-891.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02189)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02189 ns:organization.organization.founders ?x .\n}\n",
        "PotentialTopicEntityMention": "communist party of china",
        "TopicEntityName": "Communist Party of China",
        "TopicEntityMid": "m.02189",
        "InferentialChain": [
          "organization.organization.founders"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02d42c",
            "EntityName": "Li Dazhao"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04xzm",
            "EntityName": "Mao Zedong"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dbk8",
            "EntityName": "Zhou Enlai"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n10q",
            "EntityName": "Chen Duxiu"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02189": "Communist Party of China"
    },
    "qid_topic_entity": {
      "Q17427": "Communist Party of China"
    },
    "index": 306
  },
  {
    "QuestionId": "WebQTest-251",
    "RawQuestion": "what type of currency do they use in england?",
    "ProcessedQuestion": "what type of currency do they use in england",
    "Parses": [
      {
        "ParseId": "WebQTest-251.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02jx1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02jx1 ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "england",
        "TopicEntityName": "England",
        "TopicEntityMid": "m.02jx1",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nv4h",
            "EntityName": "Pound sterling"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02jx1": "England"
    },
    "qid_topic_entity": {
      "Q21": "England"
    },
    "index": 307
  },
  {
    "QuestionId": "WebQTest-1975",
    "RawQuestion": "what was the last movie sean connery was in?",
    "ProcessedQuestion": "what was the last movie sean connery was in",
    "Parses": [
      {
        "ParseId": "WebQTest-1975.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mr6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mr6 ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n?x ns:film.film.initial_release_date ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "sean connery",
        "TopicEntityName": "Sean Connery",
        "TopicEntityMid": "m.06mr6",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 1,
          "NodePredicate": "film.film.initial_release_date",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crscdw",
            "EntityName": "Sir Billi"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06mr6": "Sean Connery"
    },
    "qid_topic_entity": {
      "Q4573": "Sean Connery"
    },
    "index": 308
  },
  {
    "QuestionId": "WebQTest-1825",
    "RawQuestion": "what did lincoln steffens wrote?",
    "ProcessedQuestion": "what did lincoln steffens wrote",
    "Parses": [
      {
        "ParseId": "WebQTest-1825.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bw1c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bw1c ns:book.author.works_written ?x .\n}\n",
        "PotentialTopicEntityMention": "lincoln steffens",
        "TopicEntityName": "Lincoln Steffens",
        "TopicEntityMid": "m.01bw1c",
        "InferentialChain": [
          "book.author.works_written"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.068tvkv",
            "EntityName": "Die Geschichte meines Lebens"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.069h7f0",
            "EntityName": "The Shame of the Cities"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06bhsc3",
            "EntityName": "The autobiography of Lincoln Steffens"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06bsl_5",
            "EntityName": "John Reed"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06f67r1",
            "EntityName": "The struggle for self-government"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06gqt1t",
            "EntityName": "Lincoln Steffens speaking"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06lr_pz",
            "EntityName": "The world of Lincoln Steffens"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mv_gp",
            "EntityName": "Into Mexico and out"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06t_tbs",
            "EntityName": "Moses in red"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06tdgyp",
            "EntityName": "The Least Of These"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06vgjfz",
            "EntityName": "Upbuilders"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1xh9z",
            "EntityName": "Boy on horseback"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0l6bpv3",
            "EntityName": "The Old Jim Horse"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01bw1c": "Lincoln Steffens"
    },
    "qid_topic_entity": {
      "Q1825813": "Lincoln Steffens"
    },
    "index": 309
  },
  {
    "QuestionId": "WebQTest-1114",
    "RawQuestion": "what countries makes up the uk?",
    "ProcessedQuestion": "what countries makes up the uk",
    "Parses": [
      {
        "ParseId": "WebQTest-1114.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ssc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ssc ns:base.aareas.schema.administrative_area.administrative_children ?x .\n?x ns:base.aareas.schema.administrative_area.administrative_area_type ns:m.0hzjlmp .\n}\n",
        "PotentialTopicEntityMention": "uk",
        "TopicEntityName": "United Kingdom",
        "TopicEntityMid": "m.07ssc",
        "InferentialChain": [
          "base.aareas.schema.administrative_area.administrative_children"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0hzjlmp",
            "EntityName": "UK constituent country",
            "SourceNodeIndex": 0,
            "NodePredicate": "base.aareas.schema.administrative_area.administrative_area_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jx1",
            "EntityName": "England"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bcl",
            "EntityName": "Northern Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q1r",
            "EntityName": "Scotland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5g9",
            "EntityName": "Wales"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07ssc": "United Kingdom"
    },
    "qid_topic_entity": {
      "Q145": "United Kingdom"
    },
    "index": 310
  },
  {
    "QuestionId": "WebQTest-1629",
    "RawQuestion": "what currency does dominican republic take?",
    "ProcessedQuestion": "what currency does dominican republic take",
    "Parses": [
      {
        "ParseId": "WebQTest-1629.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027rn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027rn ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "dominican republic",
        "TopicEntityName": "Dominican Republic",
        "TopicEntityMid": "m.027rn",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lt7_",
            "EntityName": "Dominican peso"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.027rn": "Dominican Republic"
    },
    "qid_topic_entity": {
      "Q786": "Dominican Republic"
    },
    "index": 311
  },
  {
    "QuestionId": "WebQTest-624",
    "RawQuestion": "who plays elena gilbert on vampire diaries?",
    "ProcessedQuestion": "who plays elena gilbert on vampire diaries",
    "Parses": [
      {
        "ParseId": "WebQTest-624.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0790rw8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0790rw8 ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.series ns:m.05sy2k_ .\n}\n",
        "PotentialTopicEntityMention": "elena gilbert",
        "TopicEntityName": "Elena Gilbert",
        "TopicEntityMid": "m.0790rw8",
        "InferentialChain": [
          "tv.tv_character.appeared_in_tv_program",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.05sy2k_",
            "EntityName": "The Vampire Diaries",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.series",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027nwk2",
            "EntityName": "Nina Dobrev"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0790rw8": "Elena Gilbert"
    },
    "qid_topic_entity": {
      "Q908634": "Elena Gilbert"
    },
    "index": 312
  },
  {
    "QuestionId": "WebQTest-1691",
    "RawQuestion": "what is houston timezone?",
    "ProcessedQuestion": "what is houston timezone",
    "Parses": [
      {
        "ParseId": "WebQTest-1691.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03l2n)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03l2n ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "houston",
        "TopicEntityName": "Houston",
        "TopicEntityMid": "m.03l2n",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02fqwt",
            "EntityName": "Central Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03l2n": "Houston"
    },
    "qid_topic_entity": {
      "Q16555": "Houston"
    },
    "index": 313
  },
  {
    "QuestionId": "WebQTest-833",
    "RawQuestion": "what is the main language used in china?",
    "ProcessedQuestion": "what is the main language used in china",
    "Parses": [
      {
        "ParseId": "WebQTest-833.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d05w3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d05w3 ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "china",
        "TopicEntityName": "China",
        "TopicEntityMid": "m.0d05w3",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0653m",
            "EntityName": "Standard Chinese"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d05w3": "China"
    },
    "qid_topic_entity": {
      "Q148": "China"
    },
    "index": 314
  },
  {
    "QuestionId": "WebQTest-1507",
    "RawQuestion": "who was kate chopin?",
    "ProcessedQuestion": "who was kate chopin",
    "Parses": [
      {
        "ParseId": "WebQTest-1507.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d8pw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d8pw ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "kate chopin",
        "TopicEntityName": "Kate Chopin",
        "TopicEntityMid": "m.0d8pw",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012t_z",
            "EntityName": "Businessperson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02xhgwq",
            "EntityName": "Novelist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kyk",
            "EntityName": "Author"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d8pw": "Kate Chopin"
    },
    "qid_topic_entity": {
      "Q230476": "Kate Chopin"
    },
    "index": 315
  },
  {
    "QuestionId": "WebQTest-691",
    "RawQuestion": "what school did miley cyrus?",
    "ProcessedQuestion": "what school did miley cyrus",
    "Parses": [
      {
        "ParseId": "WebQTest-691.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bdxs5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bdxs5 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "miley cyrus",
        "TopicEntityName": "Miley Cyrus",
        "TopicEntityMid": "m.0bdxs5",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d_s7d",
            "EntityName": "Heritage Elementary School"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0bdxs5": "Miley Cyrus"
    },
    "qid_topic_entity": {
      "Q4235": "Miley Cyrus"
    },
    "index": 316
  },
  {
    "QuestionId": "WebQTest-755",
    "RawQuestion": "what was bonnie prince charlie full name?",
    "ProcessedQuestion": "what was bonnie prince charlie full name",
    "Parses": [
      {
        "ParseId": "WebQTest-755.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fssd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fssd ns:fictional_universe.person_in_fiction.representations_in_fiction ?x .\n}\n",
        "PotentialTopicEntityMention": "bonnie prince",
        "TopicEntityName": "Charles Edward Stuart",
        "TopicEntityMid": "m.0fssd",
        "InferentialChain": [
          "fictional_universe.person_in_fiction.representations_in_fiction"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0q2445b",
            "EntityName": "Charles Edward Stuart"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0fssd": "Charles Edward Stuart"
    },
    "qid_topic_entity": {
      "Q312581": "Charles Edward Stuart"
    },
    "index": 317
  },
  {
    "QuestionId": "WebQTest-154",
    "RawQuestion": "what instruments did louis armstrong play?",
    "ProcessedQuestion": "what instruments did louis armstrong play",
    "Parses": [
      {
        "ParseId": "WebQTest-154.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04n32)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04n32 ns:music.group_member.instruments_played ?x .\n}\n",
        "PotentialTopicEntityMention": "louis armstrong",
        "TopicEntityName": "Louis Armstrong",
        "TopicEntityMid": "m.04n32",
        "InferentialChain": [
          "music.group_member.instruments_played"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020w2",
            "EntityName": "Cornet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07gql",
            "EntityName": "Trumpet"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04n32": "Louis Armstrong"
    },
    "qid_topic_entity": {
      "Q1779": "Louis Armstrong"
    },
    "index": 318
  },
  {
    "QuestionId": "WebQTest-1819",
    "RawQuestion": "what religion does canada follow?",
    "ProcessedQuestion": "what religion does canada follow",
    "Parses": [
      {
        "ParseId": "WebQTest-1819.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d060g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d060g ns:location.statistical_region.religions ?y .\n?y ns:location.religion_percentage.religion ?x .\n}\n",
        "PotentialTopicEntityMention": "canada",
        "TopicEntityName": "Canada",
        "TopicEntityMid": "m.0d060g",
        "InferentialChain": [
          "location.statistical_region.religions",
          "location.religion_percentage.religion"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05sfs",
            "EntityName": "Protestantism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c8wxp",
            "EntityName": "Catholicism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0flw86",
            "EntityName": "Islam"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d060g": "Canada"
    },
    "qid_topic_entity": {
      "Q16": "Canada"
    },
    "index": 319
  },
  {
    "QuestionId": "WebQTest-33",
    "RawQuestion": "what timezone is sweden?",
    "ProcessedQuestion": "what timezone is sweden",
    "Parses": [
      {
        "ParseId": "WebQTest-33.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d0vqn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d0vqn ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "sweden",
        "TopicEntityName": "Sweden",
        "TopicEntityMid": "m.0d0vqn",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02llzg",
            "EntityName": "Central European Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d0vqn": "Sweden"
    },
    "qid_topic_entity": {
      "Q34": "Sweden"
    },
    "index": 320
  },
  {
    "QuestionId": "WebQTest-581",
    "RawQuestion": "where was anne boleyn executed?",
    "ProcessedQuestion": "where was anne boleyn executed",
    "Parses": [
      {
        "ParseId": "WebQTest-581.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09sxn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09sxn ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "anne boleyn",
        "TopicEntityName": "Anne Boleyn",
        "TopicEntityMid": "m.09sxn",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nqn",
            "EntityName": "Tower of London"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09sxn": "Anne Boleyn"
    },
    "qid_topic_entity": {
      "Q80823": "Anne Boleyn"
    },
    "index": 321
  },
  {
    "QuestionId": "WebQTest-723",
    "RawQuestion": "what is there to see in sydney australia?",
    "ProcessedQuestion": "what is there to see in sydney australia",
    "Parses": [
      {
        "ParseId": "WebQTest-723.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06y57)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06y57 ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "sydney australia",
        "TopicEntityName": "Sydney",
        "TopicEntityMid": "m.06y57",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_ymvs4",
            "EntityName": "Oatley Park, New South Wales"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01rfyc",
            "EntityName": "Port Jackson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01xlnqr",
            "EntityName": "Rose Seidler House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020772",
            "EntityName": "Bondi Beach"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0261k3j",
            "EntityName": "Wild Life Sydney"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kwln",
            "EntityName": "Sydney Film Festival"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q0lr",
            "EntityName": "The Rocks"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x0jgm",
            "EntityName": "Sydney Markets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x7mq",
            "EntityName": "Powerhouse Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.040sd3",
            "EntityName": "Luna Park Sydney"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04dxfg",
            "EntityName": "City2Surf"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05115h",
            "EntityName": "St Mary's Cathedral, Sydney"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06_nm",
            "EntityName": "Sydney Opera House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0701q",
            "EntityName": "Sydney Harbour Bridge"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b8fsx",
            "EntityName": "North Head Quarantine Station"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cj82q",
            "EntityName": "Hillsong Church"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hddw",
            "EntityName": "Darling Harbour"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j2r2w2",
            "EntityName": "Australian National Maritime Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j65cht",
            "EntityName": "Featherdale Wildlife Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pnrn",
            "EntityName": "Kamay Botany Bay National Park"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06y57": "Sydney"
    },
    "qid_topic_entity": {
      "Q3130": "Sydney"
    },
    "index": 322
  },
  {
    "QuestionId": "WebQTest-1818",
    "RawQuestion": "what state is saint louis university in?",
    "ProcessedQuestion": "what state is saint louis university in",
    "Parses": [
      {
        "ParseId": "WebQTest-1818.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02tz9z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02tz9z ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpys4 .\n}\n",
        "PotentialTopicEntityMention": "saint louis university",
        "TopicEntityName": "Saint Louis University",
        "TopicEntityMid": "m.02tz9z",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpys4",
            "EntityName": "US State",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ych",
            "EntityName": "Missouri"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1818.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02tz9z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02tz9z ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.state_province_region ?x .\n}\n",
        "PotentialTopicEntityMention": "saint louis university",
        "TopicEntityName": "Saint Louis University",
        "TopicEntityMid": "m.02tz9z",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.state_province_region"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ych",
            "EntityName": "Missouri"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02tz9z": "Saint Louis University"
    },
    "qid_topic_entity": {
      "Q734774": "Saint Louis University"
    },
    "index": 323
  },
  {
    "QuestionId": "WebQTest-953",
    "RawQuestion": "where is kansas city?",
    "ProcessedQuestion": "where is kansas city",
    "Parses": [
      {
        "ParseId": "WebQTest-953.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04f_d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04f_d ns:location.hud_county_place.county ?x .\n}\n",
        "PotentialTopicEntityMention": "kansas city",
        "TopicEntityName": "Kansas City",
        "TopicEntityMid": "m.04f_d",
        "InferentialChain": [
          "location.hud_county_place.county"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ndpz",
            "EntityName": "Platte County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04f_d": "Kansas City"
    },
    "qid_topic_entity": {
      "Q41819": "Kansas City"
    },
    "index": 324
  },
  {
    "QuestionId": "WebQTest-335",
    "RawQuestion": "what type of money to take to cuba?",
    "ProcessedQuestion": "what type of money to take to cuba",
    "Parses": [
      {
        "ParseId": "WebQTest-335.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d04z6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d04z6 ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "cuba",
        "TopicEntityName": "Cuba",
        "TopicEntityMid": "m.0d04z6",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.049p2z",
            "EntityName": "Cuban peso"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.049p6c",
            "EntityName": "Cuban convertible peso"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d04z6": "Cuba"
    },
    "qid_topic_entity": {
      "Q241": "Cuba"
    },
    "index": 325
  },
  {
    "QuestionId": "WebQTest-1152",
    "RawQuestion": "who is the voice of kitt?",
    "ProcessedQuestion": "who is the voice of kitt",
    "Parses": [
      {
        "ParseId": "WebQTest-1152.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05_bhx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05_bhx ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.special_performance_type ns:m.02nsjvf .\n}\n",
        "PotentialTopicEntityMention": "kitt",
        "TopicEntityName": "KITT",
        "TopicEntityMid": "m.05_bhx",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02nsjvf",
            "EntityName": "Voice",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.special_performance_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0309r1",
            "EntityName": "William Daniels"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05_bhx": "KITT"
    },
    "qid_topic_entity": {
      "Q1088996": "KITT"
    },
    "index": 326
  },
  {
    "QuestionId": "WebQTest-1209",
    "RawQuestion": "when does ziva start on ncis?",
    "ProcessedQuestion": "when does ziva start on ncis",
    "Parses": [
      {
        "ParseId": "WebQTest-1209.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03m8sg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03m8sg ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.seasons ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.093xn8 .\n?x ns:tv.tv_series_season.from ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "PotentialTopicEntityMention": "ncis",
        "TopicEntityName": "NCIS",
        "TopicEntityMid": "m.03m8sg",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.seasons"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.093xn8",
            "EntityName": "Mossad Agent Ziva David",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": {
          "SortOrder": "Ascending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 1,
          "NodePredicate": "tv.tv_series_season.from",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05df6zw",
            "EntityName": "NCIS - Season 3"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03m8sg": "NCIS"
    },
    "qid_topic_entity": {
      "Q4525": "NCIS"
    },
    "index": 327
  },
  {
    "QuestionId": "WebQTest-1739",
    "RawQuestion": "who is the voice of eric cartman on south park?",
    "ProcessedQuestion": "who is the voice of eric cartman on south park",
    "Parses": [
      {
        "ParseId": "WebQTest-1739.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06y_n)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06y_n ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.0myj0 .\n?y ns:tv.regular_tv_appearance.special_performance_type ns:m.02nsjvf .\n}\n",
        "PotentialTopicEntityMention": "south park",
        "TopicEntityName": "South Park",
        "TopicEntityMid": "m.06y_n",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0myj0",
            "EntityName": "Eric Cartman",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.character",
            "ValueType": "String"
          },
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02nsjvf",
            "EntityName": "Voice",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.special_performance_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_x6v",
            "EntityName": "Trey Parker"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06y_n": "South Park"
    },
    "qid_topic_entity": {
      "Q16538": "South Park"
    },
    "index": 328
  },
  {
    "QuestionId": "WebQTest-538",
    "RawQuestion": "what are all the movies taylor swift has been in?",
    "ProcessedQuestion": "what are all the movies taylor swift has been in",
    "Parses": [
      {
        "ParseId": "WebQTest-538.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dl567)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dl567 ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "taylor swift",
        "TopicEntityName": "Taylor Swift",
        "TopicEntityMid": "m.0dl567",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x3lt7",
            "EntityName": "Hannah Montana: The Movie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06_wqk4",
            "EntityName": "Valentine's Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.087wc7n",
            "EntityName": "The Lorax"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0djb8hx",
            "EntityName": "Jonas Brothers: The Concert Experience"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dx5q8",
            "EntityName": "The Giver"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0dl567": "Taylor Swift"
    },
    "qid_topic_entity": {
      "Q112865783": "Taylor Swift"
    },
    "index": 329
  },
  {
    "QuestionId": "WebQTest-1110",
    "RawQuestion": "where was john jay born?",
    "ProcessedQuestion": "where was john jay born",
    "Parses": [
      {
        "ParseId": "WebQTest-1110.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.046cp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.046cp ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "john jay",
        "TopicEntityName": "John Jay",
        "TopicEntityMid": "m.046cp",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_286",
            "EntityName": "New York City"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.046cp": "John Jay"
    },
    "qid_topic_entity": {
      "Q310847": "John Jay"
    },
    "index": 330
  },
  {
    "QuestionId": "WebQTest-39",
    "RawQuestion": "who is niall ferguson's wife?",
    "ProcessedQuestion": "who is niall ferguson 's wife",
    "Parses": [
      {
        "ParseId": "WebQTest-39.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.033mkn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.033mkn ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\nFILTER(NOT EXISTS {?y ns:people.marriage.from ?sk0} || \nEXISTS {?y ns:people.marriage.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to ?sk2} || \nEXISTS {?y ns:people.marriage.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "niall ferguson",
        "TopicEntityName": "Niall Ferguson",
        "TopicEntityMid": "m.033mkn",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03k5sq",
            "EntityName": "Ayaan Hirsi Ali"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.033mkn": "Niall Ferguson"
    },
    "qid_topic_entity": {
      "Q377638": "Niall Ferguson"
    },
    "index": 331
  },
  {
    "QuestionId": "WebQTest-1285",
    "RawQuestion": "what city is mt lassen in?",
    "ProcessedQuestion": "what city is mt lassen in",
    "Parses": [
      {
        "ParseId": "WebQTest-1285.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? There is no city that this mountain is contained by. Only county."
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ymq1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ymq1 ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "mt lassen",
        "TopicEntityName": "Lassen Peak",
        "TopicEntityMid": "m.01ymq1",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01n7q",
            "EntityName": "California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01ymnm",
            "EntityName": "Lassen Volcanic National Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059g4",
            "EntityName": "North America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k3nk",
            "EntityName": "Cascade Range"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0l30v",
            "EntityName": "Shasta County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01ymq1": "Lassen Peak"
    },
    "qid_topic_entity": {
      "Q859354": "Lassen Peak"
    },
    "index": 332
  },
  {
    "QuestionId": "WebQTest-28",
    "RawQuestion": "what electorate does anna bligh represent?",
    "ProcessedQuestion": "what electorate does anna bligh represent",
    "Parses": [
      {
        "ParseId": "WebQTest-28.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.072_m3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.072_m3 ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.district_represented ?x .\n}\n",
        "PotentialTopicEntityMention": "anna bligh",
        "TopicEntityName": "Anna Bligh",
        "TopicEntityMid": "m.072_m3",
        "InferentialChain": [
          "government.politician.government_positions_held",
          "government.government_position_held.district_represented"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026q11g",
            "EntityName": "Electoral district of South Brisbane"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.072_m3": "Anna Bligh"
    },
    "qid_topic_entity": {
      "Q466482": "Anna Bligh"
    },
    "index": 333
  },
  {
    "QuestionId": "WebQTest-2028",
    "RawQuestion": "who is the current leader of france 2010?",
    "ProcessedQuestion": "who is the current leader of france 2010",
    "Parses": [
      {
        "ParseId": "WebQTest-2028.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "current"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f8l9c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f8l9c ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.060c4 .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2010-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2010-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "france",
        "TopicEntityName": "France",
        "TopicEntityMid": "m.0f8l9c",
        "InferentialChain": [
          "government.governmental_jurisdiction.governing_officials",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.060c4",
            "EntityName": "President",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.basic_title",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2010-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2010-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2010-01-01",
          "End": "2010-12-31",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": "2010"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ps9k",
            "EntityName": "Nicolas Sarkozy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f8l9c": "France"
    },
    "qid_topic_entity": {
      "Q142": "France"
    },
    "index": 334
  },
  {
    "QuestionId": "WebQTest-1485",
    "RawQuestion": "what is the currency in turkey called?",
    "ProcessedQuestion": "what is the currency in turkey called",
    "Parses": [
      {
        "ParseId": "WebQTest-1485.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01znc_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01znc_ ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "turkey",
        "TopicEntityName": "Turkey",
        "TopicEntityMid": "m.01znc_",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04dq0w",
            "EntityName": "Turkish lira"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01znc_": "Turkey"
    },
    "qid_topic_entity": {
      "Q43": "Turkey"
    },
    "index": 335
  },
  {
    "QuestionId": "WebQTest-1060",
    "RawQuestion": "what is the currency in italy?",
    "ProcessedQuestion": "what is the currency in italy",
    "Parses": [
      {
        "ParseId": "WebQTest-1060.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03rjj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03rjj ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "italy",
        "TopicEntityName": "Italy",
        "TopicEntityMid": "m.03rjj",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02l6h",
            "EntityName": "Euro"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03rjj": "Italy"
    },
    "qid_topic_entity": {
      "Q38": "Italy"
    },
    "index": 336
  },
  {
    "QuestionId": "WebQTest-749",
    "RawQuestion": "who was president in 1988 in the united states?",
    "ProcessedQuestion": "who was president in 1988 in the united states",
    "Parses": [
      {
        "ParseId": "WebQTest-749.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.060d2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.060d2 ns:government.government_office_or_title.office_holders ?y .\n?y ns:government.government_position_held.office_holder ?x .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"1988-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"1988-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "president",
        "TopicEntityName": "President of the United States",
        "TopicEntityMid": "m.060d2",
        "InferentialChain": [
          "government.government_office_or_title.office_holders",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "1988-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "1988-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "1988-01-01",
          "End": "1988-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "1988"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06c0j",
            "EntityName": "Ronald Reagan"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.060d2": "President of the United States"
    },
    "qid_topic_entity": {
      "Q11696": "President of the United States"
    },
    "index": 337
  },
  {
    "QuestionId": "WebQTest-1256",
    "RawQuestion": "who did terrell owens play for in 2010?",
    "ProcessedQuestion": "who did terrell owens play for in 2010",
    "Parses": [
      {
        "ParseId": "WebQTest-1256.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027ddp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027ddp ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2010-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2010-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "terrell owens",
        "TopicEntityName": "Terrell Owens",
        "TopicEntityMid": "m.027ddp",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2010-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2010-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2010-01-01",
          "End": "2010-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "2010"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01c_d",
            "EntityName": "Buffalo Bills"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01y49",
            "EntityName": "Cincinnati Bengals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.068tx8",
            "EntityName": "Texas Revolution"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.027ddp": "Terrell Owens"
    },
    "qid_topic_entity": {
      "Q1395269": "Terrell Owens"
    },
    "index": 338
  },
  {
    "QuestionId": "WebQTest-1724",
    "RawQuestion": "when did arsenal won the league?",
    "ProcessedQuestion": "when did arsenal won the league",
    "Parses": [
      {
        "ParseId": "WebQTest-1724.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0xbm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0xbm ns:sports.sports_award_winner.awards ?y .\n?y ns:sports.sports_award.season ?x .\n?y ns:sports.sports_award.award ns:m.02_p0 .\n}\n",
        "PotentialTopicEntityMention": "arsenal",
        "TopicEntityName": "Arsenal F.C.",
        "TopicEntityMid": "m.0xbm",
        "InferentialChain": [
          "sports.sports_award_winner.awards",
          "sports.sports_award.season"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02_p0",
            "EntityName": "FA Cup",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_award.award",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ntmq0",
            "EntityName": "2004\u201305 FA Cup"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03qp0n6",
            "EntityName": "1992\u201393 FA Cup"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wbzvj",
            "EntityName": "2002\u201303 FA Cup"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wcjy2",
            "EntityName": "2001\u201302 FA Cup"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wcr3x",
            "EntityName": "1997\u201398 FA Cup"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gjljy",
            "EntityName": "1978\u201379 FA Cup"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jjvq6",
            "EntityName": "1970\u201371 FA Cup"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0vptrcs",
            "EntityName": "2013\u201314 FA Cup"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0xbm": "Arsenal F.C."
    },
    "qid_topic_entity": {
      "Q9617": "Arsenal F.C."
    },
    "index": 339
  },
  {
    "QuestionId": "WebQTest-241",
    "RawQuestion": "who plays the voice of brian on family guy?",
    "ProcessedQuestion": "who plays the voice of brian on family guy",
    "Parses": [
      {
        "ParseId": "WebQTest-241.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019nnl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019nnl ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.03pcvr .\n}\n",
        "PotentialTopicEntityMention": "family guy",
        "TopicEntityName": "Family Guy",
        "TopicEntityMid": "m.019nnl",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.03pcvr",
            "EntityName": "Brian Griffin",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.021yw7",
            "EntityName": "Seth MacFarlane"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.019nnl": "Family Guy"
    },
    "qid_topic_entity": {
      "Q5930": "Family Guy"
    },
    "index": 340
  },
  {
    "QuestionId": "WebQTest-1838",
    "RawQuestion": "what sports are popular in germany?",
    "ProcessedQuestion": "what sports are popular in germany",
    "Parses": [
      {
        "ParseId": "WebQTest-1838.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0345h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0345h ns:sports.sports_team_location.teams ?x .\n}\n",
        "PotentialTopicEntityMention": "germany",
        "TopicEntityName": "Germany",
        "TopicEntityMid": "m.0345h",
        "InferentialChain": [
          "sports.sports_team_location.teams"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01l3wr",
            "EntityName": "Germany national football team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025t26l",
            "EntityName": "Germany national cricket team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025wfyk",
            "EntityName": "Germany national handball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0260p73",
            "EntityName": "Germany women's national field hockey team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026f3ys",
            "EntityName": "Germany women's national volleyball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026pb10",
            "EntityName": "Germany national beach handball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026pr2_",
            "EntityName": "Germany women's national beach handball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026t7lw",
            "EntityName": "Germany women's national handball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pnhdq",
            "EntityName": "Germany Davis Cup team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r4j0b",
            "EntityName": "Germany Fed Cup team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z6g34",
            "EntityName": "Germany women's national rugby union team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.030rdb",
            "EntityName": "Germany women's national football team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c38d5",
            "EntityName": "Germany men's national volleyball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03d1r7t",
            "EntityName": "Germany national korfball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m3xhy",
            "EntityName": "Germany national rugby league team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03sx6f",
            "EntityName": "German National Ice Hockey Team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0414tdm",
            "EntityName": "Germany national baseball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.043rstb",
            "EntityName": "Germany national badminton team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047nfps",
            "EntityName": "Germany national American football team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04cxm_7",
            "EntityName": "Germany men's national inline hockey team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gk22b",
            "EntityName": "Germany national beach soccer team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jd6b6",
            "EntityName": "Germany men's national water polo team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jgf73",
            "EntityName": "Germany women's national basketball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04mx1yr",
            "EntityName": "Germany national speedway team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04q8nzj",
            "EntityName": "Germany men's national pitch and putt team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.053gfcl",
            "EntityName": "Germany women's national under-18 ice hockey team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05c03j9",
            "EntityName": "Germany national rugby union team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05prqw",
            "EntityName": "Germany women's national ice hockey team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y3b4",
            "EntityName": "Germany national basketball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ldyjt",
            "EntityName": "Germany U20 women's volleyball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bs6dhl",
            "EntityName": "FC Bayern Munich"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0by0kb9",
            "EntityName": "BG G\u00f6ttingen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cksc_",
            "EntityName": "Alba Berlin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cvc05",
            "EntityName": "Germany national rugby union team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dt889",
            "EntityName": "Brose Baskets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h167w",
            "EntityName": "Germany men's national field hockey team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h407v",
            "EntityName": "Telekom Baskets Bonn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h408w",
            "EntityName": "Skyliners Frankfurt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h40db",
            "EntityName": "K\u00f6ln 99ers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h40f0",
            "EntityName": "Bayer Giants Leverkusen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h40k4",
            "EntityName": "EWE Baskets Oldenburg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h40lj",
            "EntityName": "QTSV Quackenbr\u00fcck"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0345h": "Germany"
    },
    "qid_topic_entity": {
      "Q183": "Germany"
    },
    "index": 341
  },
  {
    "QuestionId": "WebQTest-210",
    "RawQuestion": "where is tyrese gibson from?",
    "ProcessedQuestion": "where is tyrese gibson from",
    "Parses": [
      {
        "ParseId": "WebQTest-210.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01l1b90)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01l1b90 ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "tyrese gibson",
        "TopicEntityName": "Tyrese Gibson",
        "TopicEntityMid": "m.01l1b90",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027sp2",
            "EntityName": "Watts"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01l1b90": "Tyrese Gibson"
    },
    "qid_topic_entity": {
      "Q311232": "Tyrese Gibson"
    },
    "index": 342
  },
  {
    "QuestionId": "WebQTest-991",
    "RawQuestion": "who played donna on west wing?",
    "ProcessedQuestion": "who played donna on west wing",
    "Parses": [
      {
        "ParseId": "WebQTest-991.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kvknw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kvknw ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.series ns:m.0g60z .\n}\n",
        "PotentialTopicEntityMention": "donna",
        "TopicEntityName": "Donnatella Moss",
        "TopicEntityMid": "m.02kvknw",
        "InferentialChain": [
          "tv.tv_character.appeared_in_tv_program",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0g60z",
            "EntityName": "The West Wing",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.series",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.040t74",
            "EntityName": "Janel Moloney"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02kvknw": "Donnatella Moss"
    },
    "qid_topic_entity": {
      "Q3036775": "Donnatella Moss"
    },
    "index": 343
  },
  {
    "QuestionId": "WebQTest-1291",
    "RawQuestion": "how many kids were there in the kennedy family?",
    "ProcessedQuestion": "how many kids were there in the kennedy family",
    "Parses": [
      {
        "ParseId": "WebQTest-1291.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01qlg1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01qlg1 ns:people.person.children ?x .\n}\n",
        "PotentialTopicEntityMention": "kennedy family",
        "TopicEntityName": "Joseph P. Kennedy, Sr.",
        "TopicEntityMid": "m.01qlg1",
        "InferentialChain": [
          "people.person.children"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0194xc",
            "EntityName": "Ted Kennedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01kyns",
            "EntityName": "Rosemary Kennedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020t1x",
            "EntityName": "Joseph P. Kennedy, Jr."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028qh_",
            "EntityName": "Jean Kennedy Smith"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f1nm",
            "EntityName": "Kathleen Cavendish"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f1qs",
            "EntityName": "Patricia Kennedy Lawford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06hx2",
            "EntityName": "Robert F. Kennedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bt9c",
            "EntityName": "Eunice Kennedy Shriver"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d3k14",
            "EntityName": "John F. Kennedy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01qlg1": "Joseph P. Kennedy, Sr."
    },
    "qid_topic_entity": {
      "Q313696": "Joseph P. Kennedy, Sr."
    },
    "index": 344
  },
  {
    "QuestionId": "WebQTest-1324",
    "RawQuestion": "what college did john nash go to?",
    "ProcessedQuestion": "what college did john nash go to",
    "Parses": [
      {
        "ParseId": "WebQTest-1324.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0pyqh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0pyqh ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "john nash",
        "TopicEntityName": "John Forbes Nash, Jr.",
        "TopicEntityMid": "m.0pyqh",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01q2sk",
            "EntityName": "Carnegie Mellon College of Engineering"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zl0",
            "EntityName": "Princeton University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0pyqh": "John Forbes Nash, Jr."
    },
    "qid_topic_entity": {
      "Q128736": "John Forbes Nash, Jr."
    },
    "index": 345
  },
  {
    "QuestionId": "WebQTest-390",
    "RawQuestion": "when was the last time the toronto maple leafs were in the stanley cup finals?",
    "ProcessedQuestion": "when was the last time the toronto maple leafs were in the stanley cup finals",
    "Parses": [
      {
        "ParseId": "WebQTest-390.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: Done.  The original SPARQL is correct, but results in no answer due to incomplete data in Freebase.  Here is another path.. Original comment: !Manual AnswerAndPartialSparql. Comment: F Union. Partial comment: I cannot get the SPARQL query to work correctly with the DB. The below query should get the date? perhaps DB is not correct for old stanley cups?. Original comment: F union"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n  ?x ns:sports.sports_championship_event.championship ns:m.0hn79\n  {\n    ?x ns:sports.sports_championship_event.champion ns:m.0j6tr . # Toronto Maple Leafs\n  }\n  UNION\n  {\n    ?x ns:sports.sports_championship_event.runner_up ns:m.0j6tr . # Toronto Maple Leafs\n  }\n  ?x ns:time.event.start_date ?st .\n}\nORDER BY DESC(xsd:datetime(?st))\nLIMIT 1",
        "PotentialTopicEntityMention": "stanley cup finals",
        "TopicEntityName": "Stanley Cup Finals",
        "TopicEntityMid": "m.0cc8tt9",
        "InferentialChain": [
          "time.recurring_event.instances"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03by199",
            "EntityName": "1967 Stanley Cup Finals"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0cc8tt9": "Stanley Cup Finals"
    },
    "qid_topic_entity": {
      "Q7599548": "Stanley Cup Finals"
    },
    "index": 346
  },
  {
    "QuestionId": "WebQTest-1398",
    "RawQuestion": "what movies did joan crawford play in?",
    "ProcessedQuestion": "what movies did joan crawford play in",
    "Parses": [
      {
        "ParseId": "WebQTest-1398.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cgbf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cgbf ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "joan crawford",
        "TopicEntityName": "Joan Crawford",
        "TopicEntityMid": "m.0cgbf",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01937g",
            "EntityName": "Possessed"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019l8m",
            "EntityName": "Sudden Fear"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026v_q1",
            "EntityName": "Humoresque"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027_q_t",
            "EntityName": "Possessed"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0270fg0",
            "EntityName": "Harriet Craig"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0270xln",
            "EntityName": "Susan and God"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02710m8",
            "EntityName": "The Women"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027qqvj",
            "EntityName": "The Stolen Jools"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pwvzg",
            "EntityName": "Spring Fever"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qvt4z",
            "EntityName": "Sally, Irene and Mary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qvv1h",
            "EntityName": "Across to Singapore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r92ps",
            "EntityName": "This Woman Is Dangerous"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r9t_k",
            "EntityName": "Pretty Ladies"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r9tvd",
            "EntityName": "Old Clothes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rbh2y",
            "EntityName": "Tramp, Tramp, Tramp"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rc9rv",
            "EntityName": "The Boob"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rfb5l",
            "EntityName": "The Taxi Dancer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rfb8b",
            "EntityName": "Winners of the Wilderness"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rfbbd",
            "EntityName": "The Understanding Heart"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rfbd3",
            "EntityName": "Twelve Miles Out"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rgkfq",
            "EntityName": "The Law of the Range"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rgkjt",
            "EntityName": "West Point"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rhtrl",
            "EntityName": "Four Walls"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rj1n2",
            "EntityName": "Dream of Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rj2mq",
            "EntityName": "The Duke Steps Out"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rj2z0",
            "EntityName": "Our Modern Maidens"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rjdrw",
            "EntityName": "Montana Moon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rjffj",
            "EntityName": "Our Blushing Brides"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rjfz0",
            "EntityName": "Paid"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rjtbf",
            "EntityName": "Dance, Fools, Dance"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rjv0t",
            "EntityName": "This Modern Age"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rkx49",
            "EntityName": "Laughing Sinners"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rkxqw",
            "EntityName": "Letty Lynton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rkz1j",
            "EntityName": "Today We Live"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rl6rf",
            "EntityName": "Chained"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rl6vw",
            "EntityName": "Forsaking All Others"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rl6ym",
            "EntityName": "No More Ladies"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rl75j",
            "EntityName": "I Live My Life"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rlnc6",
            "EntityName": "The Bride Wore Red"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rlw5h",
            "EntityName": "The Shining Hour"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rlw9m",
            "EntityName": "Mannequin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rm8lx",
            "EntityName": "The Ice Follies of 1939"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rm8yk",
            "EntityName": "Strange Cargo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rm98x",
            "EntityName": "A Woman's Face"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rmlkd",
            "EntityName": "When Ladies Meet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rmlwq",
            "EntityName": "They All Kissed the Bride"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rnd1v",
            "EntityName": "Reunion in France"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rndbf",
            "EntityName": "Above Suspicion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rndrh",
            "EntityName": "Female on the Beach"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rp425",
            "EntityName": "Goodbye, My Fancy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rp5tx",
            "EntityName": "The Story of Esther Costello"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rzp63",
            "EntityName": "A Slave of Fashion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rzqnj",
            "EntityName": "Tide of Empire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rzt27",
            "EntityName": "The Merry Widow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x7d7",
            "EntityName": "Trog"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gq7tf",
            "EntityName": "Great Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wfchq",
            "EntityName": "The Last of Mrs. Cheyney"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wg0lz",
            "EntityName": "The Best of Everything"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wgxy1",
            "EntityName": "Paris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hl97",
            "EntityName": "Queen Bee"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w25m",
            "EntityName": "Johnny Guitar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.054_0p",
            "EntityName": "The Gorgeous Hussy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05d_tr",
            "EntityName": "Torch Song"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05f04x",
            "EntityName": "Hush\u2026 Hush, Sweet Charlotte"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05m82n",
            "EntityName": "Autumn Leaves"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064nm14",
            "EntityName": "The Karate Killers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065_f8",
            "EntityName": "What Ever Happened to Baby Jane?"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y7_x",
            "EntityName": "Our Dancing Daughters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.076162",
            "EntityName": "It's a Great Feeling"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07bc2w",
            "EntityName": "The Damned Don't Cry!"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07n06p",
            "EntityName": "Rain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ncxk",
            "EntityName": "Flamingo Road"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07zbj7",
            "EntityName": "Dancing Lady"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.080m7fp",
            "EntityName": "Rose-Marie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.080pgyc",
            "EntityName": "The Circle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09l_6k",
            "EntityName": "The Unknown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09x69j",
            "EntityName": "Sadie McKee"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b8ghw",
            "EntityName": "Strait-Jacket"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bh8z_",
            "EntityName": "The Caretakers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjr3",
            "EntityName": "Untamed"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0brjnd",
            "EntityName": "I Saw What You Did"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0brk3r",
            "EntityName": "Berserk!"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c5wn",
            "EntityName": "Grand Hotel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c61b",
            "EntityName": "The Hollywood Revue of 1929"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c8q9k",
            "EntityName": "Love on the Run"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cs4d2d",
            "EntityName": "Harry Langdon: The Forgotten Clown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cy__l",
            "EntityName": "Mildred Pierce"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dkslz",
            "EntityName": "Daisy Kenyon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ngnd6x",
            "EntityName": "Della"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0cgbf": "Joan Crawford"
    },
    "qid_topic_entity": {
      "Q40475": "Joan Crawford"
    },
    "index": 347
  },
  {
    "QuestionId": "WebQTest-1850",
    "RawQuestion": "what religion does madonna practice?",
    "ProcessedQuestion": "what religion does madonna practice",
    "Parses": [
      {
        "ParseId": "WebQTest-1850.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01vs_v8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01vs_v8 ns:people.person.religion ?x .\n}\n",
        "PotentialTopicEntityMention": "madonna",
        "TopicEntityName": "Madonna",
        "TopicEntityMid": "m.01vs_v8",
        "InferentialChain": [
          "people.person.religion"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01n15n",
            "EntityName": "Jewish Renewal"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c8wxp",
            "EntityName": "Catholicism"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01vs_v8": "Madonna"
    },
    "qid_topic_entity": {
      "Q1744": "Madonna"
    },
    "index": 348
  },
  {
    "QuestionId": "WebQTest-1094",
    "RawQuestion": "who was isaac newton and what did he do?",
    "ProcessedQuestion": "who was isaac newton and what did he do",
    "Parses": [
      {
        "ParseId": "WebQTest-1094.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03s9v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03s9v ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "isaac newton",
        "TopicEntityName": "Isaac Newton",
        "TopicEntityMid": "m.03s9v",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01pxg",
            "EntityName": "Chemist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h6fbs",
            "EntityName": "Philosopher"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04s2z",
            "EntityName": "Mathematician"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05snw",
            "EntityName": "Physicist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q2q",
            "EntityName": "Scientist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h9c",
            "EntityName": "Astronomer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03s9v": "Isaac Newton"
    },
    "qid_topic_entity": {
      "Q935": "Isaac Newton"
    },
    "index": 349
  },
  {
    "QuestionId": "WebQTest-966",
    "RawQuestion": "what basketball player is married to monica?",
    "ProcessedQuestion": "what basketball player is married to monica",
    "Parses": [
      {
        "ParseId": "WebQTest-966.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01fs85)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01fs85 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n?x ns:people.person.profession ns:m.02h664x .\nFILTER(NOT EXISTS {?y ns:people.marriage.from ?sk0} || \nEXISTS {?y ns:people.marriage.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to ?sk2} || \nEXISTS {?y ns:people.marriage.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "monica",
        "TopicEntityName": "Monica",
        "TopicEntityMid": "m.01fs85",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          },
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02h664x",
            "EntityName": "Basketball player",
            "SourceNodeIndex": 1,
            "NodePredicate": "people.person.profession",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            2,
            3
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2zfl",
            "EntityName": "Shannon Brown"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01fs85": "Monica"
    },
    "qid_topic_entity": {
      "Q231487": "Monica"
    },
    "index": 350
  },
  {
    "QuestionId": "WebQTest-297",
    "RawQuestion": "what time zone is anaheim california?",
    "ProcessedQuestion": "what time zone is anaheim california",
    "Parses": [
      {
        "ParseId": "WebQTest-297.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k9p4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k9p4 ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "anaheim california",
        "TopicEntityName": "Anaheim",
        "TopicEntityMid": "m.0k9p4",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lcqs",
            "EntityName": "Pacific Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0k9p4": "Anaheim"
    },
    "qid_topic_entity": {
      "Q49247": "Anaheim"
    },
    "index": 351
  },
  {
    "QuestionId": "WebQTest-866",
    "RawQuestion": "where did otto frank go to college?",
    "ProcessedQuestion": "where did otto frank go to college",
    "Parses": [
      {
        "ParseId": "WebQTest-866.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01c9j8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01c9j8 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "otto frank",
        "TopicEntityName": "Otto Frank",
        "TopicEntityMid": "m.01c9j8",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bfyjl",
            "EntityName": "Heidelberg University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01c9j8": "Otto Frank"
    },
    "qid_topic_entity": {
      "Q7336": "Otto Frank"
    },
    "index": 352
  },
  {
    "QuestionId": "WebQTest-1547",
    "RawQuestion": "what is the title of george bush's new book?",
    "ProcessedQuestion": "what is the title of george bush 's new book",
    "Parses": [
      {
        "ParseId": "WebQTest-1547.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09b6zr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09b6zr ns:book.author.works_written ?x .\n?x ns:common.topic.notable_types ns:m.01xryvm .\n?x ns:book.written_work.date_of_first_publication ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "george bush",
        "TopicEntityName": "George W. Bush",
        "TopicEntityMid": "m.09b6zr",
        "InferentialChain": [
          "book.author.works_written"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01xryvm",
            "EntityName": "Book",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "book.written_work.date_of_first_publication",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h3wdwz",
            "EntityName": "In My Time: A Personal and Political Memoir"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09b6zr": "George W. Bush"
    },
    "qid_topic_entity": {
      "Q207": "George W. Bush"
    },
    "index": 353
  },
  {
    "QuestionId": "WebQTest-2015",
    "RawQuestion": "what type of government does argentina have today?",
    "ProcessedQuestion": "what type of government does argentina have today",
    "Parses": [
      {
        "ParseId": "WebQTest-2015.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jgd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jgd ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "argentina",
        "TopicEntityName": "Argentina",
        "TopicEntityMid": "m.0jgd",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d9r3",
            "EntityName": "Presidential system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c9rw5",
            "EntityName": "Constitutional republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0drnm",
            "EntityName": "Representative democracy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j729",
            "EntityName": "Federal republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jgd": "Argentina"
    },
    "qid_topic_entity": {
      "Q414": "Argentina"
    },
    "index": 354
  },
  {
    "QuestionId": "WebQTest-1789",
    "RawQuestion": "what is john edwards indicted for?",
    "ProcessedQuestion": "what is john edwards indicted for",
    "Parses": [
      {
        "ParseId": "WebQTest-1789.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01651q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01651q ns:base.crime.acquitted_person.acquittal ?y .\n?y ns:base.crime.acquittal.crime_type ?x .\n}\n",
        "PotentialTopicEntityMention": "john edwards",
        "TopicEntityName": "John Edwards",
        "TopicEntityMid": "m.01651q",
        "InferentialChain": [
          "base.crime.acquitted_person.acquittal",
          "base.crime.acquittal.crime_type"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hj49",
            "EntityName": "Political corruption"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01651q": "John Edwards"
    },
    "qid_topic_entity": {
      "Q217314": "John Edwards"
    },
    "index": 355
  },
  {
    "QuestionId": "WebQTest-1306",
    "RawQuestion": "what kind of government does iran have after 1979?",
    "ProcessedQuestion": "what kind of government does iran have after 1979",
    "Parses": [
      {
        "ParseId": "WebQTest-1306.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? relation assumes \"present\" and question implies \"present\"."
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03shp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03shp ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "iran",
        "TopicEntityName": "Iran",
        "TopicEntityMid": "m.03shp",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018wl5",
            "EntityName": "Parliamentary system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d9r3",
            "EntityName": "Presidential system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fgl7",
            "EntityName": "Islamic republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fpfn",
            "EntityName": "Unitary state"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07lg6",
            "EntityName": "Theocracy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03shp": "Iran"
    },
    "qid_topic_entity": {
      "Q794": "Iran"
    },
    "index": 356
  },
  {
    "QuestionId": "WebQTest-1206",
    "RawQuestion": "what was francis bacon contributions?",
    "ProcessedQuestion": "what was francis bacon contributions",
    "Parses": [
      {
        "ParseId": "WebQTest-1206.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.030dr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.030dr ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "francis bacon",
        "TopicEntityName": "Francis Bacon",
        "TopicEntityMid": "m.030dr",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.125_hzb47",
            "EntityName": "Spy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016fc2",
            "EntityName": "Statesman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h6fbs",
            "EntityName": "Philosopher"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q2q",
            "EntityName": "Scientist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kyk",
            "EntityName": "Author"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.030dr": "Francis Bacon"
    },
    "qid_topic_entity": {
      "Q37388": "Francis Bacon"
    },
    "index": 357
  },
  {
    "QuestionId": "WebQTest-1613",
    "RawQuestion": "what language do they speak in malta?",
    "ProcessedQuestion": "what language do they speak in malta",
    "Parses": [
      {
        "ParseId": "WebQTest-1613.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04v3q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04v3q ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "malta",
        "TopicEntityName": "Malta",
        "TopicEntityMid": "m.04v3q",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1613.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04v3q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04v3q ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "malta",
        "TopicEntityName": "Malta",
        "TopicEntityMid": "m.04v3q",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t3_",
            "EntityName": "Maltese Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04v3q": "Malta"
    },
    "qid_topic_entity": {
      "Q233": "Malta"
    },
    "index": 358
  },
  {
    "QuestionId": "WebQTest-1417",
    "RawQuestion": "when was the last time the boston bruins went to the stanley cup?",
    "ProcessedQuestion": "when was the last time the boston bruins went to the stanley cup",
    "Parses": [
      {
        "ParseId": "WebQTest-1417.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: F Union. Original comment: F union"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n  ns:m.0cc8tt9 ns:time.recurring_event.instances ?x . # Stanly Cup finals instances\n\n  {\n    ?x ns:sports.sports_championship_event.champion ns:m.0j2zj . #(Boston Bruins)\n  }\n  UNION\n  {\n    ?x ns:sports.sports_championship_event.runner_up ns:m.0j2zj . #(Boston Bruins)\n  }\n\n  ?x ns:time.event.start_date ?st .\n}\nORDER BY DESC(xsd:datetime(?st))\nLIMIT 1",
        "PotentialTopicEntityMention": "boston bruins",
        "TopicEntityName": "Boston Bruins",
        "TopicEntityMid": "m.0j2zj",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hrcjzl",
            "EntityName": "2013 Stanley Cup Finals"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0j2zj": "Boston Bruins"
    },
    "qid_topic_entity": {
      "Q194121": "Boston Bruins"
    },
    "index": 359
  },
  {
    "QuestionId": "WebQTest-69",
    "RawQuestion": "what county is brentwood tennessee in?",
    "ProcessedQuestion": "what county is brentwood tennessee in",
    "Parses": [
      {
        "ParseId": "WebQTest-69.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_xcq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_xcq ns:location.hud_county_place.county ?x .\n}\n",
        "PotentialTopicEntityMention": "brentwood tennessee",
        "TopicEntityName": "Brentwood",
        "TopicEntityMid": "m.0_xcq",
        "InferentialChain": [
          "location.hud_county_place.county"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0msrq",
            "EntityName": "Williamson County"
          }
        ]
      },
      {
        "ParseId": "WebQTest-69.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_xcq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_xcq ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
        "PotentialTopicEntityMention": "brentwood tennessee",
        "TopicEntityName": "Brentwood",
        "TopicEntityMid": "m.0_xcq",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpym_",
            "EntityName": "US County",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0msrq",
            "EntityName": "Williamson County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0_xcq": "Brentwood"
    },
    "qid_topic_entity": {
      "Q3096621": "Brentwood"
    },
    "index": 360
  },
  {
    "QuestionId": "WebQTest-1830",
    "RawQuestion": "what language do they speak in colombia south america?",
    "ProcessedQuestion": "what language do they speak in colombia south america",
    "Parses": [
      {
        "ParseId": "WebQTest-1830.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ls2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ls2 ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "colombia",
        "TopicEntityName": "Colombia",
        "TopicEntityMid": "m.01ls2",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.1q6h_1_4j",
            "EntityName": "Piratapuyo Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01yppj",
            "EntityName": "Cocama language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025syhx",
            "EntityName": "Bora Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026wqvr",
            "EntityName": "Wayuu Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hw_7r",
            "EntityName": "Malayo Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwglw",
            "EntityName": "Quechua, Napo Lowland Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwgnw",
            "EntityName": "Curripaco Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwgxh",
            "EntityName": "Hupd\u00eb Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwh2x",
            "EntityName": "Baudo language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwl4_",
            "EntityName": "Siona Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwl46",
            "EntityName": "Cabiyar\u00ed Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwmth",
            "EntityName": "Nukak language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwnpn",
            "EntityName": "Bar\u00ed Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwnwm",
            "EntityName": "Tama Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwpxb",
            "EntityName": "Awa-Cuaiquer Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwqkg",
            "EntityName": "Guanano Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwqrn",
            "EntityName": "Tanimuca-Retuar\u00e3 Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwqww",
            "EntityName": "Cagua Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwr84",
            "EntityName": "Runa Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwrvb",
            "EntityName": "Coyaima Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwt3q",
            "EntityName": "Ponares Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwv5q",
            "EntityName": "Macaguaje Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwv8r",
            "EntityName": "Inga, Jungle Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwvm1",
            "EntityName": "Coxima Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hww1x",
            "EntityName": "Tomedes Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwwlp",
            "EntityName": "Natagaimas Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwwxk",
            "EntityName": "Cumeral Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwxg4",
            "EntityName": "Carijona Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwxgh",
            "EntityName": "Tunebo, Barro Negro Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwyr3",
            "EntityName": "Siriano Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwzdd",
            "EntityName": "Muinane Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwzgg",
            "EntityName": "Macagu\u00e1n Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwzld",
            "EntityName": "Pijao Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hx_dp",
            "EntityName": "Puinave Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hx0bf",
            "EntityName": "Cubeo Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hx2q2",
            "EntityName": "Desano Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hx2tn",
            "EntityName": "Tunebo, Central Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hx5w4",
            "EntityName": "Guayabero Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hx8nb",
            "EntityName": "Arhuaco Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxb1x",
            "EntityName": "Tunebo, Western Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxb4m",
            "EntityName": "Totoro Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxb6s",
            "EntityName": "Palenquero Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxdd2",
            "EntityName": "Kogi Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxdfd",
            "EntityName": "Barasana Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxds7",
            "EntityName": "Yukpa Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxf1r",
            "EntityName": "Waimaj\u00e3 Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxfkq",
            "EntityName": "Colombian Sign Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxh5f",
            "EntityName": "Guambiano Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxhrz",
            "EntityName": "Minica Huitoto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxj6x",
            "EntityName": "Piaroa Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxksk",
            "EntityName": "Ember\u00e1, Northern Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxl2t",
            "EntityName": "Ocaina Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxlpz",
            "EntityName": "Anserma Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxnf6",
            "EntityName": "Carabayo Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxp1v",
            "EntityName": "Macuna Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxs7q",
            "EntityName": "Omejes Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxs9_",
            "EntityName": "Andoque Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxssc",
            "EntityName": "Chipiajes Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxswb",
            "EntityName": "Inga Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxsy4",
            "EntityName": "Piapoco Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxsz8",
            "EntityName": "Tunebo, Angosturas Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxtwj",
            "EntityName": "Catio language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxv46",
            "EntityName": "Koreguaje Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxvjw",
            "EntityName": "Kuna, Border Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxxcv",
            "EntityName": "Andaqui Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxy04",
            "EntityName": "S\u00e1liba Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxy6v",
            "EntityName": "Cams\u00e1 Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxz2z",
            "EntityName": "Murui Huitoto language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxzv2",
            "EntityName": "Yucuna Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ppbb5",
            "EntityName": "Guahibo language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ppbg9",
            "EntityName": "Cuiba language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ppbnh",
            "EntityName": "Playero language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pq8qn",
            "EntityName": "Uwa language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03h0wpt",
            "EntityName": "Achawa language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03w6b4",
            "EntityName": "Ticuna language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05tnswp",
            "EntityName": "Islander Creole English"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06gdhz",
            "EntityName": "Nheengatu language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nm1",
            "EntityName": "Spanish Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07k4r10",
            "EntityName": "Tinigua language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.085vdy",
            "EntityName": "Providencia Sign Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08w0ky",
            "EntityName": "Romani, Vlax Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09gpqdh",
            "EntityName": "Tuyuca language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09k4cp",
            "EntityName": "Tucano Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b7mcv",
            "EntityName": "P\u00e1ez language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bm08x",
            "EntityName": "Cof\u00e1n Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0km3ztb",
            "EntityName": "Nonuya language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1830.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ls2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ls2 ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "colombia",
        "TopicEntityName": "Colombia",
        "TopicEntityMid": "m.01ls2",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nm1",
            "EntityName": "Spanish Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01ls2": "Colombia"
    },
    "qid_topic_entity": {
      "Q739": "Colombia"
    },
    "index": 361
  },
  {
    "QuestionId": "WebQTest-1568",
    "RawQuestion": "what university did obama graduated from?",
    "ProcessedQuestion": "what university did obama graduated from",
    "Parses": [
      {
        "ParseId": "WebQTest-1568.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02mjmr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02mjmr ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?y ns:education.education.degree ns:m.014mlp .\n}\n",
        "PotentialTopicEntityMention": "obama",
        "TopicEntityName": "Barack Obama",
        "TopicEntityMid": "m.02mjmr",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.014mlp",
            "EntityName": "Bachelor of Arts",
            "SourceNodeIndex": 0,
            "NodePredicate": "education.education.degree",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01w5m",
            "EntityName": "Columbia University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02mjmr": "Barack Obama"
    },
    "qid_topic_entity": {
      "Q76": "Barack Obama"
    },
    "index": 362
  },
  {
    "QuestionId": "WebQTest-828",
    "RawQuestion": "what is the head judge of the supreme court called?",
    "ProcessedQuestion": "what is the head judge of the supreme court called",
    "Parses": [
      {
        "ParseId": "WebQTest-828.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07sz1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07sz1 ns:government.governmental_body.offices_positions ?x .\n}\n",
        "PotentialTopicEntityMention": "supreme court",
        "TopicEntityName": "Supreme Court of the United States",
        "TopicEntityMid": "m.07sz1",
        "InferentialChain": [
          "government.governmental_body.offices_positions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07szk",
            "EntityName": "Chief Justice of the United States"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07sz1": "Supreme Court of the United States"
    },
    "qid_topic_entity": {
      "Q11201": "Supreme Court of the United States"
    },
    "index": 363
  },
  {
    "QuestionId": "WebQTest-425",
    "RawQuestion": "where english is spoken?",
    "ProcessedQuestion": "where english is spoken",
    "Parses": [
      {
        "ParseId": "WebQTest-425.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h40lc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h40lc ns:language.human_language.countries_spoken_in ?x .\n}\n",
        "PotentialTopicEntityMention": "english",
        "TopicEntityName": "English Language",
        "TopicEntityMid": "m.02h40lc",
        "InferentialChain": [
          "language.human_language.countries_spoken_in"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0160w",
            "EntityName": "Bahamas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0162b",
            "EntityName": "Bangladesh"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0162v",
            "EntityName": "Barbados"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0164b",
            "EntityName": "Belize"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0165b",
            "EntityName": "Bermuda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0166v",
            "EntityName": "Botswana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0167v",
            "EntityName": "Brunei"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016p5p",
            "EntityName": "Transkei"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019pcs",
            "EntityName": "Ethiopia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019rg5",
            "EntityName": "Kenya"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01k0p4",
            "EntityName": "State of Palestine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nln",
            "EntityName": "Cameroon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nty",
            "EntityName": "Cayman Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01ppq",
            "EntityName": "Cyprus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020p1",
            "EntityName": "Cook Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026wtlf",
            "EntityName": "Territory of Papua and New Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027nb",
            "EntityName": "Dominica"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jx1",
            "EntityName": "England"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lx0",
            "EntityName": "Timor-Leste"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wt0",
            "EntityName": "Fiji"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03__y",
            "EntityName": "Jordan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_3d",
            "EntityName": "Japan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_xj",
            "EntityName": "Jersey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.034m8",
            "EntityName": "Guyana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.034tl",
            "EntityName": "Guam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035dk",
            "EntityName": "Ghana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035hm",
            "EntityName": "Gibraltar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035hr8",
            "EntityName": "South Yemen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035yg",
            "EntityName": "Grenada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03h2c",
            "EntityName": "Honduras"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03h64",
            "EntityName": "Hong Kong"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rk0",
            "EntityName": "India"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rt9",
            "EntityName": "Republic of Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ryn",
            "EntityName": "Indonesia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03spz",
            "EntityName": "Israel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03t1s",
            "EntityName": "Isle of Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047t_",
            "EntityName": "Kiribati"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hhv",
            "EntityName": "Laos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hvw",
            "EntityName": "Lesotho"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hzj",
            "EntityName": "Liberia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3q",
            "EntityName": "Malta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v6v",
            "EntityName": "Marshall Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wcf",
            "EntityName": "Montserrat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bmq",
            "EntityName": "Namibia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05br2",
            "EntityName": "Nauru"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05cgv",
            "EntityName": "Nigeria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qkp",
            "EntityName": "Papua New Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05r7t",
            "EntityName": "Puerto Rico"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05sb1",
            "EntityName": "Pakistan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05v8c",
            "EntityName": "Philippines"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065skb",
            "EntityName": "Gazankulu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0697s",
            "EntityName": "Qatar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dfg",
            "EntityName": "Rwanda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06m_5",
            "EntityName": "Sri Lanka"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ryl",
            "EntityName": "Saint Kitts and Nevis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s_2",
            "EntityName": "Sierra Leone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s0l",
            "EntityName": "Saint Lucia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s6l",
            "EntityName": "Saint Vincent and the Grenadines"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s9y",
            "EntityName": "Samoa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06t2t",
            "EntityName": "Singapore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06tw8",
            "EntityName": "Sudan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06v36",
            "EntityName": "Swaziland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07dzf",
            "EntityName": "Tanzania"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07f9q",
            "EntityName": "Tokelau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07fr_",
            "EntityName": "Turks and Caicos Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07fsv",
            "EntityName": "Tuvalu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ssc",
            "EntityName": "United Kingdom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07tp2",
            "EntityName": "Uganda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ytt",
            "EntityName": "Vatican City"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07z5n",
            "EntityName": "Vanuatu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.088q4",
            "EntityName": "Zimbabwe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.088vb",
            "EntityName": "Zambia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09pmkv",
            "EntityName": "Malaysia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09wfqp",
            "EntityName": "Territory of New Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0chghy",
            "EntityName": "Australia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ctw_b",
            "EntityName": "New Zealand"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d05w3",
            "EntityName": "China"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h44w",
            "EntityName": "Mandatory Palestine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hbgh",
            "EntityName": "Cura\u00e7ao"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hdx8",
            "EntityName": "Gambia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hzlz",
            "EntityName": "South Africa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5g9",
            "EntityName": "Wales"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0l3h",
            "EntityName": "Antigua and Barbuda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rdr4",
            "EntityName": "Bonaire"
          }
        ]
      },
      {
        "ParseId": "WebQTest-425.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h40lc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h40lc ns:language.human_language.main_country ?x .\n}\n",
        "PotentialTopicEntityMention": "english",
        "TopicEntityName": "English Language",
        "TopicEntityMid": "m.02h40lc",
        "InferentialChain": [
          "language.human_language.main_country"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014tss",
            "EntityName": "Kingdom of Great Britain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rt9",
            "EntityName": "Republic of Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ssc",
            "EntityName": "United Kingdom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0chghy",
            "EntityName": "Australia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ctw_b",
            "EntityName": "New Zealand"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02h40lc": "English Language"
    },
    "qid_topic_entity": {
      "Q1860": "English Language"
    },
    "index": 364
  },
  {
    "QuestionId": "WebQTest-1802",
    "RawQuestion": "where are the timezones in the usa?",
    "ProcessedQuestion": "where are the timezones in the usa",
    "Parses": [
      {
        "ParseId": "WebQTest-1802.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09c7w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09c7w0 ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "usa",
        "TopicEntityName": "United States of America",
        "TopicEntityMid": "m.09c7w0",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027wj2_",
            "EntityName": "Samoa Time Zone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027wjl3",
            "EntityName": "Chamorro Time Zone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02fqwt",
            "EntityName": "Central Time Zone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hcv8",
            "EntityName": "Eastern Time Zone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hczc",
            "EntityName": "Mountain Time Zone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lcqs",
            "EntityName": "Pacific Time Zone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lcrv",
            "EntityName": "Alaska Time Zone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lctm",
            "EntityName": "Hawaii-Aleutian Time Zone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.042g7t",
            "EntityName": "Atlantic Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09c7w0": "United States of America"
    },
    "qid_topic_entity": {
      "Q30": "United States of America"
    },
    "index": 365
  },
  {
    "QuestionId": "WebQTest-1242",
    "RawQuestion": "what are all the names of the harry potter books?",
    "ProcessedQuestion": "what are all the names of the harry potter books",
    "Parses": [
      {
        "ParseId": "WebQTest-1242.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03647x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03647x ns:book.book_character.appears_in_book ?x .\n}\n",
        "PotentialTopicEntityMention": "harry",
        "TopicEntityName": "Harry Potter",
        "TopicEntityMid": "m.03647x",
        "InferentialChain": [
          "book.book_character.appears_in_book"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014jst",
            "EntityName": "Harry Potter and the Order of the Phoenix"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015pln",
            "EntityName": "Harry Potter and the Chamber of Secrets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01lr1g",
            "EntityName": "Harry Potter and the Prisoner of Azkaban"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01m5g_",
            "EntityName": "Harry Potter and the Goblet of Fire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03bkkv",
            "EntityName": "Harry Potter and the Deathly Hallows"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06_rf9",
            "EntityName": "Harry Potter and the Half-Blood Prince"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c_vk",
            "EntityName": "Harry Potter and the Philosopher's Stone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03647x": "Harry Potter"
    },
    "qid_topic_entity": {
      "Q3244512": "Harry Potter"
    },
    "index": 366
  },
  {
    "QuestionId": "WebQTest-612",
    "RawQuestion": "who does jeremy shockey play for in 2012?",
    "ProcessedQuestion": "who does jeremy shockey play for in 2012",
    "Parses": [
      {
        "ParseId": "WebQTest-612.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "?? in 2012 filter not added."
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.076ltd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.076ltd ns:base.schemastaging.athlete_extra.salary ?y .\n?y ns:base.schemastaging.athlete_salary.team ?x .\n}\n",
        "PotentialTopicEntityMention": "jeremy shockey",
        "TopicEntityName": "Jeremy Shockey",
        "TopicEntityMid": "m.076ltd",
        "InferentialChain": [
          "base.schemastaging.athlete_extra.salary",
          "base.schemastaging.athlete_salary.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01y3c",
            "EntityName": "Carolina Panthers"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.076ltd": "Jeremy Shockey"
    },
    "qid_topic_entity": {
      "Q1687632": "Jeremy Shockey"
    },
    "index": 367
  },
  {
    "QuestionId": "WebQTest-1124",
    "RawQuestion": "who played samantha stephens in bewitched?",
    "ProcessedQuestion": "who played samantha stephens in bewitched",
    "Parses": [
      {
        "ParseId": "WebQTest-1124.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.023ny6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.023ny6 ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.02nrqnw .\n}\n",
        "PotentialTopicEntityMention": "bewitched",
        "TopicEntityName": "Bewitched",
        "TopicEntityMid": "m.023ny6",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02nrqnw",
            "EntityName": "Samantha",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01x3b8",
            "EntityName": "Elizabeth Montgomery"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.023ny6": "Bewitched"
    },
    "qid_topic_entity": {
      "Q1044635": "Bewitched"
    },
    "index": 368
  },
  {
    "QuestionId": "WebQTest-1487",
    "RawQuestion": "where does kate middleton live 2012?",
    "ProcessedQuestion": "where does kate middleton live 2012",
    "Parses": [
      {
        "ParseId": "WebQTest-1487.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05mnc3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05mnc3 ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\nFILTER(NOT EXISTS {?y ns:people.place_lived.end_date ?sk0} || \nEXISTS {?y ns:people.place_lived.end_date ?sk1 . \nFILTER(xsd:datetime(?sk1) >= \"2012-01-01\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.place_lived.start_date ?sk2} || \nEXISTS {?y ns:people.place_lived.start_date ?sk3 . \nFILTER(xsd:datetime(?sk3) <= \"2012-12-31\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "kate middleton",
        "TopicEntityName": "Catherine, Duchess of Cambridge",
        "TopicEntityMid": "m.05mnc3",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2012-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.place_lived.end_date",
            "ValueType": "DateTime"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2012-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.place_lived.start_date",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2012-01-01",
          "End": "2012-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "2012"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kqsd",
            "EntityName": "Bucklebury"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b_yz",
            "EntityName": "Reading"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05mnc3": "Catherine, Duchess of Cambridge"
    },
    "qid_topic_entity": {
      "Q10479": "Catherine, Duchess of Cambridge"
    },
    "index": 369
  },
  {
    "QuestionId": "WebQTest-468",
    "RawQuestion": "where did venus williams come from?",
    "ProcessedQuestion": "where did venus williams come from",
    "Parses": [
      {
        "ParseId": "WebQTest-468.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.016cff)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.016cff ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "venus williams",
        "TopicEntityName": "Venus Williams",
        "TopicEntityMid": "m.016cff",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0r0ls",
            "EntityName": "Lynwood"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.016cff": "Venus Williams"
    },
    "qid_topic_entity": {
      "Q11578": "Venus Williams"
    },
    "index": 370
  },
  {
    "QuestionId": "WebQTest-518",
    "RawQuestion": "what type of money do they use in costa rica?",
    "ProcessedQuestion": "what type of money do they use in costa rica",
    "Parses": [
      {
        "ParseId": "WebQTest-518.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01p8s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01p8s ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "costa rica",
        "TopicEntityName": "Costa Rica",
        "TopicEntityMid": "m.01p8s",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wccn",
            "EntityName": "Costa Rican col\u00f3n"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01p8s": "Costa Rica"
    },
    "qid_topic_entity": {
      "Q800": "Costa Rica"
    },
    "index": 371
  },
  {
    "QuestionId": "WebQTest-79",
    "RawQuestion": "what country did buddha come from?",
    "ProcessedQuestion": "what country did buddha come from",
    "Parses": [
      {
        "ParseId": "WebQTest-79.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015k7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015k7 ns:people.person.nationality ?x .\n}\n",
        "PotentialTopicEntityMention": "buddha",
        "TopicEntityName": "Gautama Buddha",
        "TopicEntityMid": "m.015k7",
        "InferentialChain": [
          "people.person.nationality"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016zwt",
            "EntityName": "Nepal"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.015k7": "Gautama Buddha"
    },
    "qid_topic_entity": {
      "Q9441": "Gautama Buddha"
    },
    "index": 372
  },
  {
    "QuestionId": "WebQTest-1233",
    "RawQuestion": "what are the colors of the ny giants?",
    "ProcessedQuestion": "what are the colors of the ny giants",
    "Parses": [
      {
        "ParseId": "WebQTest-1233.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05gg4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05gg4 ns:sports.sports_team.colors ?x .\n}\n",
        "PotentialTopicEntityMention": "ny giants",
        "TopicEntityName": "New York Giants",
        "TopicEntityMid": "m.05gg4",
        "InferentialChain": [
          "sports.sports_team.colors"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01g5v",
            "EntityName": "Blue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.036k5h",
            "EntityName": "Grey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06fvc",
            "EntityName": "Red"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.083jv",
            "EntityName": "White"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05gg4": "New York Giants"
    },
    "qid_topic_entity": {
      "Q190618": "New York Giants"
    },
    "index": 373
  },
  {
    "QuestionId": "WebQTest-1090",
    "RawQuestion": "where are boeing headquarters?",
    "ProcessedQuestion": "where are boeing headquarters",
    "Parses": [
      {
        "ParseId": "WebQTest-1090.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0178g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0178g ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "boeing",
        "TopicEntityName": "Boeing",
        "TopicEntityMid": "m.0178g",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_d4",
            "EntityName": "Chicago"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0178g": "Boeing"
    },
    "qid_topic_entity": {
      "Q66": "Boeing"
    },
    "index": 374
  },
  {
    "QuestionId": "WebQTest-1822",
    "RawQuestion": "who is in paul ryan's family?",
    "ProcessedQuestion": "who is in paul ryan 's family",
    "Parses": [
      {
        "ParseId": "WebQTest-1822.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: F Union. Original comment: F Union - children + spouse and potentially parents"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n\tFILTER (?x != ns:m.024v2j)\n\t{ \n\t  # Parents\n\t  ns:m.024v2j ns:people.person.parents ?x .\n\t}\n\tUNION\n\t{\n\t  # Children\n\t  ns:m.024v2j ns:people.person.children ?x .\n\t}\n\tUNION\n\t{\n\t  # Siblings\n\t  ns:m.024v2j ns:people.person.sibling_s ?y .\n\t  ?y ns:people.sibling_relationship.sibling ?x .\n\t}\n\tUNION\n\t{\n\t  # Spouse\n\t  ns:m.024v2j ns:people.person.spouse_s ?y .\n\t  ?y ns:people.marriage.spouse ?x .\n\t  ?y ns:people.marriage.type_of_union ns:m.04ztj .\n\t  FILTER (NOT EXISTS {?y ns:people.marriage.to []})\n\t}\n}",
        "PotentialTopicEntityMention": "paul ryan",
        "TopicEntityName": "Paul Ryan",
        "TopicEntityMid": "m.024v2j",
        "InferentialChain": null,
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j6fhh8",
            "EntityName": "Janna Ryan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kr8sx8",
            "EntityName": "Elizabeth Ryan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kr8t50",
            "EntityName": "Charles Ryan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kr8tj2",
            "EntityName": "Samuel Ryan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qf0gtr",
            "EntityName": "Paul Murray Ryan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qf0hct",
            "EntityName": "Elizabeth A. Ryan"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.024v2j": "Paul Ryan"
    },
    "qid_topic_entity": {
      "Q203966": "Paul Ryan"
    },
    "index": 375
  },
  {
    "QuestionId": "WebQTest-1933",
    "RawQuestion": "what year did adam morrison get drafted?",
    "ProcessedQuestion": "what year did adam morrison get drafted",
    "Parses": [
      {
        "ParseId": "WebQTest-1933.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08_g4q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08_g4q ns:sports.drafted_athlete.drafted ?y .\n?y ns:sports.sports_league_draft_pick.draft ?x .\n}\n",
        "PotentialTopicEntityMention": "adam morrison",
        "TopicEntityName": "Adam Morrison",
        "TopicEntityMid": "m.08_g4q",
        "InferentialChain": [
          "sports.drafted_athlete.drafted",
          "sports.sports_league_draft_pick.draft"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09th87",
            "EntityName": "2006 NBA draft"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.08_g4q": "Adam Morrison"
    },
    "qid_topic_entity": {
      "Q350464": "Adam Morrison"
    },
    "index": 376
  },
  {
    "QuestionId": "WebQTest-173",
    "RawQuestion": "what countries are part of the baltic?",
    "ProcessedQuestion": "what countries are part of the baltic",
    "Parses": [
      {
        "ParseId": "WebQTest-173.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019tjm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019tjm ns:location.location.contains ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n}\n",
        "PotentialTopicEntityMention": "baltic",
        "TopicEntityName": "Baltic states",
        "TopicEntityMid": "m.019tjm",
        "InferentialChain": [
          "location.location.contains"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01mp",
            "EntityName": "Country",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kmm",
            "EntityName": "Estonia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04g5k",
            "EntityName": "Latvia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gzd",
            "EntityName": "Lithuania"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.019tjm": "Baltic states"
    },
    "qid_topic_entity": {
      "Q39731": "Baltic states"
    },
    "index": 377
  },
  {
    "QuestionId": "WebQTest-1204",
    "RawQuestion": "where did the anasazi indians live?",
    "ProcessedQuestion": "where did the anasazi indians live",
    "Parses": [
      {
        "ParseId": "WebQTest-1204.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lyq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lyq ns:people.ethnicity.geographic_distribution ?x .\n}\n",
        "PotentialTopicEntityMention": "anasazi indians",
        "TopicEntityName": "Ancestral Puebloans",
        "TopicEntityMid": "m.0lyq",
        "InferentialChain": [
          "people.ethnicity.geographic_distribution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027v6g",
            "EntityName": "Four Corners"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0lyq": "Ancestral Puebloans"
    },
    "qid_topic_entity": {
      "Q478805": "Ancestral Puebloans"
    },
    "index": 378
  },
  {
    "QuestionId": "WebQTest-227",
    "RawQuestion": "where were the seneca indians located?",
    "ProcessedQuestion": "where were the seneca indians located",
    "Parses": [
      {
        "ParseId": "WebQTest-227.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? were"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.028yj0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.028yj0 ns:people.ethnicity.geographic_distribution ?x .\n}\n",
        "PotentialTopicEntityMention": "seneca indians",
        "TopicEntityName": "Seneca people",
        "TopicEntityMid": "m.028yj0",
        "InferentialChain": [
          "people.ethnicity.geographic_distribution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059rby",
            "EntityName": "New York"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kr_",
            "EntityName": "Ontario"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.028yj0": "Seneca people"
    },
    "qid_topic_entity": {
      "Q213422": "Seneca people"
    },
    "index": 379
  },
  {
    "QuestionId": "WebQTest-170",
    "RawQuestion": "who played bilbo in lord of the rings?",
    "ProcessedQuestion": "who played bilbo in lord of the rings",
    "Parses": [
      {
        "ParseId": "WebQTest-170.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g6z1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g6z1 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.023cjg .\n}\n",
        "PotentialTopicEntityMention": "bilbo",
        "TopicEntityName": "Old Bilbo",
        "TopicEntityMid": "m.0g6z1",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.023cjg",
            "EntityName": "The Lord of the Rings",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f_wwf",
            "EntityName": "Norman Bird"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0g6z1": "Old Bilbo"
    },
    "qid_topic_entity": {
      "Q185737": "Old Bilbo"
    },
    "index": 380
  },
  {
    "QuestionId": "WebQTest-739",
    "RawQuestion": "what pieces of music did claude debussy compose?",
    "ProcessedQuestion": "what pieces of music did claude debussy compose",
    "Parses": [
      {
        "ParseId": "WebQTest-739.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01vvy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01vvy ns:music.composer.compositions ?x .\n}\n",
        "PotentialTopicEntityMention": "claude debussy",
        "TopicEntityName": "Claude Debussy",
        "TopicEntityMid": "m.01vvy",
        "InferentialChain": [
          "music.composer.compositions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.11b821q1dm",
            "EntityName": ""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.120ldwp4",
            "EntityName": "Lindaraja"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.1234bndn",
            "EntityName": ""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.1234nfvz",
            "EntityName": ""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.1ym_l6xb0",
            "EntityName": "Le promenoir des deux amants"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_5_6yg",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: I. La cour des lys: N\u00b02"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_5yrhj",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: II. La chambre magique: N\u00b01"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_5zc3z",
            "EntityName": "\u00c9tudes, L. 136: XI. Pour les arp\u00e8ges compos\u00e9s"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_5zhxw",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act II, Scene II. \\\"Je suis ... je suis malade ici\\\" (M\u00e9lisande, Golaud)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_5zm61",
            "EntityName": "Chansons de Bilitis, L. 90: La Fl\u00fbte de Pan \u00abPour le jour des Hyacinthies\u00bb"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_5zvq3",
            "EntityName": "Chansons de Bilitis, L. 90: \u00abLa Chevelure \u00abIl m'a dit \u00abCette nuit d'ai r\u00eav\u00e9\u00bb\u00bb"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6_zhg",
            "EntityName": "Dans le jardin, L. 78, CD 107, m\u00e9lodie pour voix et piano \\\"Je regardais dans le jardin\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_605jr",
            "EntityName": "Preludes, Book I: 6. Des pas sur la neige"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_60cr2",
            "EntityName": "Estampes II: La soir e dans Grenade"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_60czy",
            "EntityName": "Chansons de Bilitis, L. 90: Le Tombeau des na\u00efades: \u00abLe long du bois couvert de givre\u00bb"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_60q1h",
            "EntityName": "Petite Suite, L. 65, CD 71b, pour orchestre : I. En bateau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_61wmp",
            "EntityName": "Le promenoir des deux amants, L. 118, CD 129, m\u00e9lodies pour voix et piano : I. \\\"Aupr\u00e8s de cette grotte sombre\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_626vh",
            "EntityName": "My Reverie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_62vb5",
            "EntityName": "Proses lyriques, L. 84, CD 90 : IV. De Soirs, m\u00e9lodie \\\"Dimanche sur les villes\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_63vyz",
            "EntityName": "Trio in G Major for Violin, Cello and Piano: II. Scherzo - Intermezzo. Moderato con allegro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6478t",
            "EntityName": "La Damoiselle \u00e9lue, L. 62, CD 69, po\u00e8me lyrique pour voix de femmes, solo, ch\u0153ur et orchestre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_647ch",
            "EntityName": "\u00c9tudes, L. 136: V. Pour les octaves"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_64jsh",
            "EntityName": "Six \u00e9pigraphes antiques, L. 131: III. Pour que la nuit soit propice"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_64mfg",
            "EntityName": "Preludes, Book II: 7. La Terrasse des audiences du clair de lune"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_65d7k",
            "EntityName": "En blanc et noir: II. Lent, sombre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_667ql",
            "EntityName": "Quatuor \u00e0 cordes en sol mineur, op. 10, L. 85, CD 91 : IV. Tr\u00e8s mod\u00e9r\u00e9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_66lnh",
            "EntityName": "Suite bergamasque, L. 75, CD 82a, pour orchestre : III. Clair de lune"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_66pb7",
            "EntityName": "Les Chansons de Bilitis, L. 96: No. 3. Les Contes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6721p",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: I. La cour des lys: N\u00b01"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_67q33",
            "EntityName": "Quatuor \u00e0 cordes en sol mineur, op. 10, L. 85, CD 91 : II. Assez vif et bien rythm\u00e9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_67qq5",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: III. Le concile des faux dieux: N\u00b04"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_67yr1",
            "EntityName": "Deux arabesques, L. 66, CD 74, pour piano : No. 2 en sol majeur, Allegretto scherzando"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6857g",
            "EntityName": "Les Chansons de Bilitis, L. 96: No. 6. Bilitis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_68qzd",
            "EntityName": "Pantomime, L. 31, CD 47, m\u00e9lodie pour voix et piano \\\"Pierrot, qui n\u2019a rien d\u2019un Clitandre\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_69yfv",
            "EntityName": "Sonata for flute, viola and harp, L. 137: II. Interlude"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6b4px",
            "EntityName": "Preludes, Book II: 3. La Puerta del Vino"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6bjlf",
            "EntityName": "Estampes, L. 100: III. Jardins sous la pluie. Net et vif"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6c184",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act I, Scene II. \\\"Grand-p\u00e8re, j'ai re\u00e7u en m\u00eame temps que la lettre de mon fr\u00e8re...\\\" (Pell\u00e9as, Arkel, Genevi\u00e8ve)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6c7fn",
            "EntityName": "Three Preludes: Feuilles mortes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6cz57",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act IV, Scene II. \\\"Oh! Cette pierre est lourde ...\\\" (Yniold, Le Berger)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6d6lm",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act III, Scene II. \\\"Prenez garde; par ici, par ici\\\" (Golaud, Pell\u00e9as)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6dtbk",
            "EntityName": "Syrinx huilulle, L 129"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6dyl4",
            "EntityName": "Pell\u00e9as et M\u00e9lisande - Concert Suite: Acte V. Une chambre dans le ch\u00e2teau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6f191",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act III, Scene I. \\\"Oh! Oh! Mes cheveux descendent de la tour!\\\" (M\u00e9lisande, Pell\u00e9as)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6g83_",
            "EntityName": "Suite bergamasque, L. 75, CD 82b, pour orchestre : III. Clair de lune"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6glx1",
            "EntityName": "Preludes, Book II: 1. Brouillards"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6gs5y",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act I, Scene II. \\\"Voici ce qu'il \u00e9crit \u00e0 son fr\u00e8re Pell\u00e9as: 'Un soir, je l'ai trouv\u00e9e'\\\" (Genevi\u00e8ve)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6hj8p",
            "EntityName": "Trio in G Major for Violin, Cello and Piano: I. Andantino con moto allegro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6jtms",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act IV, Scene I. \\\"Apporte-la\\\" (Golaud, Arkel, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6k3cr",
            "EntityName": "Children's Corner, L. 113: V. The Little Shepherd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6lxl_",
            "EntityName": "Les Chansons de Bilitis, L. 96: No. 8. Les Courtisanes \u00e9gyptiennes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6m_m5",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act I, Scene III. \\\"Ho\u00e9! Hisse ho\u00e9! Ho\u00e9! Ho\u00e9!\\\" (Ch\u0153r, M\u00e9lisande, Pell\u00e9as, Genevi\u00e8ve)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6mn47",
            "EntityName": "Petite Suite, L. 65, CD 71a, pour piano \u00e0 4 mains : IV. Ballet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6n8l_",
            "EntityName": "\u00c9tudes, L. 136: II. Pour les tierces"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6q7bm",
            "EntityName": "Images pour orchestre, L 122: II. Iberia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6q7bt",
            "EntityName": "Iberia No. 2 from \\\"Images\\\" for Orchestra: II. The Perfumes of the Night"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6qhbw",
            "EntityName": "Three Preludes: Ce qu'a vu le vent de l'ouest"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6ttlh",
            "EntityName": "3 Preludes from Book II: V. Bruyer\u00e8s. Calme"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6vjgd",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act V. \\\"Qu'avez-vous fait? Vous allez la tuer\\\" (Arkel, Golaud, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6vxqc",
            "EntityName": "Children's Corner, L. 113: III. Serenade for the Doll"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6x4r0",
            "EntityName": "Proses lyriques, L. 84, CD 90 : I. De R\u00eave, m\u00e9lodie \\\"La nuit a des douceurs de femme\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6yrsf",
            "EntityName": "Clair de lune Samba"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_704z6",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act II, Scene II. \\\"Ah! Ah! Tout va bien, ce la ne sera rien\\\" (Golaud, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_70swk",
            "EntityName": "Children's Corner - I. Doctor Gradus ad Parnassum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7203v",
            "EntityName": "Cinq po\u00e8mes de Baudelaire, L. 64, CD 70: II. Harmonie du soir"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7363q",
            "EntityName": "Pierrot"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_74qc9",
            "EntityName": "Ariettes oubli\u00e9es, L. 60, CD 63a : IV. Paysages belges. Chevaux de bois, m\u00e9lodie pour voix et piano \\\"Tournez, tournez, bons chevaux de bois\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_74qkz",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: II. La chambre magique: N\u00b02"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_75kkp",
            "EntityName": "\u00c9tudes, L. 136: I. Pour les \u00ab cinq doigts \u00bb d'apr\u00e8s monsieur Czerny"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_785n5",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act III, Scene IV. \\\"Viens, nous allons nous asseoir ici, Yniold\\\" (Golaud, Yniold)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_79_89",
            "EntityName": "Cello sonata in D minor: I. Prologue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7dpnl",
            "EntityName": "Trois Ballades de Fran\u00e7ois Villon, L. 119: I. Ballade de Villon \u00e0 s'Amye"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7gzrq",
            "EntityName": "F\u00eates galantes (Premier recueil), L. 80, CD 86 : III. Clair de lune, m\u00e9lodie pour voix et piano \\\"Votre \u00e2me est un paysage choisi\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7jv18",
            "EntityName": "Trois Ballades de Fran\u00e7ois Villon, L. 119: II. Ballade que Villon feit \u00e0 la requeste de sa m\u00e8re pour prier Nostre-Dame"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7k80b",
            "EntityName": "En blanc et noir: I. Avec emportement"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7l3nl",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act II, Scene I. \\\"Vous ne savez pas o\u00f9 je vous ai men\u00e9e?\\\" (Pell\u00e9as, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7l7b6",
            "EntityName": "Nuit d\u2019\u00e9toiles, L. 4, CD 2, m\u00e9lodie pour voix et piano \\\"Nuit d\u2019\u00e9toiles, sous tes voiles\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7l7wd",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act V. \\\"Non, non, nous n'avons pas \u00e9t\u00e9 coupables\\\" (M\u00e9lisande, Golaud)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7mtb0",
            "EntityName": "Nocturnes, L. 91, CD 98: III. Sir\u00e8nes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7nk_p",
            "EntityName": "Petite Suite: Menuet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7pj_2",
            "EntityName": "La Romance d\u2019Ariel, L. 54, CD 58, m\u00e9lodie pour voix et piano \\\"Au long de ces montagnes douces\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7pmfh",
            "EntityName": "Proses lyriques, L. 84, CD 90 : III. De Fleurs, m\u00e9lodie \\\"Dans l\u2019ennui si d\u00e9sol\u00e9ment vert\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7qyt2",
            "EntityName": "Six \u00e9pigraphes antiques, L. 131: VI. Pour remercier la pluie au matin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7t946",
            "EntityName": "Preludes, Book II: 8. Ondine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7t9jk",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act I, Scene I. \\\"Je ne pourrai plus sortir de cette for\u00eat\\\" (Golaud, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7tsmn",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: IV. Le laurier bless\u00e9: N\u00b01"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7tsqc",
            "EntityName": "Sonata for flute, viola and harp, L. 137: III. Finale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7w7pf",
            "EntityName": "Preludes, Book I: 1. Danseuses de Delphes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7x7ck",
            "EntityName": "Children's Corner, L. 113: IV. The Snow is Dancing"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7yxtv",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act V. \\\"Ouvrez la fen\u00eatre, ouvrez la fen\u00eatre ...\\\" (M\u00e9lisande, Arkel, Le m\u00e9decin)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_813fq",
            "EntityName": "Regret, L. 55, CD 59, m\u00e9lodie pour voix et piano \\\"Devant le ciel d\u2019\u00e9t\u00e9, ti\u00e8de et calme\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_fk14v",
            "EntityName": "Star Gazers Theme Song"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hph7q",
            "EntityName": "Suite bergamasque, L. 75, CD 82 : III. Clair de lune, pour violon et piano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hq905",
            "EntityName": "\u00c9tudes, L. 136: VII. Pour les degr\u00e9s chromatiques"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hqkc2",
            "EntityName": "Les cloches"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hr0pw",
            "EntityName": "Pour le piano: Sarabande"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hrj54",
            "EntityName": "L\u2019Enfant prodigue : 2b. Pourquoi m'as-tu quitt\u00e9e (Lia)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hrz7g",
            "EntityName": "Pell\u00e9as et M\u00e9lisande - Concert Suite: Acte III, sc\u00e8ne 2. Les souterrains du ch\u00e2teau / Acte IV, sc\u00e8ne 2. Un appartement dans le ch\u00e2teau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hsrdk",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act IV, Scene I. \\\"O\u00f9 vas-tu? Il faut que je te parle ce soir\\\" (Pell\u00e9as, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hstxy",
            "EntityName": "Romance (Deux Romances, No. 2, 1891)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hsxp8",
            "EntityName": "Ariettes oubli\u00e9es, L. 60, CD 63a : V. Aquarelles, 1. Green, m\u00e9lodie pour voix et piano \\\"Voici des fruits, des fleurs, des feuilles\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_ht0n6",
            "EntityName": "Ariettes oubli\u00e9es, L. 60, CD 63a : III. Le rossignol qui, du haut d\u2019une branche, m\u00e9lodie pour voix et piano \\\"L\u2019ombre des arbres dans la rivi\u00e8re embrum\u00e9e\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hthyg",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act I, Scene III. \\\"Il fait sombre dans les jardins\\\" (M\u00e9lisande, Genevi\u00e8ve, Pell\u00e9as)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_htp_j",
            "EntityName": "Pr\u00e9ludes, Livre II, L. 123: IX. Hommage \u00e0 S. Pickwick Esq. P.P.M.P.C.. Grave"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hv4js",
            "EntityName": "Trois Chansons de France, L. 102, CD 115: I. Rondel: Le temps a laiss\u00e9 son manteau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hv57k",
            "EntityName": "Iberia No. 2 from \\\"Images\\\" for Orchestra: I. Through the Streets and Roads"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hvvsj",
            "EntityName": "Three Preludes: Feux d'artifice"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hvx8w",
            "EntityName": "Les Chansons de Bilitis, L. 96: No. 1. Chant pastoral"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hwd77",
            "EntityName": "Les Chansons de Bilitis, L. 96: No. 7. Le Tombeau sans nom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hwmys",
            "EntityName": "En blanc et noir, L. 134, CD 142"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hxw83",
            "EntityName": "Sonata for flute, viola and harp, L. 137: I. Pastorale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hyr_4",
            "EntityName": "\u00c9tudes, L. 136: VIII. Pour les agr\u00e9ments"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hyxyy",
            "EntityName": "Prelude (From Suite Bergamasque)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hyzjt",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien, fragments symphoniques: I. La Cour de lys"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hzbwx",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: V. Le paradis: N\u00b01"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hzhpj",
            "EntityName": "Suite bergamasque, L. 75, CD 82, pour orchestre : III. Clair de lune"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hzt3d",
            "EntityName": "III. Le Vent dans la plaine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j_367",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien, fragments symphoniques: IV. Le Bon Pasteur"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j_9fv",
            "EntityName": "Trois M\u00e9lodies, L. 81, CD 85, pour une voix avec accompagnement de piano : I. La mer est plus belle que les cath\u00e9drales."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j_dcn",
            "EntityName": "Sonate pour violoncelle et piano: III. Finale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j_xxl",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act I, Scene I. \\\"Qu'est-ce qui brille ainsi, au fond de l'eau?\\\" (Golaud, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j10m0",
            "EntityName": "\u00c9tudes, L. 136: IX. Pour les notes r\u00e9p\u00e9t\u00e9es"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j125r",
            "EntityName": "Nocturnes, L 91: II. F\u00eates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j18my",
            "EntityName": "Petite Suite, L. 65, CD 71, pour violon et piano : III. Menuet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j1vqk",
            "EntityName": "Trois Chansons de France, L. 102: II. La Grotte: Aupr\u00e8s de cette grotte sombre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j1ysx",
            "EntityName": "Le promenoir des deux amants, L. 118, CD 129, m\u00e9lodies pour voix et piano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j2cwc",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act V. \\\"Ce n'est pas de cette petite blessure qu'elle peut mourir ...\\\" (Le m\u00e9decin, Arkel, Golaud)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j3kw_",
            "EntityName": "Petite Suite, L. 65, CD 71b, pour orchestre : IV. Ballet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j42wt",
            "EntityName": "Pr\u00e9ludes, Livre II, L. 123: XI. Les tierces altern\u00e9es. Mod\u00e9r\u00e9ment anim\u00e9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j49vq",
            "EntityName": "Pour le piano, L. 95: I. Pr\u00e9lude. \u00c0 Mademoiselle M.W. de Romilly. Assez anim\u00e9 et tr\u00e8s rythm\u00e9 - Tempo di cadenza - Tempo I"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j4b19",
            "EntityName": "Nocturnes, L 91: III. Sir\u00e8nes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j52k3",
            "EntityName": "Cinq po\u00e8mes de Baudelaire, L. 64, CD 70: V. La Mort des amants"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j5stf",
            "EntityName": "Sonate pour violon et piano en sol mineur, L. 140"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j6h8x",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: III. Le concile des faux dieux: N\u00b05"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j6n7b",
            "EntityName": "Cinq po\u00e8mes de Baudelaire, L. 64, CD 70: IV. Recueillement"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j7zrp",
            "EntityName": "F\u00eates galantes II, L. 104: I. Les Ing\u00e9nus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j8c26",
            "EntityName": "\u00c9tudes, L. 136: XII. Pour les accords"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j8hpw",
            "EntityName": "F\u00eates galantes II, L. 104: III. Colloque sentimental"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j8k40",
            "EntityName": "Preludes, Book I: 2. Voiles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j93t2",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act III, Scene I. \\\"Je les noue, je les noue aux branches du saule\\\" (Pell\u00e9as, M\u00e9lisande, Golaud)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j986w",
            "EntityName": "Petite Suite, L. 65, CD 71a, pour piano \u00e0 4 mains : II. Cort\u00e8ge"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j98ks",
            "EntityName": "\u00c9tudes, L. 136: IV. Pour les sixtes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j99gk",
            "EntityName": "Sonate pour violoncelle et piano: II. S\u00e9r\u00e9nade"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j9qcf",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: II. La chambre magique: N\u00b03"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jb7d3",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: IV. Le laurier bless\u00e9: N\u00b02"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jbfl3",
            "EntityName": "Streichquartett in g-Moll, Op. 10: Andantino, doucement expressif (Endress-Quartett)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jclnm",
            "EntityName": "Pr\u00e9ludes, Livre 1, L. 117 No. 9: La s\u00e9r\u00e9nade interrompue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jcpgz",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien, fragments symphoniques: II. Danse extatique et final du premier acte"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jcyrt",
            "EntityName": "Engulfed Cathedral (Debussy)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jdffp",
            "EntityName": "Sonata for Violin and Piano in G Minor, L 140: II. Interm\u00e8de: fantasque et l\u00e9ger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jdgg0",
            "EntityName": "Preludes, Book II: 2. Feuilles mortes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jf98_",
            "EntityName": "Musique pour \u201cLe Roi Lear\u201d, L. 107: Fanfare d\u2019ouverture"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jfm84",
            "EntityName": "Prelude No. 8: The Girl with the Flaxen Hair"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jg6m7",
            "EntityName": "Les Chansons de Bilitis, L. 96: No. 2. Les Comparaisons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jhxly",
            "EntityName": "En blanc et noir: III. Scherzando"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jkghl",
            "EntityName": "Preludes, Book II: 6. General Lavine - Eccentric"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jlbpm",
            "EntityName": "Premi\u00e8re Rapsodie pour clarinette en si b\u00e9mol, avec accompagnement d'orchestre, L. 116, CD 124b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jm5dj",
            "EntityName": "Rondel chinois, L. 17, CD 11, m\u00e9lodie pour voix et piano \\\"Sur le lac bord\u00e9 d\u2019azal\u00e9e\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jnmw5",
            "EntityName": "Suite Bergamasque: Passepied: Allegretto ma non troppo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jp2jg",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act III, Scene I. \\\"Mes longs cheveux descendent\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jqdbr",
            "EntityName": "Les Chansons de Bilitis, L. 96: No. 9. L'Eau pure du bassin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jqhyb",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act II, Scene II. \\\"Tiens, o\u00f9 est l'anneau que je t'avais donn\u00e9?\\\" (Golaud, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jqjsm",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act V. \\\"Attention... attention\\\" (Arkel, Le m\u00e9decin)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jqsxk",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: III. Le concile des faux dieux: N\u00b07"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jr4pp",
            "EntityName": "Petite Suite, L. 65, CD 71a, pour piano \u00e0 4 mains : I. En bateau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_js17c",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: III. Le concile des faux dieux: N\u00b03"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_js5jc",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: III. Le concile des faux dieux: N\u00b06"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jt121",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act IV, Scene I. \\\"Maintenant que le p\u00e8re de Pell\u00e9as est sauv\u00e9 ...\\\" (Arkel, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jtc90",
            "EntityName": "Suite: Pour le Piano, L.95: III. Toccata (vif)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jv13d",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act III, Scene III. \\\"Ah! Je respire enfin!\\\" (Pell\u00e9as, Golaud)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jvgb9",
            "EntityName": "Ariettes oubli\u00e9es, L. 60, CD 63a : I. Le vent dans la plaine suspend son haleine, m\u00e9lodie pour voix et piano \\\"C'est l'extase langoureuse\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jvmy7",
            "EntityName": "Le promenoir des deux amants, L. 118, CD 129, m\u00e9lodies pour voix et piano : II. \\\"Crois mon conseil, ch\u00e8re Clim\u00e8ne\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jws40",
            "EntityName": "Preludes, Book I: 7. Ce qu'a vu le vent d'ouest"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jxdsw",
            "EntityName": "La Mer: II. Jeux de vagues"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jxk74",
            "EntityName": "Iberia No. 2 from \\\"Images\\\" for Orchestra: III. The Morning of a Holiday"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jy0gc",
            "EntityName": "Carry"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jy4lv",
            "EntityName": "Nocturnes, L. 91, CD 98: I. Nuages"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jy8nh",
            "EntityName": "Petite Suite, L. 65, CD 71b, pour orchestre : II. Cort\u00e8ge"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jyd58",
            "EntityName": "Pr\u00e9ludes, Livre I, L. 117: VIII. La fille aux cheveux de lin. Tr\u00e8s calme et doucement expressif"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jykjp",
            "EntityName": "Dialogue of the Wind and the Sea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jzrlf",
            "EntityName": "Spleen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k01yx",
            "EntityName": "En sourdine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k0d1c",
            "EntityName": "Les Chansons de Bilitis, L. 96: No. 11. Le Souvenir de Mnasidika"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k0srm",
            "EntityName": "From Dawn Till Noon on the Sea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k0t4j",
            "EntityName": "Pagodes from Estampes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k0vb_",
            "EntityName": "La Belle au bois dormant, L. 74, CD 81, m\u00e9lodie \\\"Des trous \u00e0 son pourpoint vermeil\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k29xg",
            "EntityName": "Les Chansons de Bilitis, L. 96: No. 10. La Danseuse aux crotales"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k2hh2",
            "EntityName": "Preludes, Book II: 12. Feux d'artifice"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k34tp",
            "EntityName": "F\u00eates galantes (Premier recueil), L. 80, CD 86 : II. Fantoches, m\u00e9lodie pour voix et piano \\\"Scaramouche et Pulcinella\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k3h6d",
            "EntityName": "Les Chansons de Bilitis, L. 96: No. 4. Chanson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k3vd9",
            "EntityName": "Le promenoir des deux amants, L. 118, CD 129, m\u00e9lodies pour voix et piano : III. \\\"Je tremble en voyant ton visage\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k3x0t",
            "EntityName": "Nocturnes, L. 91, CD 98: II. F\u00eates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k3zl4",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: III. Le concile des faux dieux: N\u00b01"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k42mz",
            "EntityName": "Pr\u00e9ludes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k4g8h",
            "EntityName": "\u00c9tudes, L. 136: III. Pour les quartes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k4h6f",
            "EntityName": "Pell\u00e9as et M\u00e9lisande - Concert Suite: Acte I. Une for\u00eat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k4lrp",
            "EntityName": "Coquetterie posthume, L. 39, CD 50, m\u00e9lodie pour voix et piano \\\"Quand je mourrai, que l\u2019on me mette\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k4v8w",
            "EntityName": "Ariettes oubli\u00e9es, L. 60, CD 63a : VI. Aquarelles, 2. Spleen, m\u00e9lodie pour voix et piano \\\"Les roses \u00e9taient toutes rouges\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k4z7f",
            "EntityName": "Children's Corner, L. 113: V. The Little Shepherd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k5d2x",
            "EntityName": "Images pour orchestre, L 122: III. Rondes de printemps"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k630v",
            "EntityName": "Apparition, L. 53, CD 57, m\u00e9lodie pour voix et piano \\\"La lune s\u2019attristait. Des s\u00e9raphins en pleurs\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k63t3",
            "EntityName": "Arabesque 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k673s",
            "EntityName": "Ariettes oubli\u00e9es, L. 60, CD 63a : II. Il pleut doucement sur la ville, m\u00e9lodie pour voix et piano \\\"Il pleure dans mon c\u0153ur comme il pleure sur la ville\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k737_",
            "EntityName": "Petite Suite, L. 65, CD 71b, pour orchestre : III. Menuet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k73zm",
            "EntityName": "Children's Corner, L. 113: II. Jimbo's Lullaby"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k7d0l",
            "EntityName": "Petite Suite, L. 65, CD 71a, pour piano \u00e0 4 mains"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k7r_r",
            "EntityName": "Nocturnes, L 91: I. Nuages"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kbxxp",
            "EntityName": "Cinq po\u00e8mes de Baudelaire, L. 64, CD 70: I. Le Balcon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kc5_1",
            "EntityName": "Pr\u00e9ludes, Livre II, L. 123: IV. \u00abLes f\u00e9es sont d'exquises danseuses\u00bb. Rapide et l\u00e9ger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kc9vf",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act V. \\\"Qu'y-a-t-il? Qu'est-ce que toutes ces femmes viennent faire ici?\\\" (Golaud, Le m\u00e9decin, Arkel)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kcx_z",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act III, Scene IV. \\\"Ah! Ah! Petite m\u00e8re a allum\u00e9 sa lampe\\\" (Yniold, Golaud)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kdtrr",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien, fragments symphoniques: III. La Passion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kf9wt",
            "EntityName": "N\u00b0 5: The Film: Clair de Lune"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kfrmb",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien, L. 124: Prologue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kfwhr",
            "EntityName": "Preludes, Book II: 10. Canope"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kfzpt",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act III, Scene I. Une des tours du ch\u00e2teau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kg5pr",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: III. Le concile des faux dieux: N\u00b02"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kggph",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act IV, Scene II. \\\"Quel est ce bruit? On ferme les portes\\\" (Pell\u00e9as, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kgvk3",
            "EntityName": "Proses lyriques, L. 84, CD 90 : II. De Gr\u00e8ve, m\u00e9lodie \\\"Sur la mer les cr\u00e9puscules tombent\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kh_kk",
            "EntityName": "Sonata for Violin and Piano in G Minor, L 140: I. Allegro vivo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kh4ct",
            "EntityName": "Pell\u00e9as et M\u00e9lisande, L. 88, CD 93: Acte IV"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kh4ps",
            "EntityName": "Trois Chansons de France, L. 102: III. Rondel: Pour ce que Plaisance est morte"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kjyvx",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act IV, Scene II. \\\"On dirait que ta voix a pass\u00e9 sur la mer au printemps!\\\" (Choeur, M\u00e9lisande, Pell\u00e9as, Genevi\u00e8ve)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kjz6p",
            "EntityName": "Children's Corner, L. 113: VI. Golliwogg's Cake-Walk"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kks2z",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: V. Le paradis: N\u00b02"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kkvmy",
            "EntityName": "\u00c9tudes, L. 136: X. Pour les sonorit\u00e9s oppos\u00e9es"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kljjn",
            "EntityName": "\u00c9tudes, L. 136: VI. Pour les huits doigts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_km12c",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act II, Scene I. \\\"C'est au bord d'une fontaine aussi qu'il vous a trouv\u00e9e?\\\" (Pell\u00e9as, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_km14z",
            "EntityName": "F\u00eates galantes II, L. 104: II. Le Faune"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kmffq",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act IV, Scene II. \\\"C'est le dernier soir ...\\\" (Pell\u00e9as, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_rk7bq",
            "EntityName": "Premi\u00e8re Suite d\u2019orchestre, L. 50, CD 46 : II. Ballet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_rkpdn",
            "EntityName": "R\u00eaverie, L. 8, CD 3, m\u00e9lodie pour voix et piano \\\"Le Z\u00e9phir \u00e0 la douce haleine\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_rkyxc",
            "EntityName": "Romance, L. 43, CD 53, m\u00e9lodie pour voix et piano \\\"Silence ineffable de l\u2019heure\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_rn5wm",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien, L. 124: Acte III \\\"Le Concile des faux dieux\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_rth63",
            "EntityName": "Premi\u00e8re Suite d\u2019orchestre, L. 50, CD 46 : III. R\u00eave"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_rv468",
            "EntityName": "La Fille aux cheveux de lin, L. 33, CD 15, m\u00e9lodie pour voix et piano \\\"Sur la luzerne en fleur\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_rvrgg",
            "EntityName": "Premi\u00e8re Suite d\u2019orchestre, L. 50, CD 46 : I. F\u00eate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_rwh7q",
            "EntityName": "Premi\u00e8re Suite d\u2019orchestre, L. 50, CD 46 : IV. Bacchanale (Cort\u00e8ge et Bacchanale)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010_dtxz",
            "EntityName": "Trois chansons de Charles d'Orl\u00e9ans, pour ch\u0153ur \u00e0 quatre voix mixtes, L. 92, CD 99: III. \\\"Yver, vous n'estes qu'un vilain \\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010s18wn",
            "EntityName": "Bilitis: II. Pour un tombeau sans nom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010s8lf0",
            "EntityName": "Trois po\u00e8mes de St\u00e9phane Mallarm\u00e9, L. 127, CD 135: III. \u00c9ventail \\\"\u00d4 r\u00eaveuse pour que je plonge\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010sytyv",
            "EntityName": "Bilitis: IV. Pour la danseuse aux crotales"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010sz7qv",
            "EntityName": "Trois po\u00e8mes de St\u00e9phane Mallarm\u00e9, L. 127, CD 135: I. Soupir \\\"Mon \u00e2me vers ton front o\u00f9 r\u00eave, \u00f4 calme s\u0153ur\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010tnyxh",
            "EntityName": "Bilitis: VI. Pour remercier la pluie au matin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010tpkzw",
            "EntityName": "Trois po\u00e8mes de St\u00e9phane Mallarm\u00e9, L. 127, CD 135: II. Placet futile \\\"Princesse! \u00c0 jalouser le destin d'une H\u00e9b\u00e9\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010vft_p",
            "EntityName": "Bilitis: III. Pour que la nuit soit propice"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010xv_jw",
            "EntityName": "Khamma"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010y5t8h",
            "EntityName": "Clair de lune, L. 32, CD 45, m\u00e9lodie pour voix et piano \\\"Votre \u00e2me est un paysage choisi\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010y6d7d",
            "EntityName": "My Reverie (Debussy's \\\"Reverie\\\")"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010yk19g",
            "EntityName": "Bilitis: V. Pour l'\u00e9gyptienne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010ylz79",
            "EntityName": "Trois chansons de Charles d'Orl\u00e9ans, pour ch\u0153ur \u00e0 quatre voix mixtes, L. 92, CD 99: II. \\\"Quand j'ay ouy le tabourin\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010z9pqn",
            "EntityName": "Rapsodie pour orchestre et saxophone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010zfkcw",
            "EntityName": "Bilitis: I. Pour invoquer Pan, dieu du vent d'\u00e9t\u00e9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010zyg_m",
            "EntityName": "Petite Pi\u00e8ce"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01248h9t",
            "EntityName": "UTSUKUSHII YUUGURE"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0133nsl0",
            "EntityName": "Romance, L. 52, CD 56, m\u00e9lodie pour voix et piano \\\"Voici que le printemps, ce fil l\u00e9ger d\u2019avril\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0135ftry",
            "EntityName": "Paysage sentimental, L 45, CD 55, m\u00e9lodie pour voix et piano \\\"Le ciel d\u2019hiver si doux, si triste, si dormant\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0135s85z",
            "EntityName": "Chanson espagnole, L. 42, CD 49, duo pour 2 voix \u00e9gales \\\"Nous venions de voir le taureau\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0135ycg0",
            "EntityName": "Triolet \u00e0 Philis \\\"Z\u00e9phir\\\", L. 12, CD 19, m\u00e9lodie pour voix et piano \\\"Si j\u2019\u00e9tais le z\u00e9phir ail\u00e9\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0136b801",
            "EntityName": "Musique, L. 44, CD 54, m\u00e9lodie pour voix et piano \\\"La lune se levait, pure, mais plus glac\u00e9e\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01381b1q",
            "EntityName": "Printemps, L. 61, CD 68a, suite symphonique en mi majeur pour 2 pianos et ch\u0153ur"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zprb",
            "EntityName": "Pell\u00e9as et M\u00e9lisande"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027kxq4",
            "EntityName": "Cello Sonata"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rtdzh",
            "EntityName": "String Quartet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.033nf5",
            "EntityName": "Children's Corner"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c7ct9",
            "EntityName": "Pagodes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c7cvp",
            "EntityName": "Jardins sous la pluie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cy7m0",
            "EntityName": "Voiles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cy7ps",
            "EntityName": "Ce qu'a vu le vent d'ouest"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cy8t5",
            "EntityName": "Des pas sur la neige"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cy92g",
            "EntityName": "Hommage \u00e0 S. Pickwick Esq. P.P.M.P.C."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03d7mtj",
            "EntityName": "Violin Sonata"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03h2pvy",
            "EntityName": "Brouillards"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03r98g",
            "EntityName": "L'isle joyeuse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0409840",
            "EntityName": "Le Martyre de saint S\u00e9bastien"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.042cky",
            "EntityName": "Suite bergamasque"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047rcxb",
            "EntityName": "\u00c9tudes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.053wty",
            "EntityName": "Syrinx"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b042d",
            "EntityName": "La chute de la maison Usher"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b2wv5",
            "EntityName": "Le diable dans le beffroi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b4_47",
            "EntityName": "La plus que lente"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b508d",
            "EntityName": "Rodrigue et Chim\u00e8ne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05q7yst",
            "EntityName": "Premi\u00e8re rhapsodie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06pzhs",
            "EntityName": "La mer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06w5rgn",
            "EntityName": "Pour le piano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y_gm",
            "EntityName": "Prelude to the Afternoon of a Faun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.071vr8",
            "EntityName": "Nocturnes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07k8v62",
            "EntityName": "Deux arabesques"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bb3zh0",
            "EntityName": "Children's Corner, L. 113 No. 5: The Little Shepherd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bb5lbr",
            "EntityName": "Children's Corner, L. 113 No. 6: Golliwog's Cake-walk"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bb5zrh",
            "EntityName": "Ballade (slave), L. 70, CD 78, pour piano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cqw5w",
            "EntityName": "L'enfant prodigue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crjbd",
            "EntityName": "Jeux"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cxqwc",
            "EntityName": "Beau soir"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dq9b_",
            "EntityName": "Images pour orchestre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f44r_",
            "EntityName": "Reflets dans l'eau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g2x01",
            "EntityName": "Estampes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g3x2_",
            "EntityName": "Valse romantique"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8_7",
            "EntityName": "Les Ang\u00e9lus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8_g",
            "EntityName": "Proses Lyriques"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8_q",
            "EntityName": "Trois Chansons de France"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8_y",
            "EntityName": "Apparition"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8x_",
            "EntityName": "Chanson triste"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8x3",
            "EntityName": "Calme dans le demi-jour"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8xk",
            "EntityName": "L'\u00e9chelonnement des haies"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8xs",
            "EntityName": "La mer est plus belle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8y6",
            "EntityName": "Le son du cor s'afflige"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8yf",
            "EntityName": "Chanson espagnole"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8yn",
            "EntityName": "Coquetterie posthume"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8yw",
            "EntityName": "F\u00eate galante"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8z2",
            "EntityName": "Il dort encore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8zb",
            "EntityName": "Le lilas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8zk",
            "EntityName": "Fleur des Bl\u00e9s"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8zs",
            "EntityName": "La damoiselle \u00e9lue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm92k",
            "EntityName": "Dans le Jardin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm93g",
            "EntityName": "La Belle au Bois dormant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm94c",
            "EntityName": "Ariettes Oubli\u00e9es"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm94l",
            "EntityName": "F\u00eates Galantes I"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm94t",
            "EntityName": "F\u00eates Galantes II"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm965",
            "EntityName": "Trois Ballades de Fran\u00e7ois Villon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm96g",
            "EntityName": "Trois Chansons de Charles d'Orl\u00e9ans"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm972",
            "EntityName": "Cinq Po\u00e8mes de Baudelaire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm97c",
            "EntityName": "La Romance d'Ariel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm97y",
            "EntityName": "Chansons de Bilitis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm98w",
            "EntityName": "De r\u00eave"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm993",
            "EntityName": "De gr\u00e8ve"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm99c",
            "EntityName": "De fleurs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm99m",
            "EntityName": "De soir"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9bl",
            "EntityName": "La grotte"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9bv",
            "EntityName": "Pour ce que Plaisance est morte"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9cf",
            "EntityName": "Le temps a laiss\u00e9 son manteau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9dc",
            "EntityName": "Trois Po\u00e8mes de St\u00e9phane Mallarm\u00e9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9dz",
            "EntityName": "Chevaux de bois"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9f6",
            "EntityName": "Green"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9fg",
            "EntityName": "C'est l'extase"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9fq",
            "EntityName": "L'ombre des arbres"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9gg",
            "EntityName": "En sourdine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9gq",
            "EntityName": "Clair de lune"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9gz",
            "EntityName": "Fantoches"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9hg",
            "EntityName": "Colloque sentimental"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9hq",
            "EntityName": "Le faune"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9hz",
            "EntityName": "Les ing\u00e9nus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9j6",
            "EntityName": "Aupr\u00e8s de cette grotte sombre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9jg",
            "EntityName": "Crois mon conseil, ch\u00e8re Clim\u00e8ne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9kd",
            "EntityName": "Je tremble en voyant ton visage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9nf",
            "EntityName": "Ballade que Villon feit \u00e0 la requeste de sa m\u00e8re pour prier Nostre-Dame"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9ns",
            "EntityName": "Ballade de Villon a s'amye"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9p0",
            "EntityName": "Ballade des femmes de Paris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9p8",
            "EntityName": "Dieu! qu'il la fait bon regarder!"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9pj",
            "EntityName": "Yver, vous n'estes qu'un vilain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9pt",
            "EntityName": "Quant j'ai ouy le tabourin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9q1",
            "EntityName": "Le balcon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9q9",
            "EntityName": "La mort des amants"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9qk",
            "EntityName": "Harmonie du soir"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9qt",
            "EntityName": "Le jet d'eau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9r1",
            "EntityName": "Recueillement"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9r9",
            "EntityName": "L'eau pure du bassin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9rk",
            "EntityName": "La Fl\u00fbte de Pan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9rt",
            "EntityName": "Bilitis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9s1",
            "EntityName": "Le Tombeau des Na\u00efades"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9s9",
            "EntityName": "La chevelure"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9sk",
            "EntityName": "La pluie au matin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9st",
            "EntityName": "Les Comparaisons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9t1",
            "EntityName": "Les contes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9t9",
            "EntityName": "La Danseuse aux crotales"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9tk",
            "EntityName": "Chant pastoral"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9tt",
            "EntityName": "Les Courtisanes \u00e9gyptiennes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9v1",
            "EntityName": "Chanson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9v9",
            "EntityName": "La Partie d'osselets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9vk",
            "EntityName": "Le Souvenir de Mnasidika"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9vt",
            "EntityName": "Le Tombeau sans nom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9xw",
            "EntityName": "\u00c9ventail"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9y3",
            "EntityName": "Placet futile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9z7",
            "EntityName": "Soupir"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbg7",
            "EntityName": "Il pleure dans mon c\u0153ur"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmblg",
            "EntityName": "No\u00ebl des enfants qui n'ont plus de maisons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmblp",
            "EntityName": "Rondel chinois"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmblw",
            "EntityName": "Nuits blanches"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbm2",
            "EntityName": "Les papillons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbm9",
            "EntityName": "Nuit d'\u00c9toiles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbmj",
            "EntityName": "R\u00eaverie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbmr",
            "EntityName": "Les roses"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbmz",
            "EntityName": "Souhait"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbn5",
            "EntityName": "Mandoline"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbnm",
            "EntityName": "S\u00e9r\u00e9nade"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbnv",
            "EntityName": "Pantomime"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbpd",
            "EntityName": "Rondeau: 'Fut-il jamais'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbpm",
            "EntityName": "Trag\u00e9die"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbqw",
            "EntityName": "Lia's Recitative and Aria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbr3",
            "EntityName": "Sim\u00e9on's Recitative and Aria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbrc",
            "EntityName": "Nuit sans fin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbrm",
            "EntityName": "Lorsqu'elle est entr\u00e9e"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbvm",
            "EntityName": "Paysage sentimental"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbvv",
            "EntityName": "Musique"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbw1",
            "EntityName": "Regret"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbw8",
            "EntityName": "Deux Romances"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbx2",
            "EntityName": "Voici que le printemps"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmc06",
            "EntityName": "Romance"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hrc0vc",
            "EntityName": "Sonata for flute, viola and harp"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n5vf6t",
            "EntityName": "Petite Suite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0sggpxq",
            "EntityName": "En blanc et noir"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0wf_vpd",
            "EntityName": "Fantaisie for piano and orchestra"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0wfy5sl",
            "EntityName": "Piano Trio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zh1xxd",
            "EntityName": "Khamma: Sc\u00e8ne 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zh5fb7",
            "EntityName": "Six \u00e9pigraphes antiques, L. 131"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zh6nqy",
            "EntityName": "Cort\u00e8ge et Air de danse de \\\"L\u2019Enfant prodigue\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zh8cfz",
            "EntityName": "Khamma: Sc\u00e8ne 1. Le Temple int\u00e9rieur du Grand-Dieu Amun-Ra \u2013"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zh8g5x",
            "EntityName": "Mazurka, L. 67, CD 75, pour piano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zh8j_z",
            "EntityName": "Les Elfes, CD 25, m\u00e9lodie pour voix et piano \\\"Du sentier des bois aux daims familiers\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhfddr",
            "EntityName": "Trois M\u00e9lodies, L. 81, CD 85, pour une voix avec accompagnement de piano : II. Le son du cor s\u2019afflige vers les bois."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhhl6q",
            "EntityName": "Deux danses pour Harpe, L. 103"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhk1t8",
            "EntityName": "Two movements from \\\"L\u2019Enfant prodigue\\\": Pr\u00e9lude"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhk1wf",
            "EntityName": "Six \u00e9pigraphes antiques, L. 131: V. Pour l'\u00c9gyptienne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhpnhw",
            "EntityName": "Ministrels for Cello and Piano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhsb53",
            "EntityName": "\u00c9tude retrouv\u00e9e"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhv3tc",
            "EntityName": "Printemps, L. 61, CD 68b : II. Mod\u00e9r\u00e9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhvgd9",
            "EntityName": "Six \u00e9pigraphes antiques, L. 131: II. Pour un tombeau sans nom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhzxkd",
            "EntityName": "Images, Livre 2, L. 111: No. 2. Et la lune descend sur le temple qui fut"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zj0y0p",
            "EntityName": "La Bo\u00eete \u00e0 joujoux : III. 2e tableau. Le Champ de bataille"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zj155p",
            "EntityName": "Khamma: Au Mouvement \u2013"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zj20cd",
            "EntityName": "Pi\u00e8ce pour le V\u00eatement du bless\u00e9 (Page d'album), L. 133"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zj777b",
            "EntityName": "Images oubli\u00e9es, L. 87: Quelques aspects de 'Nous n'irons plus au bois' parce qu'il fait un temps insupportable. Tr\u00e8s vite - Mod\u00e9r\u00e9 - Premier Mouvement (vit et joyeax)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zj788m",
            "EntityName": "Images I: II. Hommages Rameau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zj8v8r",
            "EntityName": "Rhapsodie pour saxophone et orchestre, L. 98"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjbv6y",
            "EntityName": "Khamma, L 125"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjf6zn",
            "EntityName": "Marche \u00e9cossaise sur un th\u00e8me populaire, L. 77, CD 83b (Marche des anciens comtes de Ross, d\u00e9di\u00e9e \u00e0 leur descendant le G\u00e9n\u00e9ral Meredith Reid, grand-croix de l'ordre royal du R\u00e9dempteur)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjgk9n",
            "EntityName": "Le Matelot qui tombe \u00e0 l\u2019eau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjk61w",
            "EntityName": "\u00c9l\u00e9gie, L. 138"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjmrly",
            "EntityName": "Images, Livre 1, L. 110: No. 3. Mouvement"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjnxb5",
            "EntityName": "Rapsodie pour saxophone et piano, L. 98"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjqlpp",
            "EntityName": "The Tears of Billie Blue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjr1yc",
            "EntityName": "Danse profane"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjsdbt",
            "EntityName": "D'un cahier d'esquisses, L. 99"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjt4l9",
            "EntityName": "Images, Livre 2, L. 111: No. 3. Poissons d'or"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjtsvm",
            "EntityName": "Khamma: Sc\u00e8ne 2 \u2013"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjtymf",
            "EntityName": "Khamma: Deuxi\u00e8me Danse. Assez anim\u00e9 \u2013 Plus anim\u00e9 peu \u00e0 peu \u2013 Tr\u00e8s anim\u00e9 \u2013"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjvx06",
            "EntityName": "L\u2019Enfant prodigue, L. 57, CD 61, sc\u00e8ne lyrique \\\"L\u2019ann\u00e9e, en vain chasse l\u2019ann\u00e9e\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zk1hhj",
            "EntityName": "No\u00ebl des enfants qui n'ont plus de maison, L. 139, CD 147, m\u00e9lodie pour voix et piano \\\"Nous n\u2019avons plus de maison\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zk27d5",
            "EntityName": "Tarantelle styrienne, L. 69, CD 77a, (Danse) pour piano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zk2k0c",
            "EntityName": "Printemps, L. 61, CD 68b : I. Tr\u00e8s mod\u00e9r\u00e9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zk40mx",
            "EntityName": "Deux danses pour Harpe, L. 103: Danse sacr\u00e9e"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zk44cj",
            "EntityName": "Masques, L. 105"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zk8sj4",
            "EntityName": "Cort\u00e8ge et Air de danse de \\\"L\u2019Enfant prodigue\\\": Cort\u00e8ge"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkc50w",
            "EntityName": "Petite Suite, L. 65: I. En bateau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkdj_g",
            "EntityName": "Khamma: Premi\u00e8re Danse. Grave et lent \u2013 Animez \u2013 Revenez au Mouvement \u2013 Plus lent \u2013 Animez peu \u00e0 peu \u2013"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkg3v2",
            "EntityName": "La Bo\u00eete \u00e0 joujoux : IV. 3e tableau. La Bergerie \u00e0 vendre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkmw83",
            "EntityName": "Nocturne, L. 82, CD 89, pour piano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zknbxp",
            "EntityName": "Cort\u00e8ge et Air de danse de \\\"L\u2019Enfant prodigue\\\": Air de danse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkp3h9",
            "EntityName": "Printemps, L. 61, CD 68b, suite symphonique en mi majeur pour 2 pianos et orchestre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkpjrv",
            "EntityName": "Marche \u00e9cossaise sur un th\u00e8me populaire, L. 77, CD 83a (Marche des anciens comtes de Ross, d\u00e9di\u00e9e \u00e0 leur descendant le G\u00e9n\u00e9ral Meredith Reid, grand-croix de l'ordre royal du R\u00e9dempteur)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkqvlx",
            "EntityName": "Les soirs illumin\u00e9s par l'ardeur du charbon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkwf3m",
            "EntityName": "Fantaisie pour piano et orchestre, L. 73, CD 72 : II. Lento e molto espressivo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkwkn9",
            "EntityName": "Fantaisie pour piano et orchestre, L. 73, CD 72"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zl_133",
            "EntityName": "Berceuse h\u00e9ro\u00efque pour piano, L. 132"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zl_41l",
            "EntityName": "Fantaisie pour piano et orchestre, L. 73, CD 72 : III. Allegro molto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zl_97h",
            "EntityName": "Fantaisie pour piano et orchestre, L. 73, CD 72 : I. Andante - Allegro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zl1f05",
            "EntityName": "La Bo\u00eete \u00e0 joujoux : II. 1er tableau. Le Magasin de jouets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zl3q5p",
            "EntityName": "Images oubli\u00e9es, L. 87: Lent (m\u00e9lancolique et doux)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zl5lbp",
            "EntityName": "Mes longs cheveux"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zl6c71",
            "EntityName": "Khamma: Pr\u00e9lude. Mod\u00e9r\u00e9ment anim\u00e9 (comme un lointain tumulte) \u2013"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zl8kw5",
            "EntityName": "Images II: I. Cloches trevers les feuilles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zl8vp5",
            "EntityName": "Hommage \u00e0 Joseph Haydn, L. 115"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlb3c4",
            "EntityName": "Flots, palmes, sables, L. 25, CD 38, m\u00e9lodie pour voix et piano (ou harpe) \\\"Loin des yeux du monde\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlcfft",
            "EntityName": "Danse boh\u00e9mienne, L. 9, CD 4, pour piano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlcrsg",
            "EntityName": "La Bo\u00eete \u00e0 joujoux : VI. \u00c9pilogue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlgp7k",
            "EntityName": "Khamma: Troisi\u00e8me Danse. Tr\u00e8s lent \u2013 Plus p\u00e9n\u00e9trant \u2013 Doucement contenu \u2013"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlgwg7",
            "EntityName": "La Bo\u00eete \u00e0 Joujoux : I. Pr\u00e9lude. Le Sommeil de la bo\u00eete"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlhjbs",
            "EntityName": "Images oubli\u00e9es, L. 87: Dans le mouvement d'une 'Sarabande', c'est-\u00e0-dire avec une \u00e9l\u00e9gance gr\u00e2ve et lente, m\u00eame un peu vieux portrait, souvenir du Louvre, etc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlkyst",
            "EntityName": "Le petit N\u00e8gre, L. 114"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlmtxl",
            "EntityName": "La Bo\u00eete \u00e0 joujoux : V. 4e tableau. Apr\u00e8s fortune faite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlrdgg",
            "EntityName": "Morceau de concours, L. 108"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zls891",
            "EntityName": "Trois M\u00e9lodies, L. 81, CD 85, pour une voix avec accompagnement de piano : III. L\u2019\u00e9chelonnement des haies moutonne \u00e0 l\u2019infini"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlswy6",
            "EntityName": "\u590f\u306e\u98a8\u306e\u795e\uff08\u300c\uff16\u3064\u306e\u53e4\u4ee3\u5893\u7891\u540d\u300d\u3088\u308a\uff09"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlz0_y",
            "EntityName": "L\u2019Archet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlzpy2",
            "EntityName": "Fleurs des bl\u00e9s, L. 7, CD 16, m\u00e9lodie pour voix et piano \\\"Le long des bl\u00e9s que la brise fait onduler\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zm4n6l",
            "EntityName": "Berceuse h\u00e9ro\u00efque pour orchestre, L. 132"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zm6_br",
            "EntityName": "Danse: Tarantelle styrienne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zm683f",
            "EntityName": "Aimons-nous et dormons, L. 16, CD 7, m\u00e9lodie pour voix et piano \\\"Aimons-nous et dormons, sans songer au reste du monde\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zmww8h",
            "EntityName": "Duo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx19pm",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: IV. Le laurier bless\u00e9: N\u00b03"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx26r5",
            "EntityName": "Premi\u00e8re Rapsodie pour clarinette en si b\u00e9mol, avec accompagnement de piano, L. 116, CD 124a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx2wb7",
            "EntityName": "Trio in G Major for Violin, Cello and Piano: IV. Finale. Appassionato"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx5s79",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act V. \\\"M\u00e9lisande...M\u00e9lisande ...\\\" - \\\"Est-ce vous, Golaud?\\\" (Golaud, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx5zs1",
            "EntityName": "Pr\u00e9lude \u00e0 l'apr\u00e8s-midi d'un faune, L. 86, CD 87"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx66ys",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien, L. 124: Acte III \\\"Le Concile des faux dieux\\\". Fanfare no. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx7352",
            "EntityName": "Les Chansons de Bilitis, L. 96: No. 12. La Pluie au matin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx7xv5",
            "EntityName": "Les Chansons de Bilitis, L. 96: No. 5. La Partie d'osselets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx9d8y",
            "EntityName": "Suite Bergamasque - Menuet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx9qvj",
            "EntityName": "Mandoline, L. 29, CD 43, m\u00e9lodie pour voix et piano \\\"Les donneurs de s\u00e9r\u00e9nades\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxbzr5",
            "EntityName": "Sonate f\u00fcr Violine und Klavier in g-Moll: Finale: Tr\u00e8s anim\u00e9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxfdj8",
            "EntityName": "Quatuor \u00e0 cordes en sol mineur, op. 10, L. 85, CD 91 : I. Anim\u00e9 et tr\u00e8s d\u00e9cid\u00e9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxfkgp",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act II, Scene III. \\\"Oui, c'est ici, nous y sommes\\\" (Pell\u00e9as, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxhrfq",
            "EntityName": "Six \u00e9pigraphes antiques, L. 131: IV. Pour la danseuse aux crotales"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxlf2h",
            "EntityName": "Preludes, Book I: 11. La Danse de Puck"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxnb2h",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien, L. 124: Acte III \\\"Le Concile des faux dieux\\\". Fanfare no. 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxnwpv",
            "EntityName": "Minstrels"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxpq7z",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act I, Scene II. \\\"Je n'en dis rien\\\" (Arkel, Genevi\u00e8ve)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxrl2g",
            "EntityName": "Estampes - I. Pagodes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxrr8c",
            "EntityName": "Menuet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxt6kz",
            "EntityName": "Musique pour \u201cLe Roi Lear\u201d, L. 107: Le Sommeil de Lear"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxv16w",
            "EntityName": "Pour le piano: II. Sarabande"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxvq0n",
            "EntityName": "Trio in G Major for Violin, Cello and Piano: III. Andante espressivo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxvyvq",
            "EntityName": "Pell\u00e9as et M\u00e9lisande - Concert Suite: Acte II, sc\u00e8ne 1. Une fontaine dans le parc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxwtzf",
            "EntityName": "Petite Suite, L. 65, CD 71a, pour piano \u00e0 4 mains : III. Menuet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxwzf0",
            "EntityName": "Trois Ballades de Fran\u00e7ois Villon, L. 119: III. Ballade des femmes de Paris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxxg9g",
            "EntityName": "Images pour orchestre, L 122: I. Gigues"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxxtm4",
            "EntityName": "F\u00eate galante, L. 23, CD 31, m\u00e9lodie pour voix et piano \\\"Voil\u00e0 Sylandre et Lycas et Myrtil\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxy7vf",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act IV, Scene I. \\\"Pell\u00e9as part ce soir\\\" (Golaud, Arkel, M\u00e9lisande)"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01vvy": "Claude Debussy"
    },
    "qid_topic_entity": {
      "Q4700": "Claude Debussy"
    },
    "index": 381
  },
  {
    "QuestionId": "WebQTest-1766",
    "RawQuestion": "what language do russians speak?",
    "ProcessedQuestion": "what language do russians speak",
    "Parses": [
      {
        "ParseId": "WebQTest-1766.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "russians",
        "TopicEntityName": "Russia",
        "TopicEntityMid": "m.06bnz",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.017dsl",
            "EntityName": "Osetin Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0198z0",
            "EntityName": "Chechen Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019yz7",
            "EntityName": "Tatar Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01bcw_",
            "EntityName": "Azerbaijani language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01qyqy",
            "EntityName": "Abaza Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01y_vl",
            "EntityName": "Mari language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020g7w",
            "EntityName": "Bashkir Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0234zj",
            "EntityName": "Avar Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0264gxt",
            "EntityName": "Aghul language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027bj_4",
            "EntityName": "Tsakhur Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02gj5b",
            "EntityName": "Tuvin Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwm9x",
            "EntityName": "Moksha Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lpht",
            "EntityName": "Erzya Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02mj1c",
            "EntityName": "Kalmyk-Oirat Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02mxzf",
            "EntityName": "Kabardian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02nbbh",
            "EntityName": "Adyghe Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q4t0g",
            "EntityName": "Rutul language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x9lm",
            "EntityName": "Lezgi Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037lmh",
            "EntityName": "Ingush Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037nfm",
            "EntityName": "Altai language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03f3f1",
            "EntityName": "Crimean Turkish Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gn_0",
            "EntityName": "Nogai Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03klw8",
            "EntityName": "Dargwa Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wt_j",
            "EntityName": "Komi language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.049jrm",
            "EntityName": "Udmurt Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04rxz0",
            "EntityName": "Kumyk Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04xqkr",
            "EntityName": "Karachay-Balkar Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.054zyh",
            "EntityName": "Buryat language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05l6md",
            "EntityName": "Yakut Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06b_j",
            "EntityName": "Russian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06bw_x",
            "EntityName": "Tabassaran Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0880p",
            "EntityName": "Yiddish Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.091dr6",
            "EntityName": "Lak Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.093gjw",
            "EntityName": "Khakas Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cjk9",
            "EntityName": "Ukrainian Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1766.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "russians",
        "TopicEntityName": "Russia",
        "TopicEntityMid": "m.06bnz",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06b_j",
            "EntityName": "Russian Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1766.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g6ff)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g6ff ns:people.ethnicity.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "russians",
        "TopicEntityName": "Russian",
        "TopicEntityMid": "m.0g6ff",
        "InferentialChain": [
          "people.ethnicity.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06b_j",
            "EntityName": "Russian Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06bnz": "Russia",
      "m.0g6ff": "Russian"
    },
    "qid_topic_entity": {
      "Q159": "Russia",
      "Q49542": "Russian"
    },
    "index": 382
  },
  {
    "QuestionId": "WebQTest-1726",
    "RawQuestion": "where is south portland?",
    "ProcessedQuestion": "where is south portland",
    "Parses": [
      {
        "ParseId": "WebQTest-1726.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0tpk4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0tpk4 ns:location.hud_county_place.county ?x .\n}\n",
        "PotentialTopicEntityMention": "south portland",
        "TopicEntityName": "South Portland",
        "TopicEntityMid": "m.0tpk4",
        "InferentialChain": [
          "location.hud_county_place.county"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nm9h",
            "EntityName": "Cumberland County"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1726.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0tpk4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0tpk4 ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "south portland",
        "TopicEntityName": "South Portland",
        "TopicEntityMid": "m.0tpk4",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050ks",
            "EntityName": "Maine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nm9h",
            "EntityName": "Cumberland County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0tpk4": "South Portland"
    },
    "qid_topic_entity": {
      "Q1000166": "South Portland"
    },
    "index": 383
  },
  {
    "QuestionId": "WebQTest-1506",
    "RawQuestion": "where is the home stadium of the new england patriots?",
    "ProcessedQuestion": "where is the home stadium of the new england patriots",
    "Parses": [
      {
        "ParseId": "WebQTest-1506.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05g3b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05g3b ns:sports.sports_team.arena_stadium ?x .\n}\n",
        "PotentialTopicEntityMention": "new england patriots",
        "TopicEntityName": "New England Patriots",
        "TopicEntityMid": "m.05g3b",
        "InferentialChain": [
          "sports.sports_team.arena_stadium"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0299m7",
            "EntityName": "Gillette Stadium"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05g3b": "New England Patriots"
    },
    "qid_topic_entity": {
      "Q193390": "New England Patriots"
    },
    "index": 384
  },
  {
    "QuestionId": "WebQTest-78",
    "RawQuestion": "what type of cancer did eva peron have?",
    "ProcessedQuestion": "what type of cancer did eva peron have",
    "Parses": [
      {
        "ParseId": "WebQTest-78.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dltj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dltj ns:people.deceased_person.cause_of_death ?x .\n?x ns:people.cause_of_death.parent_cause_of_death ns:m.0qcr0 .\n}\n",
        "PotentialTopicEntityMention": "eva peron",
        "TopicEntityName": "Eva Per\u00f3n",
        "TopicEntityMid": "m.0dltj",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0qcr0",
            "EntityName": "Cancer",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.cause_of_death.parent_cause_of_death",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d_bk",
            "EntityName": "Cervical cancer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0dltj": "Eva Per\u00f3n"
    },
    "qid_topic_entity": {
      "Q40933": "Eva Per\u00f3n"
    },
    "index": 385
  },
  {
    "QuestionId": "WebQTest-613",
    "RawQuestion": "what college did deion sanders jr go to?",
    "ProcessedQuestion": "what college did deion sanders jr go to",
    "Parses": [
      {
        "ParseId": "WebQTest-613.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03n69x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03n69x ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "deion sanders",
        "TopicEntityName": "Deion Sanders",
        "TopicEntityMid": "m.03n69x",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01jq0j",
            "EntityName": "Florida State University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03n69x": "Deion Sanders"
    },
    "qid_topic_entity": {
      "Q954184": "Deion Sanders"
    },
    "index": 386
  },
  {
    "QuestionId": "WebQTest-98",
    "RawQuestion": "who was vice president when jfk was president?",
    "ProcessedQuestion": "who was vice president when jfk was president",
    "Parses": [
      {
        "ParseId": "WebQTest-98.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d3k14)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d3k14 ns:government.us_president.vice_president ?x .\n}\n",
        "PotentialTopicEntityMention": "jfk",
        "TopicEntityName": "John F. Kennedy",
        "TopicEntityMid": "m.0d3k14",
        "InferentialChain": [
          "government.us_president.vice_president"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f7fy",
            "EntityName": "Lyndon B. Johnson"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d3k14": "John F. Kennedy"
    },
    "qid_topic_entity": {
      "Q9696": "John F. Kennedy"
    },
    "index": 387
  },
  {
    "QuestionId": "WebQTest-1772",
    "RawQuestion": "who is the prime minister of spain 2011?",
    "ProcessedQuestion": "who is the prime minister of spain 2011",
    "Parses": [
      {
        "ParseId": "WebQTest-1772.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "2011"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mkj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mkj ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.060bp .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "spain",
        "TopicEntityName": "Spain",
        "TopicEntityMid": "m.06mkj",
        "InferentialChain": [
          "government.governmental_jurisdiction.governing_officials",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.060bp",
            "EntityName": "Prime minister",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.basic_title",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2011-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2011-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2011-01-01",
          "End": "2011-12-31",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": "2011"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01p2pb",
            "EntityName": "Jos\u00e9 Luis Rodr\u00edguez Zapatero"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02k6pd",
            "EntityName": "Mariano Rajoy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06mkj": "Spain"
    },
    "qid_topic_entity": {
      "Q29": "Spain"
    },
    "index": 388
  },
  {
    "QuestionId": "WebQTest-493",
    "RawQuestion": "what type of government does australia have?",
    "ProcessedQuestion": "what type of government does australia have",
    "Parses": [
      {
        "ParseId": "WebQTest-493.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0chghy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0chghy ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "australia",
        "TopicEntityName": "Australia",
        "TopicEntityMid": "m.0chghy",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018wl5",
            "EntityName": "Parliamentary system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01q20",
            "EntityName": "Constitutional monarchy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g3y9q",
            "EntityName": "Federal monarchy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0chghy": "Australia"
    },
    "qid_topic_entity": {
      "Q408": "Australia"
    },
    "index": 389
  },
  {
    "QuestionId": "WebQTest-1564",
    "RawQuestion": "what did bobby darin die of?",
    "ProcessedQuestion": "what did bobby darin die of",
    "Parses": [
      {
        "ParseId": "WebQTest-1564.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0pj9t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0pj9t ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "bobby darin",
        "TopicEntityName": "Bobby Darin",
        "TopicEntityMid": "m.0pj9t",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wgfrh",
            "EntityName": "Surgical complications"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0pj9t": "Bobby Darin"
    },
    "qid_topic_entity": {
      "Q311267": "Bobby Darin"
    },
    "index": 390
  },
  {
    "QuestionId": "WebQTest-836",
    "RawQuestion": "who did vladimir lenin marry?",
    "ProcessedQuestion": "who did vladimir lenin marry",
    "Parses": [
      {
        "ParseId": "WebQTest-836.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05wh0sh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05wh0sh ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "PotentialTopicEntityMention": "vladimir lenin",
        "TopicEntityName": "Vladimir Lenin",
        "TopicEntityMid": "m.05wh0sh",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02c8zp",
            "EntityName": "Nadezhda Krupskaya"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05wh0sh": "Vladimir Lenin"
    },
    "qid_topic_entity": {
      "Q1394": "Vladimir Lenin"
    },
    "index": 391
  },
  {
    "QuestionId": "WebQTest-430",
    "RawQuestion": "what instruments does justin bieber use?",
    "ProcessedQuestion": "what instruments does justin bieber use",
    "Parses": [
      {
        "ParseId": "WebQTest-430.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? music.group_member.instruments_played is better"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06w2sn5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06w2sn5 ns:music.group_member.membership ?y .\n?y ns:music.group_membership.role ?x .\n}\n",
        "PotentialTopicEntityMention": "justin bieber",
        "TopicEntityName": "Justin Bieber",
        "TopicEntityMid": "m.06w2sn5",
        "InferentialChain": [
          "music.group_member.membership",
          "music.group_membership.role"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0290ngj",
            "EntityName": "Vocals"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06w2sn5": "Justin Bieber"
    },
    "qid_topic_entity": {
      "Q34086": "Justin Bieber"
    },
    "index": 392
  },
  {
    "QuestionId": "WebQTest-1033",
    "RawQuestion": "who played dana scully in x files?",
    "ProcessedQuestion": "who played dana scully in x files",
    "Parses": [
      {
        "ParseId": "WebQTest-1033.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.022jb6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.022jb6 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.0443v1 .\n}\n",
        "PotentialTopicEntityMention": "dana scully",
        "TopicEntityName": "Dana Scully",
        "TopicEntityMid": "m.022jb6",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0443v1",
            "EntityName": "The X-Files",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03d_w3h",
            "EntityName": "Gillian Anderson"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.022jb6": "Dana Scully"
    },
    "qid_topic_entity": {
      "Q2741": "Dana Scully"
    },
    "index": 393
  },
  {
    "QuestionId": "WebQTest-315",
    "RawQuestion": "where was country singer george jones born?",
    "ProcessedQuestion": "where was country singer george jones born",
    "Parses": [
      {
        "ParseId": "WebQTest-315.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01hb9p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01hb9p ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "george jones",
        "TopicEntityName": "George Jones",
        "TopicEntityMid": "m.01hb9p",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f9hl3",
            "EntityName": "Saratoga"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01hb9p": "George Jones"
    },
    "qid_topic_entity": {
      "Q508202": "George Jones"
    },
    "index": 394
  },
  {
    "QuestionId": "WebQTest-1733",
    "RawQuestion": "who or what influenced frank lloyd wright?",
    "ProcessedQuestion": "who or what influenced frank lloyd wright",
    "Parses": [
      {
        "ParseId": "WebQTest-1733.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02wlk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02wlk ns:influence.influence_node.influenced_by ?x .\n}\n",
        "PotentialTopicEntityMention": "frank lloyd wright",
        "TopicEntityName": "Frank Lloyd Wright",
        "TopicEntityMid": "m.02wlk",
        "InferentialChain": [
          "influence.influence_node.influenced_by"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cqpy",
            "EntityName": "Ebenezer Howard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01whq3q",
            "EntityName": "Georges I. Gurdjieff and Thomas De Hartmann"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06jmjj",
            "EntityName": "Bruce Price"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08304",
            "EntityName": "William Morris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bwx3",
            "EntityName": "Henry David Thoreau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bybqwn",
            "EntityName": "Elizabeth Gordon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dvns",
            "EntityName": "Louis Sullivan"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02wlk": "Frank Lloyd Wright"
    },
    "qid_topic_entity": {
      "Q5604": "Frank Lloyd Wright"
    },
    "index": 395
  },
  {
    "QuestionId": "WebQTest-253",
    "RawQuestion": "what countries included in the uk?",
    "ProcessedQuestion": "what countries included in the uk",
    "Parses": [
      {
        "ParseId": "WebQTest-253.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ssc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ssc ns:base.aareas.schema.administrative_area.administrative_children ?x .\n?x ns:base.aareas.schema.administrative_area.administrative_area_type ns:m.0hzjlmp .\n}\n",
        "PotentialTopicEntityMention": "uk",
        "TopicEntityName": "United Kingdom",
        "TopicEntityMid": "m.07ssc",
        "InferentialChain": [
          "base.aareas.schema.administrative_area.administrative_children"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0hzjlmp",
            "EntityName": "UK constituent country",
            "SourceNodeIndex": 0,
            "NodePredicate": "base.aareas.schema.administrative_area.administrative_area_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jx1",
            "EntityName": "England"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bcl",
            "EntityName": "Northern Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q1r",
            "EntityName": "Scotland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5g9",
            "EntityName": "Wales"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07ssc": "United Kingdom"
    },
    "qid_topic_entity": {
      "Q145": "United Kingdom"
    },
    "index": 396
  },
  {
    "QuestionId": "WebQTest-102",
    "RawQuestion": "who played barbara gordon batgirl?",
    "ProcessedQuestion": "who played barbara gordon batgirl",
    "Parses": [
      {
        "ParseId": "WebQTest-102.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03hvfx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03hvfx ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n}\n",
        "PotentialTopicEntityMention": "barbara gordon",
        "TopicEntityName": "Barbara Gordon",
        "TopicEntityMid": "m.03hvfx",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.041w0w1",
            "EntityName": "Ilyssa Fradin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0443_w",
            "EntityName": "Melinda McGraw"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y54_x6",
            "EntityName": "Hannah Gunn"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03hvfx": "Barbara Gordon"
    },
    "qid_topic_entity": {
      "Q194705": "Barbara Gordon"
    },
    "index": 397
  },
  {
    "QuestionId": "WebQTest-1596",
    "RawQuestion": "what language do they use in pakistan?",
    "ProcessedQuestion": "what language do they use in pakistan",
    "Parses": [
      {
        "ParseId": "WebQTest-1596.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05sb1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05sb1 ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "pakistan",
        "TopicEntityName": "Pakistan",
        "TopicEntityMid": "m.05sb1",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxcvy",
            "EntityName": "Urdu Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05sb1": "Pakistan"
    },
    "qid_topic_entity": {
      "Q843": "Pakistan"
    },
    "index": 398
  },
  {
    "QuestionId": "WebQTest-1524",
    "RawQuestion": "who invented islamic religion?",
    "ProcessedQuestion": "who invented islamic religion",
    "Parses": [
      {
        "ParseId": "WebQTest-1524.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0flw86)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0flw86 ns:religion.religion.founding_figures ?x .\n}\n",
        "PotentialTopicEntityMention": "islamic",
        "TopicEntityName": "Islam",
        "TopicEntityMid": "m.0flw86",
        "InferentialChain": [
          "religion.religion.founding_figures"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04s9n",
            "EntityName": "Muhammad in Islam"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0flw86": "Islam"
    },
    "qid_topic_entity": {
      "Q432": "Islam"
    },
    "index": 399
  },
  {
    "QuestionId": "WebQTest-1442",
    "RawQuestion": "what currency shall i take to croatia?",
    "ProcessedQuestion": "what currency shall i take to croatia",
    "Parses": [
      {
        "ParseId": "WebQTest-1442.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01pj7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01pj7 ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "croatia",
        "TopicEntityName": "Croatia",
        "TopicEntityMid": "m.01pj7",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z8jt",
            "EntityName": "Croatian kuna"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01pj7": "Croatia"
    },
    "qid_topic_entity": {
      "Q224": "Croatia"
    },
    "index": 400
  },
  {
    "QuestionId": "WebQTest-199",
    "RawQuestion": "what type of government does iraq have now?",
    "ProcessedQuestion": "what type of government does iraq have now",
    "Parses": [
      {
        "ParseId": "WebQTest-199.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d05q4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d05q4 ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "iraq",
        "TopicEntityName": "Iraq",
        "TopicEntityMid": "m.0d05q4",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018wl5",
            "EntityName": "Parliamentary system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06cx9",
            "EntityName": "Republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0glnsx",
            "EntityName": "Parliamentary republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j729",
            "EntityName": "Federal republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d05q4": "Iraq"
    },
    "qid_topic_entity": {
      "Q796": "Iraq"
    },
    "index": 401
  },
  {
    "QuestionId": "WebQTest-1084",
    "RawQuestion": "what sports do people play in poland?",
    "ProcessedQuestion": "what sports do people play in poland",
    "Parses": [
      {
        "ParseId": "WebQTest-1084.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05qhw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05qhw ns:sports.sports_team_location.teams ?x .\n}\n",
        "PotentialTopicEntityMention": "poland",
        "TopicEntityName": "Poland",
        "TopicEntityMid": "m.05qhw",
        "InferentialChain": [
          "sports.sports_team_location.teams"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025wfz7",
            "EntityName": "Poland national handball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026prdm",
            "EntityName": "Poland women's national handball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026xnhs",
            "EntityName": "Poland men's national volleyball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r6q5w",
            "EntityName": "Poland women's national volleyball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037p7l",
            "EntityName": "Asseco Gdynia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037p8c",
            "EntityName": "KK W\u0142oc\u0142awek"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037ph0",
            "EntityName": "Tur\u00f3w Zgorzelec"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03b6j8",
            "EntityName": "Poland national football team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gv21b",
            "EntityName": "Stal Gorz\u00f3w Wielkopolski"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047d9d5",
            "EntityName": "\u015al\u0105sk Wroc\u0142aw"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.051zxkk",
            "EntityName": "GT\u017b Grudzi\u0105dz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dd9mps",
            "EntityName": "Basket Zielona G\u00f3ra"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05qhw": "Poland"
    },
    "qid_topic_entity": {
      "Q36": "Poland"
    },
    "index": 402
  },
  {
    "QuestionId": "WebQTest-404",
    "RawQuestion": "what was lebron james first team?",
    "ProcessedQuestion": "what was lebron james first team",
    "Parses": [
      {
        "ParseId": "WebQTest-404.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jz6d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jz6d ns:basketball.basketball_player.player_statistics ?y .\n?y ns:basketball.basketball_player_stats.team ?x .\n}\n",
        "PotentialTopicEntityMention": "lebron james",
        "TopicEntityName": "LeBron James",
        "TopicEntityMid": "m.01jz6d",
        "InferentialChain": [
          "basketball.basketball_player.player_statistics",
          "basketball.basketball_player_stats.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jm7n",
            "EntityName": "Cleveland Cavaliers"
          }
        ]
      },
      {
        "ParseId": "WebQTest-404.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jz6d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jz6d ns:sports.drafted_athlete.drafted ?y .\n?y ns:sports.sports_league_draft_pick.team ?x .\n}\n",
        "PotentialTopicEntityMention": "lebron james",
        "TopicEntityName": "LeBron James",
        "TopicEntityMid": "m.01jz6d",
        "InferentialChain": [
          "sports.drafted_athlete.drafted",
          "sports.sports_league_draft_pick.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jm7n",
            "EntityName": "Cleveland Cavaliers"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01jz6d": "LeBron James"
    },
    "qid_topic_entity": {
      "Q36159": "LeBron James"
    },
    "index": 403
  },
  {
    "QuestionId": "WebQTest-2010",
    "RawQuestion": "what degrees does romney have?",
    "ProcessedQuestion": "what degrees does romney have",
    "Parses": [
      {
        "ParseId": "WebQTest-2010.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0271_s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0271_s ns:people.person.education ?y .\n?y ns:education.education.degree ?x .\n}\n",
        "PotentialTopicEntityMention": "romney",
        "TopicEntityName": "Mitt Romney",
        "TopicEntityMid": "m.0271_s",
        "InferentialChain": [
          "people.person.education",
          "education.education.degree"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.013zdg",
            "EntityName": "Juris Doctor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014mlp",
            "EntityName": "Bachelor of Arts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07s6fsf",
            "EntityName": "MBA"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0271_s": "Mitt Romney"
    },
    "qid_topic_entity": {
      "Q4496": "Mitt Romney"
    },
    "index": 404
  },
  {
    "QuestionId": "WebQTest-1608",
    "RawQuestion": "what language is mainly spoken in egypt?",
    "ProcessedQuestion": "what language is mainly spoken in egypt",
    "Parses": [
      {
        "ParseId": "WebQTest-1608.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k54)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k54 ns:location.country.languages_spoken ?x .\n?x ns:language.human_language.main_country ns:m.02k54 .\n}\n",
        "PotentialTopicEntityMention": "egypt",
        "TopicEntityName": "Egypt",
        "TopicEntityMid": "m.02k54",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02k54",
            "EntityName": "Egypt",
            "SourceNodeIndex": 0,
            "NodePredicate": "language.human_language.main_country",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012zfy",
            "EntityName": "Siwi Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hx2cr",
            "EntityName": "Egyptian Arabic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxbhg",
            "EntityName": "Sa'idi Arabic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wc2kf",
            "EntityName": "Bedawi Arabic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02k54": "Egypt"
    },
    "qid_topic_entity": {
      "Q79": "Egypt"
    },
    "index": 405
  },
  {
    "QuestionId": "WebQTest-44",
    "RawQuestion": "what is the state flower of arizona?",
    "ProcessedQuestion": "what is the state flower of arizona",
    "Parses": [
      {
        "ParseId": "WebQTest-44.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0vmt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0vmt ns:government.governmental_jurisdiction.official_symbols ?y .\n?y ns:location.location_symbol_relationship.symbol ?x .\n?y ns:location.location_symbol_relationship.Kind_of_symbol ns:m.04627gn .\n}\n",
        "PotentialTopicEntityMention": "arizona",
        "TopicEntityName": "Arizona",
        "TopicEntityMid": "m.0vmt",
        "InferentialChain": [
          "government.governmental_jurisdiction.official_symbols",
          "location.location_symbol_relationship.symbol"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04627gn",
            "EntityName": "State flower",
            "SourceNodeIndex": 0,
            "NodePredicate": "location.location_symbol_relationship.Kind_of_symbol",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m5w_",
            "EntityName": "Saguaro"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0vmt": "Arizona"
    },
    "qid_topic_entity": {
      "Q816": "Arizona"
    },
    "index": 406
  },
  {
    "QuestionId": "WebQTest-1005",
    "RawQuestion": "what is capital city of morocco?",
    "ProcessedQuestion": "what is capital city of morocco",
    "Parses": [
      {
        "ParseId": "WebQTest-1005.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04wgh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04wgh ns:location.country.capital ?x .\n}\n",
        "PotentialTopicEntityMention": "morocco",
        "TopicEntityName": "Morocco",
        "TopicEntityMid": "m.04wgh",
        "InferentialChain": [
          "location.country.capital"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fs44",
            "EntityName": "Rabat"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04wgh": "Morocco"
    },
    "qid_topic_entity": {
      "Q1028": "Morocco"
    },
    "index": 407
  },
  {
    "QuestionId": "WebQTest-2025",
    "RawQuestion": "which ocean does the zambezi river flow into?",
    "ProcessedQuestion": "which ocean does the zambezi river flow into",
    "Parses": [
      {
        "ParseId": "WebQTest-2025.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0p_70)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0p_70 ns:geography.river.mouth ?x .\n}\n",
        "PotentialTopicEntityMention": "zambezi river",
        "TopicEntityName": "Zambezi",
        "TopicEntityMid": "m.0p_70",
        "InferentialChain": [
          "geography.river.mouth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rz4",
            "EntityName": "Indian Ocean"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0p_70": "Zambezi"
    },
    "qid_topic_entity": {
      "Q43106": "Zambezi"
    },
    "index": 408
  },
  {
    "QuestionId": "WebQTest-837",
    "RawQuestion": "what year did the baltimore ravens win superbowl?",
    "ProcessedQuestion": "what year did the baltimore ravens win superbowl",
    "Parses": [
      {
        "ParseId": "WebQTest-837.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ct6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ct6 ns:sports.sports_team.championships ?x .\n?x ns:sports.sports_championship_event.championship ns:m.06x5s .\n}\n",
        "PotentialTopicEntityMention": "baltimore ravens",
        "TopicEntityName": "Baltimore Ravens",
        "TopicEntityMid": "m.01ct6",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.06x5s",
            "EntityName": "Super Bowl",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_championship_event.championship",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0642vqv",
            "EntityName": "Super Bowl XLVII"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.076yq",
            "EntityName": "Super Bowl XXXV"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01ct6": "Baltimore Ravens"
    },
    "qid_topic_entity": {
      "Q276539": "Baltimore Ravens"
    },
    "index": 409
  },
  {
    "QuestionId": "WebQTest-1976",
    "RawQuestion": "what team did drogba play for?",
    "ProcessedQuestion": "what team did drogba play for",
    "Parses": [
      {
        "ParseId": "WebQTest-1976.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? assuming \"teams\""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_y2f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_y2f ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n}\n",
        "PotentialTopicEntityMention": "drogba",
        "TopicEntityName": "Didier Drogba",
        "TopicEntityMid": "m.03_y2f",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.023fb",
            "EntityName": "Chelsea F.C."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02gys2",
            "EntityName": "Olympique de Marseille"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.040pyq",
            "EntityName": "Ivory Coast national football team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04kd5d",
            "EntityName": "Shanghai Greenland Shenhua F.C."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05nwfr",
            "EntityName": "En Avant de Guingamp"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0690ct",
            "EntityName": "Le Mans FC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06zpgb2",
            "EntityName": "Galatasaray S.K."
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03_y2f": "Didier Drogba"
    },
    "qid_topic_entity": {
      "Q48892": "Didier Drogba"
    },
    "index": 410
  },
  {
    "QuestionId": "WebQTest-770",
    "RawQuestion": "what did steve mcnair died from?",
    "ProcessedQuestion": "what did steve mcnair died from",
    "Parses": [
      {
        "ParseId": "WebQTest-770.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02zmx0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02zmx0 ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "steve mcnair",
        "TopicEntityName": "Steve McNair",
        "TopicEntityMid": "m.02zmx0",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qnd1b",
            "EntityName": "Ballistic trauma"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02zmx0": "Steve McNair"
    },
    "qid_topic_entity": {
      "Q167818": "Steve McNair"
    },
    "index": 411
  },
  {
    "QuestionId": "WebQTest-195",
    "RawQuestion": "what kind of guitar did george harrison use?",
    "ProcessedQuestion": "what kind of guitar did george harrison use",
    "Parses": [
      {
        "ParseId": "WebQTest-195.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03bnv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03bnv ns:music.guitarist.guitars_played ?x .\n}\n",
        "PotentialTopicEntityMention": "george harrison",
        "TopicEntityName": "George Harrison",
        "TopicEntityMid": "m.03bnv",
        "InferentialChain": [
          "music.guitarist.guitars_played"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02m873",
            "EntityName": "Fender Stratocaster"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pqjvz",
            "EntityName": "Rickenbacker 360/12"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03bnv": "George Harrison"
    },
    "qid_topic_entity": {
      "Q2643": "George Harrison"
    },
    "index": 412
  },
  {
    "QuestionId": "WebQTest-710",
    "RawQuestion": "what style of art did henri matisse do?",
    "ProcessedQuestion": "what style of art did henri matisse do",
    "Parses": [
      {
        "ParseId": "WebQTest-710.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gct_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gct_ ns:visual_art.visual_artist.associated_periods_or_movements ?x .\n}\n",
        "PotentialTopicEntityMention": "henri matisse",
        "TopicEntityName": "Henri Matisse",
        "TopicEntityMid": "m.0gct_",
        "InferentialChain": [
          "visual_art.visual_artist.associated_periods_or_movements"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015r61",
            "EntityName": "Modern art"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03xj1",
            "EntityName": "Impressionism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.049xrv",
            "EntityName": "Neo-impressionism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lx1",
            "EntityName": "Fauvism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04y41",
            "EntityName": "Modernism"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0gct_": "Henri Matisse"
    },
    "qid_topic_entity": {
      "Q5589": "Henri Matisse"
    },
    "index": 413
  },
  {
    "QuestionId": "WebQTest-937",
    "RawQuestion": "where are people who speak arabic from?",
    "ProcessedQuestion": "where are people who speak arabic from",
    "Parses": [
      {
        "ParseId": "WebQTest-937.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jzc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jzc ns:language.human_language.countries_spoken_in ?x .\n}\n",
        "PotentialTopicEntityMention": "arabic",
        "TopicEntityName": "Arabic Language",
        "TopicEntityMid": "m.0jzc",
        "InferentialChain": [
          "language.human_language.countries_spoken_in"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0161c",
            "EntityName": "Bahrain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01z215",
            "EntityName": "Saudi Arabia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01z88t",
            "EntityName": "Yemen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01znc_",
            "EntityName": "Turkey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027jk",
            "EntityName": "Djibouti"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02k54",
            "EntityName": "Egypt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z62v1",
            "EntityName": "Seljuk Empire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03__y",
            "EntityName": "Jordan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035hr8",
            "EntityName": "South Yemen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03shp",
            "EntityName": "Iran"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03spz",
            "EntityName": "Israel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047yc",
            "EntityName": "Kuwait"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gqr",
            "EntityName": "Libya"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hqz",
            "EntityName": "Lebanon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjh",
            "EntityName": "Mauritania"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wgh",
            "EntityName": "Morocco"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05l8y",
            "EntityName": "Oman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0697s",
            "EntityName": "Qatar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06tw8",
            "EntityName": "Sudan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06vbd",
            "EntityName": "Syria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07dzf",
            "EntityName": "Tanzania"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07fj_",
            "EntityName": "Tunisia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d05q4",
            "EntityName": "Iraq"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h3y",
            "EntityName": "Algeria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h44w",
            "EntityName": "Mandatory Palestine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hzlz",
            "EntityName": "South Africa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j1z8",
            "EntityName": "United Arab Emirates"
          }
        ]
      },
      {
        "ParseId": "WebQTest-937.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jzc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jzc ns:language.human_language.main_country ?x .\n}\n",
        "PotentialTopicEntityMention": "arabic",
        "TopicEntityName": "Arabic Language",
        "TopicEntityMid": "m.0jzc",
        "InferentialChain": [
          "language.human_language.main_country"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01n6c",
            "EntityName": "Comoros"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01z215",
            "EntityName": "Saudi Arabia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02khs",
            "EntityName": "Eritrea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07fj_",
            "EntityName": "Tunisia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jzc": "Arabic Language"
    },
    "qid_topic_entity": {
      "Q13955": "Arabic Language"
    },
    "index": 414
  },
  {
    "QuestionId": "WebQTest-1212",
    "RawQuestion": "what did mark zuckerberg study?",
    "ProcessedQuestion": "what did mark zuckerberg study",
    "Parses": [
      {
        "ParseId": "WebQTest-1212.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.086dny)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.086dny ns:people.person.education ?y .\n?y ns:education.education.major_field_of_study ?x .\n}\n",
        "PotentialTopicEntityMention": "mark zuckerberg",
        "TopicEntityName": "Mark Zuckerberg",
        "TopicEntityMid": "m.086dny",
        "InferentialChain": [
          "people.person.education",
          "education.education.major_field_of_study"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01mf_",
            "EntityName": "Computer programming"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01mkq",
            "EntityName": "Computer Science"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qfh",
            "EntityName": "Psychology"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.086dny": "Mark Zuckerberg"
    },
    "qid_topic_entity": {
      "Q36215": "Mark Zuckerberg"
    },
    "index": 415
  },
  {
    "QuestionId": "WebQTest-1883",
    "RawQuestion": "where did robert downey jr go to jail?",
    "ProcessedQuestion": "where did robert downey jr go to jail",
    "Parses": [
      {
        "ParseId": "WebQTest-1883.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.016z2j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.016z2j ns:base.prison.prisoner.imprisoned ?y .\n?y ns:base.prison.imprisonment.prison ?x .\n}\n",
        "PotentialTopicEntityMention": "robert downey jr",
        "TopicEntityName": "Robert Downey Jr.",
        "TopicEntityMid": "m.016z2j",
        "InferentialChain": [
          "base.prison.prisoner.imprisoned",
          "base.prison.imprisonment.prison"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02621l5",
            "EntityName": "California Substance Abuse Treatment Facility and State Prison, Corcoran"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.016z2j": "Robert Downey Jr."
    },
    "qid_topic_entity": {
      "Q165219": "Robert Downey Jr."
    },
    "index": 416
  },
  {
    "QuestionId": "WebQTest-1840",
    "RawQuestion": "what do they speak in norway?",
    "ProcessedQuestion": "what do they speak in norway",
    "Parses": [
      {
        "ParseId": "WebQTest-1840.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05b4w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05b4w ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "norway",
        "TopicEntityName": "Norway",
        "TopicEntityMid": "m.05b4w",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02glq_",
            "EntityName": "Saami, South Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04d36l",
            "EntityName": "Saami, North Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05f_3",
            "EntityName": "Norwegian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06f7kz",
            "EntityName": "Saami, Lule Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09xy1k",
            "EntityName": "Finnish, Kven Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1840.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05b4w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05b4w ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "norway",
        "TopicEntityName": "Norway",
        "TopicEntityMid": "m.05b4w",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01648r",
            "EntityName": "Bokm\u00e5l"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016rsc",
            "EntityName": "Nynorsk"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05f_3",
            "EntityName": "Norwegian Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05b4w": "Norway"
    },
    "qid_topic_entity": {
      "Q20": "Norway"
    },
    "index": 417
  },
  {
    "QuestionId": "WebQTest-1063",
    "RawQuestion": "where is audrey hepburn from?",
    "ProcessedQuestion": "where is audrey hepburn from",
    "Parses": [
      {
        "ParseId": "WebQTest-1063.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dqcm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dqcm ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "audrey hepburn",
        "TopicEntityName": "Audrey Hepburn",
        "TopicEntityMid": "m.0dqcm",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nz8h",
            "EntityName": "Ixelles"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0dqcm": "Audrey Hepburn"
    },
    "qid_topic_entity": {
      "Q42786": "Audrey Hepburn"
    },
    "index": 418
  },
  {
    "QuestionId": "WebQTest-1455",
    "RawQuestion": "what capital city of brazil?",
    "ProcessedQuestion": "what capital city of brazil",
    "Parses": [
      {
        "ParseId": "WebQTest-1455.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015fr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015fr ns:location.country.capital ?x .\n}\n",
        "PotentialTopicEntityMention": "brazil",
        "TopicEntityName": "Brazil",
        "TopicEntityMid": "m.015fr",
        "InferentialChain": [
          "location.country.capital"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01hy_",
            "EntityName": "Bras\u00edlia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.015fr": "Brazil"
    },
    "qid_topic_entity": {
      "Q155": "Brazil"
    },
    "index": 419
  },
  {
    "QuestionId": "WebQTest-1355",
    "RawQuestion": "what school did robert f kennedy go to?",
    "ProcessedQuestion": "what school did robert f kennedy go to",
    "Parses": [
      {
        "ParseId": "WebQTest-1355.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06hx2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06hx2 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "robert f kennedy",
        "TopicEntityName": "Robert F. Kennedy",
        "TopicEntityMid": "m.06hx2",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01mpwj",
            "EntityName": "Harvard College"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01vc5m",
            "EntityName": "Bates College"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h45k",
            "EntityName": "Milton Academy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ksy",
            "EntityName": "Harvard University"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qgd9",
            "EntityName": "University of Virginia School of Law"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g8rj",
            "EntityName": "University of Virginia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06hx2": "Robert F. Kennedy"
    },
    "qid_topic_entity": {
      "Q25310": "Robert F. Kennedy"
    },
    "index": 420
  },
  {
    "QuestionId": "WebQTest-1104",
    "RawQuestion": "what do we call the currency of france?",
    "ProcessedQuestion": "what do we call the currency of france",
    "Parses": [
      {
        "ParseId": "WebQTest-1104.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "needs \"now\" constraint"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f8l9c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f8l9c ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "france",
        "TopicEntityName": "France",
        "TopicEntityMid": "m.0f8l9c",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01qyjx",
            "EntityName": "CFP franc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02l6h",
            "EntityName": "Euro"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f8l9c": "France"
    },
    "qid_topic_entity": {
      "Q142": "France"
    },
    "index": 421
  },
  {
    "QuestionId": "WebQTest-1810",
    "RawQuestion": "what type of art leonardo da vinci do?",
    "ProcessedQuestion": "what type of art leonardo da vinci do",
    "Parses": [
      {
        "ParseId": "WebQTest-1810.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04lg6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04lg6 ns:visual_art.visual_artist.art_forms ?x .\n}\n",
        "PotentialTopicEntityMention": "leonardo da vinci",
        "TopicEntityName": "Leonardo da Vinci",
        "TopicEntityMid": "m.04lg6",
        "InferentialChain": [
          "visual_art.visual_artist.art_forms"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02csf",
            "EntityName": "Drawing"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qdh",
            "EntityName": "Painting"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06msq",
            "EntityName": "Sculpture"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04lg6": "Leonardo da Vinci"
    },
    "qid_topic_entity": {
      "Q762": "Leonardo da Vinci"
    },
    "index": 422
  },
  {
    "QuestionId": "WebQTest-77",
    "RawQuestion": "what capital of austria?",
    "ProcessedQuestion": "what capital of austria",
    "Parses": [
      {
        "ParseId": "WebQTest-77.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h7x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h7x ns:location.country.capital ?x .\n}\n",
        "PotentialTopicEntityMention": "austria",
        "TopicEntityName": "Austria",
        "TopicEntityMid": "m.0h7x",
        "InferentialChain": [
          "location.country.capital"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fhp9",
            "EntityName": "Vienna"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0h7x": "Austria"
    },
    "qid_topic_entity": {
      "Q40": "Austria"
    },
    "index": 423
  },
  {
    "QuestionId": "WebQTest-1482",
    "RawQuestion": "who played carmen cortez in spy kids?",
    "ProcessedQuestion": "who played carmen cortez in spy kids",
    "Parses": [
      {
        "ParseId": "WebQTest-1482.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02rrfzf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02rrfzf ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.02ql50 .\n}\n",
        "PotentialTopicEntityMention": "spy kids",
        "TopicEntityName": "Spy Kids",
        "TopicEntityMid": "m.02rrfzf",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02ql50",
            "EntityName": "Baby Carmen",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z7h0",
            "EntityName": "Alexa Vega"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zfn9cs",
            "EntityName": "Addisyn Fair"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02rrfzf": "Spy Kids"
    },
    "qid_topic_entity": {
      "Q550581": "Spy Kids"
    },
    "index": 424
  },
  {
    "QuestionId": "WebQTest-1847",
    "RawQuestion": "where does kurdish people live?",
    "ProcessedQuestion": "where does kurdish people live",
    "Parses": [
      {
        "ParseId": "WebQTest-1847.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04c28)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04c28 ns:people.ethnicity.geographic_distribution ?x .\n}\n",
        "PotentialTopicEntityMention": "kurdish people",
        "TopicEntityName": "Kurds",
        "TopicEntityMid": "m.04c28",
        "InferentialChain": [
          "people.ethnicity.geographic_distribution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j0k",
            "EntityName": "Asia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04c28": "Kurds"
    },
    "qid_topic_entity": {
      "Q12223": "Kurds"
    },
    "index": 425
  },
  {
    "QuestionId": "WebQTest-1146",
    "RawQuestion": "who did johnny depp play in corpse bride?",
    "ProcessedQuestion": "who did johnny depp play in corpse bride",
    "Parses": [
      {
        "ParseId": "WebQTest-1146.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jfx1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jfx1 ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.050xxm .\n}\n",
        "PotentialTopicEntityMention": "johnny depp",
        "TopicEntityName": "Johnny Depp",
        "TopicEntityMid": "m.0jfx1",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.050xxm",
            "EntityName": "Corpse Bride",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04fllb9",
            "EntityName": "Victor Van Dort"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1146.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.050xxm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.050xxm ns:film.film.starring ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.actor ns:m.0jfx1 .\n}\n",
        "PotentialTopicEntityMention": "corpse bride",
        "TopicEntityName": "Corpse Bride",
        "TopicEntityMid": "m.050xxm",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0jfx1",
            "EntityName": "Johnny Depp",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.actor",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04fllb9",
            "EntityName": "Victor Van Dort"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jfx1": "Johnny Depp",
      "m.050xxm": "Corpse Bride"
    },
    "qid_topic_entity": {
      "Q37175": "Johnny Depp",
      "Q164417": "Corpse Bride"
    },
    "index": 426
  },
  {
    "QuestionId": "WebQTest-1770",
    "RawQuestion": "what country does rafael nadal play for?",
    "ProcessedQuestion": "what country does rafael nadal play for",
    "Parses": [
      {
        "ParseId": "WebQTest-1770.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051q39)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051q39 ns:people.person.nationality ?x .\n}\n",
        "PotentialTopicEntityMention": "rafael nadal",
        "TopicEntityName": "Rafael Nadal",
        "TopicEntityMid": "m.051q39",
        "InferentialChain": [
          "people.person.nationality"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mkj",
            "EntityName": "Spain"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.051q39": "Rafael Nadal"
    },
    "qid_topic_entity": {
      "Q10132": "Rafael Nadal"
    },
    "index": 427
  },
  {
    "QuestionId": "WebQTest-1078",
    "RawQuestion": "what language do australia people speak?",
    "ProcessedQuestion": "what language do australia people speak",
    "Parses": [
      {
        "ParseId": "WebQTest-1078.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0chghy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0chghy ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "australia",
        "TopicEntityName": "Australia",
        "TopicEntityMid": "m.0chghy",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jcw",
            "EntityName": "Esperanto Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gd7",
            "EntityName": "Lojban"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0chghy": "Australia"
    },
    "qid_topic_entity": {
      "Q408": "Australia"
    },
    "index": 428
  },
  {
    "QuestionId": "WebQTest-356",
    "RawQuestion": "what airport is near arlington tx?",
    "ProcessedQuestion": "what airport is near arlington tx",
    "Parses": [
      {
        "ParseId": "WebQTest-356.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0nqph)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0nqph ns:location.location.nearby_airports ?x .\n}\n",
        "PotentialTopicEntityMention": "arlington tx",
        "TopicEntityName": "Arlington",
        "TopicEntityMid": "m.0nqph",
        "InferentialChain": [
          "location.location.nearby_airports"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pq2d8",
            "EntityName": "Arlington Municipal Airport"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0nqph": "Arlington"
    },
    "qid_topic_entity": {
      "Q17943": "Arlington"
    },
    "index": 429
  },
  {
    "QuestionId": "WebQTest-1928",
    "RawQuestion": "what wnba team is diana taurasi on?",
    "ProcessedQuestion": "what wnba team is diana taurasi on",
    "Parses": [
      {
        "ParseId": "WebQTest-1928.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "should add filter for WNBA. Otherwise is pretty good."
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.037bzt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.037bzt ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "diana taurasi",
        "TopicEntityName": "Diana Taurasi",
        "TopicEntityMid": "m.037bzt",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bmbqg2",
            "EntityName": "UMMC Ekaterinburg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0lr76",
            "EntityName": "Phoenix Mercury"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.037bzt": "Diana Taurasi"
    },
    "qid_topic_entity": {
      "Q240726": "Diana Taurasi"
    },
    "index": 430
  },
  {
    "QuestionId": "WebQTest-635",
    "RawQuestion": "what characters does matt stone do?",
    "ProcessedQuestion": "what characters does matt stone do",
    "Parses": [
      {
        "ParseId": "WebQTest-635.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01_x6d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01_x6d ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n}\n",
        "PotentialTopicEntityMention": "matt stone",
        "TopicEntityName": "Matt Stone",
        "TopicEntityMid": "m.01_x6d",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.013z1n",
            "EntityName": "Kenny McCormick"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01lgj0",
            "EntityName": "Kyle Broflovski"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.021r0s",
            "EntityName": "Wizard of Oz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bthgtk",
            "EntityName": "Terrance Henry Stoot"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bthgtn",
            "EntityName": "Gerald Broflovski"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bthgtr",
            "EntityName": "Bill Gates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bzk1qh",
            "EntityName": "Ethan Hawke"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bzk1r1",
            "EntityName": "Chris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bzk1rh",
            "EntityName": "George Clooney"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bzk1s0",
            "EntityName": "Danny Glover"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dnc0h",
            "EntityName": "Jimbo Kearn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g1jfp",
            "EntityName": "Saddam Hussein"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h0z47h",
            "EntityName": "James Humphries"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h0z47s",
            "EntityName": "Former Columbine Student"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h0z48_",
            "EntityName": "Doug Remer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h0z481",
            "EntityName": "Hermaphrodite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h0z488",
            "EntityName": "Taper Guy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h0z48k",
            "EntityName": "Kyle / Kenny / Jesus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h0z48s",
            "EntityName": "Dave the Lighting Guy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h0z4dl",
            "EntityName": "Man toasting drinks at MCA outdoor bar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0vnkcxn",
            "EntityName": "Ticket Taker"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01_x6d": "Matt Stone"
    },
    "qid_topic_entity": {
      "Q44410": "Matt Stone"
    },
    "index": 431
  },
  {
    "QuestionId": "WebQTest-573",
    "RawQuestion": "where did melba beals live?",
    "ProcessedQuestion": "where did melba beals live",
    "Parses": [
      {
        "ParseId": "WebQTest-573.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08s1bb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08s1bb ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n",
        "PotentialTopicEntityMention": "melba beals",
        "TopicEntityName": "Melba Pattillo Beals",
        "TopicEntityMid": "m.08s1bb",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0vbk",
            "EntityName": "Arkansas"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.08s1bb": "Melba Pattillo Beals"
    },
    "qid_topic_entity": {
      "Q6811671": "Melba Pattillo Beals"
    },
    "index": 432
  },
  {
    "QuestionId": "WebQTest-392",
    "RawQuestion": "what team is hank baskett on 2010?",
    "ProcessedQuestion": "what team is hank baskett on 2010",
    "Parses": [
      {
        "ParseId": "WebQTest-392.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d81yf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d81yf ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2010-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2010-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "hank baskett",
        "TopicEntityName": "Hank Baskett",
        "TopicEntityMid": "m.0d81yf",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2010-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2010-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2010-01-01",
          "End": "2010-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "2010"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wnh",
            "EntityName": "Indianapolis Colts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.051q5",
            "EntityName": "Minnesota Vikings"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05tg3",
            "EntityName": "Philadelphia Eagles"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d81yf": "Hank Baskett"
    },
    "qid_topic_entity": {
      "Q1433425": "Hank Baskett"
    },
    "index": 433
  },
  {
    "QuestionId": "WebQTest-1612",
    "RawQuestion": "what type of art did raphael sanzio create?",
    "ProcessedQuestion": "what type of art did raphael sanzio create",
    "Parses": [
      {
        "ParseId": "WebQTest-1612.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c43g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c43g ns:visual_art.visual_artist.art_forms ?x .\n}\n",
        "PotentialTopicEntityMention": "raphael sanzio",
        "TopicEntityName": "Raphael",
        "TopicEntityMid": "m.0c43g",
        "InferentialChain": [
          "visual_art.visual_artist.art_forms"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02csf",
            "EntityName": "Drawing"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qdh",
            "EntityName": "Painting"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0c43g": "Raphael"
    },
    "qid_topic_entity": {
      "Q5597": "Raphael"
    },
    "index": 434
  },
  {
    "QuestionId": "WebQTest-1947",
    "RawQuestion": "what currency do they use in switzerland?",
    "ProcessedQuestion": "what currency do they use in switzerland",
    "Parses": [
      {
        "ParseId": "WebQTest-1947.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mzp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mzp ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "switzerland",
        "TopicEntityName": "Switzerland",
        "TopicEntityMid": "m.06mzp",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_h4b",
            "EntityName": "Swiss franc"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06mzp": "Switzerland"
    },
    "qid_topic_entity": {
      "Q39": "Switzerland"
    },
    "index": 435
  },
  {
    "QuestionId": "WebQTest-1427",
    "RawQuestion": "who was the secretary of state when andrew jackson was president?",
    "ProcessedQuestion": "who was the secretary of state when andrew jackson was president",
    "Parses": [
      {
        "ParseId": "WebQTest-1427.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rlz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rlz ns:government.political_appointer.appointees ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.0789n .\n}\n",
        "PotentialTopicEntityMention": "andrew jackson",
        "TopicEntityName": "Andrew Jackson",
        "TopicEntityMid": "m.0rlz",
        "InferentialChain": [
          "government.political_appointer.appointees",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0789n",
            "EntityName": "Secretary of State",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.basic_title",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01bxb3",
            "EntityName": "Edward Livingston"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ggrk",
            "EntityName": "Louis McLane"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04_0m",
            "EntityName": "Martin Van Buren"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lhfcl",
            "EntityName": "James Alexander Hamilton"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0rlz": "Andrew Jackson"
    },
    "qid_topic_entity": {
      "Q11817": "Andrew Jackson"
    },
    "index": 436
  },
  {
    "QuestionId": "WebQTest-1183",
    "RawQuestion": "where was farrah fawcett buried?",
    "ProcessedQuestion": "where was farrah fawcett buried",
    "Parses": [
      {
        "ParseId": "WebQTest-1183.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01j851)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01j851 ns:people.deceased_person.place_of_burial ?x .\n}\n",
        "PotentialTopicEntityMention": "farrah fawcett",
        "TopicEntityName": "Farrah Fawcett",
        "TopicEntityMid": "m.01j851",
        "InferentialChain": [
          "people.deceased_person.place_of_burial"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018mm4",
            "EntityName": "Westwood Village Memorial Park Cemetery"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01j851": "Farrah Fawcett"
    },
    "qid_topic_entity": {
      "Q102341": "Farrah Fawcett"
    },
    "index": 437
  },
  {
    "QuestionId": "WebQTest-1327",
    "RawQuestion": "where is shakira from?",
    "ProcessedQuestion": "where is shakira from",
    "Parses": [
      {
        "ParseId": "WebQTest-1327.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01wj18h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01wj18h ns:music.artist.origin ?x .\n}\n",
        "PotentialTopicEntityMention": "shakira",
        "TopicEntityName": "Shakira",
        "TopicEntityMid": "m.01wj18h",
        "InferentialChain": [
          "music.artist.origin"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01ls2",
            "EntityName": "Colombia"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1327.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01wj18h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01wj18h ns:people.person.nationality ?x .\n}\n",
        "PotentialTopicEntityMention": "shakira",
        "TopicEntityName": "Shakira",
        "TopicEntityMid": "m.01wj18h",
        "InferentialChain": [
          "people.person.nationality"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01ls2",
            "EntityName": "Colombia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01wj18h": "Shakira"
    },
    "qid_topic_entity": {
      "Q34424": "Shakira"
    },
    "index": 438
  },
  {
    "QuestionId": "WebQTest-1705",
    "RawQuestion": "where was franz ferdinand from?",
    "ProcessedQuestion": "where was franz ferdinand from",
    "Parses": [
      {
        "ParseId": "WebQTest-1705.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02ft60)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02ft60 ns:music.artist.origin ?x .\n}\n",
        "PotentialTopicEntityMention": "franz ferdinand",
        "TopicEntityName": "Franz Ferdinand",
        "TopicEntityMid": "m.02ft60",
        "InferentialChain": [
          "music.artist.origin"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hyxv",
            "EntityName": "Glasgow"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02ft60": "Franz Ferdinand"
    },
    "qid_topic_entity": {
      "Q173180": "Franz Ferdinand"
    },
    "index": 439
  },
  {
    "QuestionId": "WebQTest-627",
    "RawQuestion": "what nationality is taylor lautner jacob black?",
    "ProcessedQuestion": "what nationality is taylor lautner jacob black",
    "Parses": [
      {
        "ParseId": "WebQTest-627.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ldhs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ldhs ns:people.person.nationality ?x .\n}\n",
        "PotentialTopicEntityMention": "taylor lautner",
        "TopicEntityName": "Taylor Lautner",
        "TopicEntityMid": "m.07ldhs",
        "InferentialChain": [
          "people.person.nationality"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07ldhs": "Taylor Lautner"
    },
    "qid_topic_entity": {
      "Q23359": "Taylor Lautner"
    },
    "index": 440
  },
  {
    "QuestionId": "WebQTest-58",
    "RawQuestion": "who did jackie robinson first play for?",
    "ProcessedQuestion": "who did jackie robinson first play for",
    "Parses": [
      {
        "ParseId": "WebQTest-58.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0443c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0443c ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n?y ns:sports.sports_team_roster.from ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "PotentialTopicEntityMention": "jackie robinson",
        "TopicEntityName": "Jackie Robinson",
        "TopicEntityMid": "m.0443c",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Ascending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "sports.sports_team_roster.from",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fbtm7",
            "EntityName": "UCLA Bruins football"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0443c": "Jackie Robinson"
    },
    "qid_topic_entity": {
      "Q221048": "Jackie Robinson"
    },
    "index": 441
  },
  {
    "QuestionId": "WebQTest-1592",
    "RawQuestion": "what are all the songs justin bieber wrote?",
    "ProcessedQuestion": "what are all the songs justin bieber wrote",
    "Parses": [
      {
        "ParseId": "WebQTest-1592.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: F Union. Original comment: F UNION compositions and Lyrics written"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n\t{ \n\t  # Lyrics\n\t  ns:m.06w2sn5 ns:music.lyricist.lyrics_written ?x .\n\t}\n\tUNION\n\t{\n\t  # Compositions\n\t  ns:m.06w2sn5 ns:music.composer.compositions ?x .\n\t}\n}",
        "PotentialTopicEntityMention": "justin bieber",
        "TopicEntityName": "Justin Bieber",
        "TopicEntityMid": "m.06w2sn5",
        "InferentialChain": null,
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0116pj4q",
            "EntityName": "Lolly"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012k_48s",
            "EntityName": "Home to Mama"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09v3gb4",
            "EntityName": "Baby"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bbvzq2",
            "EntityName": "Never Let You Go"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bbz4p9",
            "EntityName": "Eenie Meenie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bmc2ql",
            "EntityName": "Somebody to Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c3vvnk",
            "EntityName": "Never Say Never"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fqlv5l",
            "EntityName": "Bigger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g5b0p2",
            "EntityName": "Pray"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g5q9ky",
            "EntityName": "First Dance"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j4453t",
            "EntityName": "Live My Life"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j64n8c",
            "EntityName": "Boyfriend"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jwqwyx",
            "EntityName": "Turn to You (Mother's Day Dedication)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jwx2_w",
            "EntityName": "Die in Your Arms"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jxk_hq",
            "EntityName": "Thought Of You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jxk_kq",
            "EntityName": "Beauty And A Beat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jxkzb9",
            "EntityName": "All Around The World"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k0l2vf",
            "EntityName": "As Long as You Love Me"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ljtwfj",
            "EntityName": "Beautiful"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qfpkqq",
            "EntityName": "Right Here"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rytzvz",
            "EntityName": "#thatPower"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y6b7k5",
            "EntityName": "Heartbreaker"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ynrkyl",
            "EntityName": "All That Matters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yt1lb9",
            "EntityName": "Hold Tight"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yt3yyw",
            "EntityName": "Wait for a Minute"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yt3zg2",
            "EntityName": "Recovery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0z6sgcx",
            "EntityName": "Bad Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zbv_v0",
            "EntityName": "All Bad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zdkrym",
            "EntityName": "PYD"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zg6nnd",
            "EntityName": "Change Me"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zgb5ny",
            "EntityName": "Roller Coaster"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zmzvrc",
            "EntityName": "Confident"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06w2sn5": "Justin Bieber"
    },
    "qid_topic_entity": {
      "Q34086": "Justin Bieber"
    },
    "index": 442
  },
  {
    "QuestionId": "WebQTest-1313",
    "RawQuestion": "who were demeter's siblings?",
    "ProcessedQuestion": "who were demeter 's siblings",
    "Parses": [
      {
        "ParseId": "WebQTest-1313.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0296l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0296l ns:fictional_universe.fictional_character.siblings ?y .\n?y ns:fictional_universe.sibling_relationship_of_fictional_characters.siblings ?x .\n}\n",
        "PotentialTopicEntityMention": "demeter",
        "TopicEntityName": "Demeter",
        "TopicEntityMid": "m.0296l",
        "InferentialChain": [
          "fictional_universe.fictional_character.siblings",
          "fictional_universe.sibling_relationship_of_fictional_characters.siblings"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bbvfjz",
            "EntityName": "Zeus"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0296l": "Demeter"
    },
    "qid_topic_entity": {
      "Q40730": "Demeter"
    },
    "index": 443
  },
  {
    "QuestionId": "WebQTest-1963",
    "RawQuestion": "what position did vince lombardi play?",
    "ProcessedQuestion": "what position did vince lombardi play",
    "Parses": [
      {
        "ParseId": "WebQTest-1963.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07_xf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07_xf ns:american_football.football_player.position_s ?x .\n}\n",
        "PotentialTopicEntityMention": "vince lombardi",
        "TopicEntityName": "Vince Lombardi",
        "TopicEntityMid": "m.07_xf",
        "InferentialChain": [
          "american_football.football_player.position_s"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06v_1nj",
            "EntityName": "Right guard"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07_xf": "Vince Lombardi"
    },
    "qid_topic_entity": {
      "Q553321": "Vince Lombardi"
    },
    "index": 444
  },
  {
    "QuestionId": "WebQTest-1065",
    "RawQuestion": "who does darth vaders voice?",
    "ProcessedQuestion": "who does darth vaders voice",
    "Parses": [
      {
        "ParseId": "WebQTest-1065.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2y0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2y0 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.special_performance_type ns:m.02nsjvf .\n}\n",
        "PotentialTopicEntityMention": "darth vaders",
        "TopicEntityName": "Darth Vader",
        "TopicEntityMid": "m.0f2y0",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02nsjvf",
            "EntityName": "Voice",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.special_performance_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0113l6zy",
            "EntityName": "Dr. Smoov"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06wm0z",
            "EntityName": "Zac Efron"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0945y8",
            "EntityName": "Abraham Benrubi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b2l8f",
            "EntityName": "Matt Lanter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f6_x",
            "EntityName": "James Earl Jones"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f2y0": "Darth Vader"
    },
    "qid_topic_entity": {
      "Q51752": "Darth Vader"
    },
    "index": 445
  },
  {
    "QuestionId": "WebQTest-317",
    "RawQuestion": "where does russia import from?",
    "ProcessedQuestion": "where does russia import from",
    "Parses": [
      {
        "ParseId": "WebQTest-317.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:location.statistical_region.places_imported_from ?y .\n?y ns:location.imports_and_exports.imported_from ?x .\n}\n",
        "PotentialTopicEntityMention": "russia",
        "TopicEntityName": "Russia",
        "TopicEntityMid": "m.06bnz",
        "InferentialChain": [
          "location.statistical_region.places_imported_from",
          "location.imports_and_exports.imported_from"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07t_x",
            "EntityName": "Uzbekistan"
          }
        ]
      },
      {
        "ParseId": "WebQTest-317.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07t21)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07t21 ns:location.statistical_region.places_imported_from ?y .\n?y ns:location.imports_and_exports.imported_from ?x .\n}\n",
        "PotentialTopicEntityMention": "russia",
        "TopicEntityName": "Ukraine",
        "TopicEntityMid": "m.07t21",
        "InferentialChain": [
          "location.statistical_region.places_imported_from",
          "location.imports_and_exports.imported_from"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07t_x",
            "EntityName": "Uzbekistan"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06bnz": "Russia",
      "m.07t21": "Ukraine"
    },
    "qid_topic_entity": {
      "Q159": "Russia",
      "Q212": "Ukraine"
    },
    "index": 446
  },
  {
    "QuestionId": "WebQTest-1396",
    "RawQuestion": "who played darth vader at the end of return of the jedi?",
    "ProcessedQuestion": "who played darth vader at the end of return of the jedi",
    "Parses": [
      {
        "ParseId": "WebQTest-1396.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2y0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2y0 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.0ddjy .\n}\n",
        "PotentialTopicEntityMention": "darth vader",
        "TopicEntityName": "Darth Vader",
        "TopicEntityMid": "m.0f2y0",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0ddjy",
            "EntityName": "Return of the Jedi",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.023jmy",
            "EntityName": "Sebastian Shaw"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03xblf",
            "EntityName": "David Prowse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f6_x",
            "EntityName": "James Earl Jones"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f2y0": "Darth Vader"
    },
    "qid_topic_entity": {
      "Q51752": "Darth Vader"
    },
    "index": 447
  },
  {
    "QuestionId": "WebQTest-841",
    "RawQuestion": "what is money called in italy?",
    "ProcessedQuestion": "what is money called in italy",
    "Parses": [
      {
        "ParseId": "WebQTest-841.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03rjj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03rjj ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "italy",
        "TopicEntityName": "Italy",
        "TopicEntityMid": "m.03rjj",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02l6h",
            "EntityName": "Euro"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03rjj": "Italy"
    },
    "qid_topic_entity": {
      "Q38": "Italy"
    },
    "index": 448
  },
  {
    "QuestionId": "WebQTest-1889",
    "RawQuestion": "who was vice president with bill clinton?",
    "ProcessedQuestion": "who was vice president with bill clinton",
    "Parses": [
      {
        "ParseId": "WebQTest-1889.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0157m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0157m ns:government.us_president.vice_president ?x .\n}\n",
        "PotentialTopicEntityMention": "bill clinton",
        "TopicEntityName": "Bill Clinton",
        "TopicEntityMid": "m.0157m",
        "InferentialChain": [
          "government.us_president.vice_president"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d05fv",
            "EntityName": "Al Gore"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0157m": "Bill Clinton"
    },
    "qid_topic_entity": {
      "Q1124": "Bill Clinton"
    },
    "index": 449
  },
  {
    "QuestionId": "WebQTest-629",
    "RawQuestion": "what company does nike own?",
    "ProcessedQuestion": "what company does nike own",
    "Parses": [
      {
        "ParseId": "WebQTest-629.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lwkh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lwkh ns:organization.organization.child ?y .\n?y ns:organization.organization_relationship.child ?x .\n}\n",
        "PotentialTopicEntityMention": "nike",
        "TopicEntityName": "Nike, Inc.",
        "TopicEntityMid": "m.0lwkh",
        "InferentialChain": [
          "organization.organization.child",
          "organization.organization_relationship.child"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_yyy0j",
            "EntityName": "Nike Brand Kitchen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0140d2",
            "EntityName": "Converse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05j1g6",
            "EntityName": "Umbro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08qt1l",
            "EntityName": "Hurley International"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09l_qsh",
            "EntityName": "NIKE Deutschland GmbH"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09l_qsq",
            "EntityName": "NIKE Mexico Holdings LLC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09l_qsy",
            "EntityName": "NIKE Vietnam Co"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m_6y0",
            "EntityName": "Cole Haan Co Store"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m_82n",
            "EntityName": "NIKE Flight"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m_8xp",
            "EntityName": "Umbro Sportwear Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m_933",
            "EntityName": "Yugen Kaisha Hurley Japan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m_ptr",
            "EntityName": "Converse Footwear Technical Service (Zhongshan) Co Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m_qf6",
            "EntityName": "Hurley999 UK Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m04cp",
            "EntityName": "BRS NIKE Taiwan Inc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m0mrr",
            "EntityName": "Converse Trading Co B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m12g4",
            "EntityName": "Bragano Trading S.r.l."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m12pm",
            "EntityName": "Converse Canada Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m1knm",
            "EntityName": "Converse Hong Kong Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m1m2f",
            "EntityName": "PT Hurley Indonesia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m2_gr",
            "EntityName": "NIKE 360 Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m2_gz",
            "EntityName": "NIKE SALES (MALAYSIA) SDN. BHD."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m3gg9",
            "EntityName": "NIKE Chile B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m3ggj",
            "EntityName": "NIKE Tailwind"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m3gw1",
            "EntityName": "Savier Inc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m3ydc",
            "EntityName": "NIKE GmbH"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m3ydl",
            "EntityName": "NIKE Poland Sp.zo.o"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m4dd7",
            "EntityName": "NIKE Huarache"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m5tqw",
            "EntityName": "NIKE Finland OY"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m5vf0",
            "EntityName": "Umbro Schweiz Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m67_9",
            "EntityName": "Converse Sporting Goods (China) Co Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m7733",
            "EntityName": "NIKE India Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m773b",
            "EntityName": "NIKE Servicios de Mexico S. de R.L. de C.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m77sg",
            "EntityName": "Twin Dragons Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m7p_d",
            "EntityName": "NIKE Licenciamentos do Brasil Ltda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m7p_w",
            "EntityName": "NIKE UK Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m84_6",
            "EntityName": "NIKE BH B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m84_f",
            "EntityName": "NIKE International Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m84_n",
            "EntityName": "NIKE Sports (China) Co Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m8lqy",
            "EntityName": "Converse Netherlands B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m8m24",
            "EntityName": "Exeter Hong Kong Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m8n9d",
            "EntityName": "PT NIKE Indonesia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m9l86",
            "EntityName": "NIKE Argentina Srl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m9lj7",
            "EntityName": "PMG International Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mb0fr",
            "EntityName": "Cole Haan Hong Kong Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mb2c9",
            "EntityName": "Umbro Worldwide Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mbk23",
            "EntityName": "NIKE de Chile Ltda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mc11v",
            "EntityName": "Umbro HK Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mchdq",
            "EntityName": "NIKE European Operations Netherlands B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mcj4c",
            "EntityName": "Umbro Licensing Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mcybt",
            "EntityName": "Converse Canada Corp"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mdfnq",
            "EntityName": "NIKE (Suzhou) Sports Co Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mdfny",
            "EntityName": "NIKE Hellas EPE"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mdfp4",
            "EntityName": "NIKE Retail LLC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mdxf_",
            "EntityName": "Manchester United Merchandising Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mdxp6",
            "EntityName": "NIKE Cortez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mdygz",
            "EntityName": "Umbro Asia Sourcing Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mg9yx",
            "EntityName": "NIKE Africa Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mgs5z",
            "EntityName": "Exeter Brands Group LLC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mgsym",
            "EntityName": "NIKE Asia Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mh80r",
            "EntityName": "NIKE Group Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mh80z",
            "EntityName": "NIKE Retail B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mj4t7",
            "EntityName": "American NIKE SL"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mj55s",
            "EntityName": "Cole Haan Japan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mj74b",
            "EntityName": "Umbro.com"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mk4jh",
            "EntityName": "NIKE (UK) Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mk4jq",
            "EntityName": "NIKE Russia LLC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09ml2ln",
            "EntityName": "NIKE Laser Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09ml2lw",
            "EntityName": "NIKE TN Inc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mm1kl",
            "EntityName": "Umbro Finance Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mmhhw",
            "EntityName": "NIKE Denmark ApS"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mmhj2",
            "EntityName": "NIKE Max LLC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mmhj9",
            "EntityName": "NIKE Vapor Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mmzcd",
            "EntityName": "NIKE Japan Corp"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mnf8p",
            "EntityName": "NIKE Canada Corp"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mnf8x",
            "EntityName": "NIKE Italy S.R.L."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mnf93",
            "EntityName": "NIKE Suzhou Holding HK Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mnx33",
            "EntityName": "NIKE Europe Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mnx3b",
            "EntityName": "NIKE Zoom LLC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mnxz3",
            "EntityName": "Umbro JV Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mpfwh",
            "EntityName": "NIKE Global Trading PTE. LTD"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mpfwq",
            "EntityName": "NIKE Philippines Inc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mpxh9",
            "EntityName": "Futbol Club Barcelona SL"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mpy3t",
            "EntityName": "NIKE France SAS."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mqvs1",
            "EntityName": "NIKE (Switzerland) GmbH"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mqvs8",
            "EntityName": "NIKE Holding LLC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mqvsh",
            "EntityName": "NIKE Retail Poland sp. z o. o."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09ms8bg",
            "EntityName": "Hurley 999 SL"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mt6xj",
            "EntityName": "NIKE Canada Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mt6xr",
            "EntityName": "NIKE Sweden AB"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mtq62",
            "EntityName": "NIKE (Thailand) Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mtq69",
            "EntityName": "NIKE Hong Kong Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mtq6j",
            "EntityName": "NIKE Retail Services Inc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mv4rv",
            "EntityName": "NIKE Finance Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mv5h1",
            "EntityName": "Umbro Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mx070",
            "EntityName": "NIKE China Holding HK Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mxgzn",
            "EntityName": "NIKE International Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mxgzw",
            "EntityName": "NIKE Sourcing India Private Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mxykn",
            "EntityName": "NIKE do Brasil Comercio e Participacoes Ltda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mxykw",
            "EntityName": "NIKE New Zealand Co"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mxyl2",
            "EntityName": "NIKE Vision Timing & Techlab LP"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mxzbb",
            "EntityName": "Triax Insurance Inc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mxzcf",
            "EntityName": "Umbro International JV"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09myf89",
            "EntityName": "Umbro International Holdings Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n05q3",
            "EntityName": "NIKE Australia Pty. Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n05qb",
            "EntityName": "NIKE International LLC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n05qk",
            "EntityName": "NIKE South Africa Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n0nbn",
            "EntityName": "NIKE Galaxy Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n12q_",
            "EntityName": "Hurley Australia Pty Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n1kjv",
            "EntityName": "Juventus Merchandising S.r.l."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n20nr",
            "EntityName": "NIKE Jump Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n2h_r",
            "EntityName": "Umbro International Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n2hc5",
            "EntityName": "NIKE Dunk Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n2hcl",
            "EntityName": "NIKE NZ Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n2hct",
            "EntityName": "NIKE Waffle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n2z87",
            "EntityName": "NIKE Lavadome"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n2z8g",
            "EntityName": "NIKE Trading Co B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n3f3q",
            "EntityName": "NIKE IHM Inc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n3fsz",
            "EntityName": "Twin Dragons Global Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n3w10",
            "EntityName": "Converse Hong Kong Holding Co Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n4brj",
            "EntityName": "NIKE de Mexico S de R.L. de C.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n4brr",
            "EntityName": "NIKE Logistics Yugen Kaisha"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n4brz",
            "EntityName": "NIKE USA Inc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n4sfr",
            "EntityName": "Converse (Asia Pacific) Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n5867",
            "EntityName": "NIKE Australia Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n586g",
            "EntityName": "NIKE International Holding Inc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n586p",
            "EntityName": "NIKE South Africa Holdings LLC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n65_6",
            "EntityName": "NIKE Sports Korea Co Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n65z_",
            "EntityName": "NIKE Israel Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n65zs",
            "EntityName": "NIKE CA LLC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n6p3w",
            "EntityName": "NIKE Global Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n6p42",
            "EntityName": "NIKE Offshore Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n6pt6",
            "EntityName": "USISL Inc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n73w1",
            "EntityName": "NIKE Global Services PTE. LTD"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n73w8",
            "EntityName": "NIKE Pegasus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n80p_",
            "EntityName": "Hurley International Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n9ftf",
            "EntityName": "NIKE India Private Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n9ftn",
            "EntityName": "NIKE SINGAPORE PTE LTD"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b4zbb",
            "EntityName": "Nike Vision"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bq0k3",
            "EntityName": "Cole Haan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cnsqj1",
            "EntityName": "Nike Golf"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0lwkh": "Nike, Inc."
    },
    "qid_topic_entity": {
      "Q483915": "Nike, Inc."
    },
    "index": 450
  },
  {
    "QuestionId": "WebQTest-751",
    "RawQuestion": "who owns google 2012?",
    "ProcessedQuestion": "who owns google 2012",
    "Parses": [
      {
        "ParseId": "WebQTest-751.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? somewhat ambiguous how to define own."
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.045c7b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.045c7b ns:organization.organization.leadership ?y .\n?y ns:organization.leadership.person ?x .\nFILTER(NOT EXISTS {?y ns:organization.leadership.from ?sk0} || \nEXISTS {?y ns:organization.leadership.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:organization.leadership.to ?sk2} || \nEXISTS {?y ns:organization.leadership.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "google",
        "TopicEntityName": "Google",
        "TopicEntityMid": "m.045c7b",
        "InferentialChain": [
          "organization.organization.leadership",
          "organization.leadership.person"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2012-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "organization.leadership.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2012-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "organization.leadership.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2012-01-01",
          "End": "2012-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "2012"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025v9nm",
            "EntityName": "Vic Gundotra"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04q1q10",
            "EntityName": "Patrick Pichette"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05687l1",
            "EntityName": "Nikesh Arora"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09v3lbs",
            "EntityName": "David Drummond"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gjpq",
            "EntityName": "Larry Page"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.045c7b": "Google"
    },
    "qid_topic_entity": {
      "Q95": "Google"
    },
    "index": 451
  },
  {
    "QuestionId": "WebQTest-1387",
    "RawQuestion": "what time zone is toronto gmt?",
    "ProcessedQuestion": "what time zone is toronto gmt",
    "Parses": [
      {
        "ParseId": "WebQTest-1387.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h7h6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h7h6 ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "toronto",
        "TopicEntityName": "Toronto",
        "TopicEntityMid": "m.0h7h6",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hcv8",
            "EntityName": "Eastern Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0h7h6": "Toronto"
    },
    "qid_topic_entity": {
      "Q172": "Toronto"
    },
    "index": 452
  },
  {
    "QuestionId": "WebQTest-1174",
    "RawQuestion": "what cancer did jackie kennedy die of?",
    "ProcessedQuestion": "what cancer did jackie kennedy die of",
    "Parses": [
      {
        "ParseId": "WebQTest-1174.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h6mq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h6mq ns:people.deceased_person.cause_of_death ?x .\n?x ns:medicine.disease.parent_disease ns:m.0qcr0 .\n}\n",
        "PotentialTopicEntityMention": "jackie kennedy",
        "TopicEntityName": "Jacqueline Kennedy Onassis",
        "TopicEntityMid": "m.0h6mq",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0qcr0",
            "EntityName": "Cancer",
            "SourceNodeIndex": 0,
            "NodePredicate": "medicine.disease.parent_disease",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jdk0",
            "EntityName": "Lymphoma"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0h6mq": "Jacqueline Kennedy Onassis"
    },
    "qid_topic_entity": {
      "Q165421": "Jacqueline Kennedy Onassis"
    },
    "index": 453
  },
  {
    "QuestionId": "WebQTest-1861",
    "RawQuestion": "what is the government system of saudi arabia?",
    "ProcessedQuestion": "what is the government system of saudi arabia",
    "Parses": [
      {
        "ParseId": "WebQTest-1861.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01z215)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01z215 ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "saudi arabia",
        "TopicEntityName": "Saudi Arabia",
        "TopicEntityMid": "m.01z215",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fpfn",
            "EntityName": "Unitary state"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07v2k4",
            "EntityName": "Islamic state"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hqc2",
            "EntityName": "Absolute monarchy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01z215": "Saudi Arabia"
    },
    "qid_topic_entity": {
      "Q851": "Saudi Arabia"
    },
    "index": 454
  },
  {
    "QuestionId": "WebQTest-1591",
    "RawQuestion": "what was obama's former occupation?",
    "ProcessedQuestion": "what was obama 's former occupation",
    "Parses": [
      {
        "ParseId": "WebQTest-1591.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02mjmr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02mjmr ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "obama",
        "TopicEntityName": "Barack Obama",
        "TopicEntityMid": "m.02mjmr",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gc2",
            "EntityName": "Lawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fj9f",
            "EntityName": "Politician"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fz465",
            "EntityName": "Law professor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kyk",
            "EntityName": "Author"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02mjmr": "Barack Obama"
    },
    "qid_topic_entity": {
      "Q76": "Barack Obama"
    },
    "index": 455
  },
  {
    "QuestionId": "WebQTest-787",
    "RawQuestion": "where is the riviera casino?",
    "ProcessedQuestion": "where is the riviera casino",
    "Parses": [
      {
        "ParseId": "WebQTest-787.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05vv6l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05vv6l ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "riviera casino",
        "TopicEntityName": "Riviera",
        "TopicEntityMid": "m.05vv6l",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cv3w",
            "EntityName": "Las Vegas"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05vv6l": "Riviera"
    },
    "qid_topic_entity": {
      "Q1535845": "Riviera"
    },
    "index": 456
  },
  {
    "QuestionId": "WebQTest-1249",
    "RawQuestion": "what is the state flower of new mexico?",
    "ProcessedQuestion": "what is the state flower of new mexico",
    "Parses": [
      {
        "ParseId": "WebQTest-1249.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05fjy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05fjy ns:government.governmental_jurisdiction.official_symbols ?y .\n?y ns:location.location_symbol_relationship.symbol ?x .\n?y ns:location.location_symbol_relationship.Kind_of_symbol ns:m.04627gn .\n}\n",
        "PotentialTopicEntityMention": "new mexico",
        "TopicEntityName": "New Mexico",
        "TopicEntityMid": "m.05fjy",
        "InferentialChain": [
          "government.governmental_jurisdiction.official_symbols",
          "location.location_symbol_relationship.symbol"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04627gn",
            "EntityName": "State flower",
            "SourceNodeIndex": 0,
            "NodePredicate": "location.location_symbol_relationship.Kind_of_symbol",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hzbf1c",
            "EntityName": "Yucca flower"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05fjy": "New Mexico"
    },
    "qid_topic_entity": {
      "Q1522": "New Mexico"
    },
    "index": 457
  },
  {
    "QuestionId": "WebQTest-1765",
    "RawQuestion": "what region is turkey considered?",
    "ProcessedQuestion": "what region is turkey considered",
    "Parses": [
      {
        "ParseId": "WebQTest-1765.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01znc_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01znc_ ns:base.locations.countries.continent ?x .\n}\n",
        "PotentialTopicEntityMention": "turkey",
        "TopicEntityName": "Turkey",
        "TopicEntityMid": "m.01znc_",
        "InferentialChain": [
          "base.locations.countries.continent"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qkt",
            "EntityName": "Eurasia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01znc_": "Turkey"
    },
    "qid_topic_entity": {
      "Q43": "Turkey"
    },
    "index": 458
  },
  {
    "QuestionId": "WebQTest-814",
    "RawQuestion": "where is harley davidson corporate headquarters?",
    "ProcessedQuestion": "where is harley davidson corporate headquarters",
    "Parses": [
      {
        "ParseId": "WebQTest-814.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ny2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ny2 ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "harley davidson",
        "TopicEntityName": "Harley-Davidson Motor Company",
        "TopicEntityMid": "m.03ny2",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dyl9",
            "EntityName": "Milwaukee"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03ny2": "Harley-Davidson Motor Company"
    },
    "qid_topic_entity": {
      "Q192814": "Harley-Davidson Motor Company"
    },
    "index": 459
  },
  {
    "QuestionId": "WebQTest-362",
    "RawQuestion": "when did conflict start in ireland?",
    "ProcessedQuestion": "when did conflict start in ireland",
    "Parses": [
      {
        "ParseId": "WebQTest-362.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012wgb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012wgb ns:location.location.events ?x .\n?x ns:common.topic.notable_types ns:m.02h76fz .\n}\n",
        "PotentialTopicEntityMention": "ireland",
        "TopicEntityName": "Ireland",
        "TopicEntityMid": "m.012wgb",
        "InferentialChain": [
          "location.location.events"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02h76fz",
            "EntityName": "Military Conflict",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016j83",
            "EntityName": "Irish War of Independence"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01gqg3",
            "EntityName": "Nine Years' War"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037pbp",
            "EntityName": "Irish Confederate Wars"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03kz35",
            "EntityName": "Irish Rebellion of 1798"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03r8xj",
            "EntityName": "Wars of the Three Kingdoms"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03xvj",
            "EntityName": "Irish Civil War"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ymyvf",
            "EntityName": "Siege of Smerwick"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0455n7",
            "EntityName": "Anglo-Spanish War"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0467ph",
            "EntityName": "Williamite War in Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.046d2r",
            "EntityName": "Jacobite risings"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04qbccl",
            "EntityName": "Exp\u00e9dition d'Irlande"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.053997",
            "EntityName": "Irish Rebellion of 1641"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0554yw",
            "EntityName": "Cromwellian conquest of Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05cfx7",
            "EntityName": "Desmond Rebellions"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05ch2v",
            "EntityName": "Nine Years' War"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05mwtnl",
            "EntityName": "Planned French invasion of Britain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08zy1f",
            "EntityName": "Sack of Dun Gallimhe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08zyvy",
            "EntityName": "Battle of Tochar Cruachain-Bri-Ele"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08zz2w",
            "EntityName": "Battle of Ros-Mhic-Thri\u00fain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09gdz49",
            "EntityName": "Guerrilla phase of the Irish Civil War"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09qgbg",
            "EntityName": "Battle of Affane"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bh75th",
            "EntityName": "Siege of Drogheda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bmf9lh",
            "EntityName": "Battle of the Curragh"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c414c",
            "EntityName": "Battle of Knockdoe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c43s6",
            "EntityName": "Irish Free State offensive"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c9_fj",
            "EntityName": "Siege of Waterford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cffgq",
            "EntityName": "Norman invasion of Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cnvmv",
            "EntityName": "Bruce campaign in Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ddfcvb",
            "EntityName": "Battle of Belahoe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fmqqy",
            "EntityName": "Second Desmond Rebellion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fzqxy",
            "EntityName": "Battle of Glentaisie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gmdvwg",
            "EntityName": "Siege of Wexford"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.012wgb": "Ireland"
    },
    "qid_topic_entity": {
      "Q22890": "Ireland"
    },
    "index": 460
  },
  {
    "QuestionId": "WebQTest-1922",
    "RawQuestion": "what offices did theodore roosevelt hold?",
    "ProcessedQuestion": "what offices did theodore roosevelt hold",
    "Parses": [
      {
        "ParseId": "WebQTest-1922.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07hyk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07hyk ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.basic_title ?x .\n}\n",
        "PotentialTopicEntityMention": "theodore roosevelt",
        "TopicEntityName": "Theodore Roosevelt",
        "TopicEntityMid": "m.07hyk",
        "InferentialChain": [
          "government.politician.government_positions_held",
          "government.government_position_held.basic_title"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.060c4",
            "EntityName": "President"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0621v9",
            "EntityName": "Member of the Legislative Assembly"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09tm8y",
            "EntityName": "Assistant Secretary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dq3c",
            "EntityName": "Vice President"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fkvn",
            "EntityName": "Governor"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07hyk": "Theodore Roosevelt"
    },
    "qid_topic_entity": {
      "Q33866": "Theodore Roosevelt"
    },
    "index": 461
  },
  {
    "QuestionId": "WebQTest-1460",
    "RawQuestion": "what was gregor mendel contribution?",
    "ProcessedQuestion": "what was gregor mendel contribution",
    "Parses": [
      {
        "ParseId": "WebQTest-1460.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.039c5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.039c5 ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "gregor mendel",
        "TopicEntityName": "Gregor Mendel",
        "TopicEntityMid": "m.039c5",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0266rh",
            "EntityName": "Monk"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h6p1f",
            "EntityName": "Botanist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q2q",
            "EntityName": "Scientist"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.039c5": "Gregor Mendel"
    },
    "qid_topic_entity": {
      "Q37970": "Gregor Mendel"
    },
    "index": 462
  },
  {
    "QuestionId": "WebQTest-1057",
    "RawQuestion": "what concentration camp did anne frank died in?",
    "ProcessedQuestion": "what concentration camp did anne frank died in",
    "Parses": [
      {
        "ParseId": "WebQTest-1057.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03d9rk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03d9rk ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "anne frank",
        "TopicEntityName": "Anne Frank",
        "TopicEntityMid": "m.03d9rk",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0139dh",
            "EntityName": "Bergen-Belsen concentration camp"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03d9rk": "Anne Frank"
    },
    "qid_topic_entity": {
      "Q4583": "Anne Frank"
    },
    "index": 463
  },
  {
    "QuestionId": "WebQTest-1368",
    "RawQuestion": "who formed the american federation of labor?",
    "ProcessedQuestion": "who formed the american federation of labor",
    "Parses": [
      {
        "ParseId": "WebQTest-1368.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01z4fn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01z4fn ns:organization.organization.founders ?x .\n}\n",
        "PotentialTopicEntityMention": "american federation of labor",
        "TopicEntityName": "American Federation of Labor",
        "TopicEntityMid": "m.01z4fn",
        "InferentialChain": [
          "organization.organization.founders"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01w91b",
            "EntityName": "Samuel Gompers"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01z4fn": "American Federation of Labor"
    },
    "qid_topic_entity": {
      "Q464242": "American Federation of Labor"
    },
    "index": 464
  },
  {
    "QuestionId": "WebQTest-1584",
    "RawQuestion": "what disease did bernie mac die of?",
    "ProcessedQuestion": "what disease did bernie mac die of",
    "Parses": [
      {
        "ParseId": "WebQTest-1584.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02lj6p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02lj6p ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "bernie mac",
        "TopicEntityName": "Bernie Mac",
        "TopicEntityMid": "m.02lj6p",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01q5y6",
            "EntityName": "Sarcoidosis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0p367zp",
            "EntityName": "Complications from pneumonia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02lj6p": "Bernie Mac"
    },
    "qid_topic_entity": {
      "Q176323": "Bernie Mac"
    },
    "index": 465
  },
  {
    "QuestionId": "WebQTest-1855",
    "RawQuestion": "what airport do you fly into in paris?",
    "ProcessedQuestion": "what airport do you fly into in paris",
    "Parses": [
      {
        "ParseId": "WebQTest-1855.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05qtj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05qtj ns:travel.travel_destination.how_to_get_here ?y .\n?y ns:travel.transportation.transport_terminus ?x .\n?x ns:common.topic.notable_types ns:m.01xpjyz .\n}\n",
        "PotentialTopicEntityMention": "paris",
        "TopicEntityName": "Paris",
        "TopicEntityMid": "m.05qtj",
        "InferentialChain": [
          "travel.travel_destination.how_to_get_here",
          "travel.transportation.transport_terminus"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01xpjyz",
            "EntityName": "Airport",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01l525",
            "EntityName": "Paris Orly Airport"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qk79",
            "EntityName": "Charles de Gaulle Airport"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05qtj": "Paris"
    },
    "qid_topic_entity": {
      "Q90": "Paris"
    },
    "index": 466
  },
  {
    "QuestionId": "WebQTest-1551",
    "RawQuestion": "what year did seattle seahawks go to the super bowl?",
    "ProcessedQuestion": "what year did seattle seahawks go to the super bowl",
    "Parses": [
      {
        "ParseId": "WebQTest-1551.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: Done. Original comment: F UNION win or lose"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT  ?x\nWHERE {\n  ns:m.06x5s ns:sports.sports_championship.events ?x . # Super Bowl\n  {\n    { ?x ns:sports.sports_championship_event.runner_up ns:m.070xg . } # Seattle Seahawks\n    UNION\n    { ?x ns:sports.sports_championship_event.champion ns:m.070xg . } # Seattle Seahawks\n  }\n  ?x ns:time.event.start_date ?d .\n}",
        "PotentialTopicEntityMention": "seattle seahawks",
        "TopicEntityName": "Seattle Seahawks",
        "TopicEntityMid": "m.070xg",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.06x5s",
            "EntityName": "Super Bowl",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_championship_event.championship",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.032tn6",
            "EntityName": "Super Bowl XL"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09k4qg3",
            "EntityName": "Super Bowl XLVIII"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.070xg": "Seattle Seahawks"
    },
    "qid_topic_entity": {
      "Q221878": "Seattle Seahawks"
    },
    "index": 467
  },
  {
    "QuestionId": "WebQTest-97",
    "RawQuestion": "what songs does smokey robinson sing?",
    "ProcessedQuestion": "what songs does smokey robinson sing",
    "Parses": [
      {
        "ParseId": "WebQTest-97.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012_6c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012_6c ns:music.artist.track ?x .\n}\n",
        "PotentialTopicEntityMention": "smokey robinson",
        "TopicEntityName": "Smokey Robinson",
        "TopicEntityMid": "m.012_6c",
        "InferentialChain": [
          "music.artist.track"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.11b67gkcy5",
            "EntityName": "The Tears of a Clown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.11b80bs1tn",
            "EntityName": "Shop Around"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.11b80ddnd_",
            "EntityName": "You've Really Got a Hold on Me"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_0_fp",
            "EntityName": "Blame It on Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_0_fx",
            "EntityName": "Just Like You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_0_g_",
            "EntityName": "If You Wanna Make Love (Come 'round Here)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_0_g3",
            "EntityName": "Don't Play Another Love Song"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_0_gb",
            "EntityName": "Tell Me Tomorrow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_0_gk",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_0_h6",
            "EntityName": "Just a Touch Away"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_0_hf",
            "EntityName": "Baby Come Close"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_0_hn",
            "EntityName": "Let Me Be the Clock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_cwwy",
            "EntityName": "Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_pcwk",
            "EntityName": "Baby Come Close"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_y8l2",
            "EntityName": "Crusin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_zmw3",
            "EntityName": "Baby Come Close"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010_7k2c",
            "EntityName": "Jingle Bells"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010084gr",
            "EntityName": "Pops, We Love You (disco)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0108_6m",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01088__4",
            "EntityName": "The Tears Of A Clown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01099c7",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010k49_",
            "EntityName": "The Track of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010mw35t",
            "EntityName": "Whole Lot of Shakin\u2019 in My Heart (Since I Met You)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010s_5t8",
            "EntityName": "Bad Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010smc87",
            "EntityName": "I\u2019ve Got You Under My Skin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010ykpkc",
            "EntityName": "God Rest Ye Merry Gentlemen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010yqn_",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011hdnkf",
            "EntityName": "You've Really Got a Hold on Me"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011kmr8y",
            "EntityName": "Come by Here (Kum Ba Ya)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011myxj",
            "EntityName": "One Heartbeat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011myxr",
            "EntityName": "It's Time to Stop Shoppin' Around"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011myxz",
            "EntityName": "Why Do Happy Memories Hurt So Bad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011myy5",
            "EntityName": "You Don't Know What It's Like"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011myyd",
            "EntityName": "What's Too Much"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011myym",
            "EntityName": "Love Brought Us Here"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011myyv",
            "EntityName": "Love Don't Give No Reason"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011myz1",
            "EntityName": "Keep Me"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011p54r5",
            "EntityName": "The Tears of a Clown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011p67qp",
            "EntityName": "The Way You Do (The Things You Do)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011p9b18",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011pbky3",
            "EntityName": "Get Ready"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011pdb9p",
            "EntityName": "The Tears of a Clown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011pfg6v",
            "EntityName": "You Really Got a Hold on Me"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011pgv42",
            "EntityName": "Ooh Baby Baby"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011pjtn6",
            "EntityName": "Ain't That Peculiar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011pkgnv",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011plnkt",
            "EntityName": "My Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011pnbdj",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011ppwbj",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012_9f12",
            "EntityName": "Melody Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012_k0r7",
            "EntityName": "We\u2019ve Come Too Far to End It Now"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012_q4bx",
            "EntityName": "Save Me"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012_skx_",
            "EntityName": "With Your Love Came"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012_svv2",
            "EntityName": "I Can\u2019t Stand to See You Cry (Commercial version)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012_xzxw",
            "EntityName": "Melody Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0125fds",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0125fgj",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0125fgz",
            "EntityName": "Just My Soul Responding"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0125fjq",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0125fjy",
            "EntityName": "One Heartbeat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0125fkc",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012bp7r",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjh7",
            "EntityName": "My World"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjhg",
            "EntityName": "Fallin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjhx",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjj_",
            "EntityName": "Shop Around"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjjb",
            "EntityName": "You've Really Go a Hold on Me"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjjk",
            "EntityName": "Going to a Go Go"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjjs",
            "EntityName": "Mickey's Monkey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjk6",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjkn",
            "EntityName": "Baby That's Backatcha"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjkw",
            "EntityName": "I Second That Emotion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjl2",
            "EntityName": "More Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjl9",
            "EntityName": "Yester Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjlj",
            "EntityName": "Ooo Baby Baby"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjlr",
            "EntityName": "Baby Come Close"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjlz",
            "EntityName": "I've Made Love to You a Thousand Times"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjm5",
            "EntityName": "Quiet Storm (single version)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjmd",
            "EntityName": "Let Me Be the Clock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjmm",
            "EntityName": "One Heartbeat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012jdfhw",
            "EntityName": "Christmas Every Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012jf744",
            "EntityName": "So Bad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012k66rv",
            "EntityName": "No\u00ebl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012phz_2",
            "EntityName": "Tears Of A Clown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012tqfc9",
            "EntityName": "It's Christmas Time"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012xhrxz",
            "EntityName": "When Smokey Sings Tears Of A Clown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012xsn1",
            "EntityName": "Quiet Storm (Groove Boutique remix)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012y12b0",
            "EntityName": "Shop Around"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0130550r",
            "EntityName": "I Can\u2019t Stand to See You Cry (Stereo Promo version)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.013m5h_",
            "EntityName": "Tears of a Clown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.013m5h3",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.013r0nb",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0152zwl",
            "EntityName": "Virgin Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015dwjc",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015nbfn",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015w1lh",
            "EntityName": "Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0162zr4",
            "EntityName": "My Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01637sk",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0168mw1",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016btlz",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016dgnp",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016q8s2",
            "EntityName": "Nearness of You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016zk_k",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0175ch2",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0175qlb",
            "EntityName": "Everything for Christmas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.017b29q",
            "EntityName": "Jingle Bells"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.017b2bl",
            "EntityName": "Deck the Halls"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.017b2c0",
            "EntityName": "Christmas Greeting"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.017b2c7",
            "EntityName": "Away in the Manger / Coventry Carol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.017h_5s",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018cjqb",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018r09_",
            "EntityName": "The Agony and the Ecstasy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018r0b6",
            "EntityName": "Baby That's Backatcha"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018r0bf",
            "EntityName": "Wedding Song"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018r0bw",
            "EntityName": "Love Letters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018r0c2",
            "EntityName": "Coincidentally"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018yjsw",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0196fp5",
            "EntityName": "It's A Good Night"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0196fpd",
            "EntityName": "I Love The Nearness Of You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0196fpm",
            "EntityName": "The Hurt's On You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0196fq1",
            "EntityName": "Get Ready"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0196fq8",
            "EntityName": "Share It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019dtbb",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01b2g_b",
            "EntityName": "Theme From the Big Time"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01b2h4l",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01b6lrw",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01bw4s2",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01bxmxs",
            "EntityName": "Did You Know (Berry's Theme)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01c8nnz",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cvyp_",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznk9",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznw4",
            "EntityName": "You Go to My Head"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznwc",
            "EntityName": "I'm in the Mood for Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznwl",
            "EntityName": "Our Love Is Here to Stay"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznwt",
            "EntityName": "Fly Me to the Moon (In Other Words)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznx0",
            "EntityName": "Night and Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznx7",
            "EntityName": "I'm Glad There Is You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznxg",
            "EntityName": "More Than You Know"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznxp",
            "EntityName": "Speak Low"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznxx",
            "EntityName": "Time After Time"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01czny3",
            "EntityName": "I Can't Give You Anything but Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznyb",
            "EntityName": "I Like Your Face"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznyk",
            "EntityName": "I've Got You Under My Skin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznys",
            "EntityName": "Tea for Two"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d8txf",
            "EntityName": "My Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvp2",
            "EntityName": "Why"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvp9",
            "EntityName": "Double Good Everything"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvpj",
            "EntityName": "Rewind"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvpr",
            "EntityName": "Be Who You Are"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvpz",
            "EntityName": "I Love Your Face"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvq5",
            "EntityName": "I Can't Get Enough"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvqd",
            "EntityName": "Rack Me Back"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvqm",
            "EntityName": "When A Woman Cries"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvqv",
            "EntityName": "You Take Me Away"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvr1",
            "EntityName": "Skid Row"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvtx",
            "EntityName": "Love Is The Light"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvv_",
            "EntityName": "Everything You Touch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvv3",
            "EntityName": "Love' n Life"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvvb",
            "EntityName": "Same Old Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvvk",
            "EntityName": "I Can't Find"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvvs",
            "EntityName": "Take Me Through The Night"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvw6",
            "EntityName": "Don't Wanna Be Just Physical"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvwf",
            "EntityName": "Come to Me Soon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvwn",
            "EntityName": "You Made Me Feel Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvww",
            "EntityName": "Jasmin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvx2",
            "EntityName": "Easy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvx9",
            "EntityName": "Just Another Kiss"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvxj",
            "EntityName": "Unless You Do It Again"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dr42x",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dsvm6",
            "EntityName": "Baby Come Close"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dsvvw",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d_ks0h",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d_s2tn",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dmw_br",
            "EntityName": "Love So Fine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dn3npv",
            "EntityName": "Can't Fight Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dp72f8",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dpts1p",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dpv96f",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dq88ng",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dqb4nd",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dqbw6_",
            "EntityName": "The Tracks of My Tears (live)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dqdkk8",
            "EntityName": "And I Don't Love You (Larry Levan instrumental dub)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dqk3sz",
            "EntityName": "Walk on By"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dqlff0",
            "EntityName": "Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dqv41v",
            "EntityName": "As You Do"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dr7lg7",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0drh8lb",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0drkp6z",
            "EntityName": "I Second That Emotion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dt_ptv",
            "EntityName": "Never My Love / Never Can Say Goodbye"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtb8qg",
            "EntityName": "Tell Me Tomorrow, Part 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtljvv",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtrp8c",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtvg6t",
            "EntityName": "If You Want My Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtvg77",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtvg7g",
            "EntityName": "Food For Thought"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtvg7m",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtvg7y",
            "EntityName": "Will You Still Love Me Tomorrow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtvg83",
            "EntityName": "You Cannot Laugh Alone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtvg89",
            "EntityName": "Vitamin U"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtvg8l",
            "EntityName": "In My Corner"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtvg8s",
            "EntityName": "Get Ready"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dvtn_c",
            "EntityName": "If You Wanna Make Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dvxm0d",
            "EntityName": "I Hear The Children Singing"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dw5_xq",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dw61kc",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dwr468",
            "EntityName": "Just My Soul Responding"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dxk222",
            "EntityName": "Tell Me Tomorrow, Part 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dxnyq5",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dyfktm",
            "EntityName": "A Silent Partner in a Three-Way Love Affair"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dyfktv",
            "EntityName": "Just My Soul Responding"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dyfkv0",
            "EntityName": "Holly"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dyfkvc",
            "EntityName": "Will You Love Me Tomorrow?"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dyfkvm",
            "EntityName": "The Family Song"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dyfkvx",
            "EntityName": "Wanna Know My Mind"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dz3nl6",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dzhwd7",
            "EntityName": "I Care About Detroit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dzm8p0",
            "EntityName": "The Agony and the Ecstasy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dzpmp2",
            "EntityName": "And I Don't Love You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dzx9c9",
            "EntityName": "It's a Good Feeling"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f_0lph",
            "EntityName": "Everything You Touch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f_83bq",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f_mq0m",
            "EntityName": "Virgin Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f_q7d7",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f13pk_",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f142kc",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f1jd9_",
            "EntityName": "I Second That Emotions"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2cfdp",
            "EntityName": "Crusin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2n56y",
            "EntityName": "You Are Forever"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2rq2t",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f36_30",
            "EntityName": "Going to a Go-Go"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f3j2c2",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f3nxhj",
            "EntityName": "I've Made Love to You a Thousand Times"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f3pjf6",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f43fkv",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f4bv1j",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f5v2g1",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f6014r",
            "EntityName": "And I Don't Love You (Larry Levan instrumental dub)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f66p_p",
            "EntityName": "Cruisin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f6m0jv",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f6qz3d",
            "EntityName": "I Second That Emotion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f6z2t0",
            "EntityName": "Ooo Baby Baby (live)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f79mpy",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f8g82q",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f8z3nm",
            "EntityName": "Aqui Con Tigo (Being With You)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f9c4tl",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f9v2x6",
            "EntityName": "My Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fbh7b2",
            "EntityName": "Baby That's Backatcha"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fbmzfs",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fc_1mk",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fc7f26",
            "EntityName": "I Second That Emotion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fd1zg2",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fffj25",
            "EntityName": "Let Me Be the Clock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fg1wf6",
            "EntityName": "Who's Sad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fkwjrq",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fm00h3",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fmj7mj",
            "EntityName": "I've Made Love To You A Thousand Times"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fqk53w",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fqp888",
            "EntityName": "Aqui Contigo (Being With You) (Eric Bodi Rivera Mix)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fqv6z1",
            "EntityName": "Going to a Go Go"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fqvm4j",
            "EntityName": "You Really Got a Hold on Me"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fr_v80",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fr0js8",
            "EntityName": "I'll Keep My Light In My Window"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fr0l0c",
            "EntityName": "It's Fantastic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fr17cw",
            "EntityName": "We've Saved The Best For Last (Kenny G with Smokey Robinson)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fr21tl",
            "EntityName": "Don't Play Another Love Song"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fr25mq",
            "EntityName": "Get Ready"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fr2f7n",
            "EntityName": "I Second That Emotion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0frh_11",
            "EntityName": "Christmas Everyday"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0frj7rg",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fry_50",
            "EntityName": "Shoe Soul"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fsfc64",
            "EntityName": "Whatcha Gonna Do"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fsl88r",
            "EntityName": "One Time"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fsrks1",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fst9x_",
            "EntityName": "Girlfriend"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fst9x7",
            "EntityName": "You're the One for Me (feat. Joss Stone)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fst9xc",
            "EntityName": "Love Bath"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fst9xg",
            "EntityName": "You're Just My Life (feat. India.Arie)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fst9xq",
            "EntityName": "That Place"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fst9xt",
            "EntityName": "I Want You Back"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fst9y2",
            "EntityName": "Please Don't Take Your Love (feat. Carlos Santana)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fst9y5",
            "EntityName": "Satisfy You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fst9y8",
            "EntityName": "Time Flies"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fst9yc",
            "EntityName": "Don't Know Why"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fstrnj",
            "EntityName": "Virgin Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ft2lht",
            "EntityName": "Ooo Baby Baby"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ft2qph",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ft2vlr",
            "EntityName": "You Are So Beautiful (feat. Dave Koz)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ftf3g6",
            "EntityName": "Sweet Harmony"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ftm3d7",
            "EntityName": "I Am, I Am"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ftrm64",
            "EntityName": "Heavy On Pride (Light On Love)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fv7h0z",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fvxy86",
            "EntityName": "Jingle Bells"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fvygv8",
            "EntityName": "The Agony And The Ecstasy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fw_wmc",
            "EntityName": "Baby That's Backatcha"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fw08bn",
            "EntityName": "Be Kind To The Growing Mind (with The Temptations)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fw0vkw",
            "EntityName": "Let Me Be The Clock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fw31fh",
            "EntityName": "Season's Greetings from Smokey Robinson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fw31g7",
            "EntityName": "Noel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fw31gt",
            "EntityName": "A Child Is Waiting"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fw31h_",
            "EntityName": "The Christmas Song"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fw31jw",
            "EntityName": "It's Christmas Time"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fw5wyq",
            "EntityName": "Just My Soul Responding"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fw999p",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fwr9p9",
            "EntityName": "If You Can Want"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fwrblf",
            "EntityName": "Yes It's You Lady"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fwz2tv",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fx3k4h",
            "EntityName": "Quiet Storm (Groove Boutique Chill Jazz mix)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fxcgvy",
            "EntityName": "Can't Fight Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fxkdhk",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fxkw0z",
            "EntityName": "I Second That Emotion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fxqfb5",
            "EntityName": "Tell Me Tomorrow (12\\\" extended mix)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fy6905",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fy8n3m",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fy8n46",
            "EntityName": "What's Too Much"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fydglj",
            "EntityName": "Just To See Her Again"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fym10n",
            "EntityName": "Ebony Eyes (Duet with Rick James)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fyrz0m",
            "EntityName": "Shoe Soul"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fz0w5v",
            "EntityName": "Blame It On Love (Duet with Barbara Mitchell)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fz7511",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fz751m",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fzqxxf",
            "EntityName": "I Have Prayed On It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fzs3j4",
            "EntityName": "Love Don' Give No Reason (12 Inch Club Mix)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fzt1kc",
            "EntityName": "Quiet Storm (Groove Boutique Chill Jazz mix feat. Ray Ayers)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fzthgc",
            "EntityName": "Mother's Son"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g0scqg",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g0w8br",
            "EntityName": "There Will Come A Day ( I'm Gonna Happen To You )"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g13kj3",
            "EntityName": "You Are Forever"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g144h_",
            "EntityName": "Tracks Of My Tears (Live)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g14njr",
            "EntityName": "Little Girl, Little Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g1gzly",
            "EntityName": "You Are Forever"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g1gzm5",
            "EntityName": "Tell Me Tomorrow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g5zyhz",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g73wtl",
            "EntityName": "God Rest Ye Merry Gentlemen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g7z2x_",
            "EntityName": "Going to a Gogo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdtw0_",
            "EntityName": "Happy (Love Theme From Lady Sings the Blues)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdtw0x",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdtw18",
            "EntityName": "Sweet Harmony"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdtw1d",
            "EntityName": "Just My Soul Responding"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdtw1k",
            "EntityName": "Baby That's Backatcha"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdtw1r",
            "EntityName": "Medley: Never My Love / Never Can Say Goodbye"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdtw29",
            "EntityName": "The Agony and the Ecstasy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdtw2f",
            "EntityName": "Will You Love Me Tomorrow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdtw2j",
            "EntityName": "Baby Come Close"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ljv15",
            "EntityName": "My Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0lljdp",
            "EntityName": "My Guy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0lp413",
            "EntityName": "Pops, We Love You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0lqxkn",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ltmxy",
            "EntityName": "Tracks of my Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m60bl",
            "EntityName": "I Am I Am"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m60c7",
            "EntityName": "Baby That's Backatcha"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m60cp",
            "EntityName": "Open"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m60cx",
            "EntityName": "Daylight & Darkness"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m60d3",
            "EntityName": "There Will Come a Day (I'm Gonna Happen to You)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m60db",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m60ds",
            "EntityName": "Tell Me Tomorrow, Part 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m60f6",
            "EntityName": "Ebony Eyes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m60ff",
            "EntityName": "I've Made Love to You a Thousand Times"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m60g2",
            "EntityName": "Everything You Touch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m9xs8",
            "EntityName": "Cruisin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n2_44",
            "EntityName": "We've Saved the Best for Last"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nk__k5",
            "EntityName": "A Tattoo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nl37kz",
            "EntityName": "My Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nl9qxd",
            "EntityName": "I Praise & Worship You Father"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nlm_x0",
            "EntityName": "The Tracks of My Heart"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nlmrvm",
            "EntityName": "Jesus Told Me To Love You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nmk9gx",
            "EntityName": "The Tears of a Clown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nmz8sn",
            "EntityName": "She's Only a Baby Herself"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nmzntz",
            "EntityName": "Let Your Light Shine On Me"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nn463g",
            "EntityName": "It's Her Turn to Live"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nnjjzn",
            "EntityName": "Just Passing Through"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0np0f3h",
            "EntityName": "Asleep on My Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0np0py4",
            "EntityName": "I Know You by Heart"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nsfzn",
            "EntityName": "Tears of a Clown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nsg0d",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nylqs",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qc0hc",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qc9hmx",
            "EntityName": "Tears of a Sweet Free Clown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qhqdx",
            "EntityName": "Santa Claus is Coming to Town"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qj3c6",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qvtc8",
            "EntityName": "Ever Had A Dream"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0r3gf_",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0r6k3s",
            "EntityName": "I Second That Emotion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rfp86w",
            "EntityName": "Gang Bangin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rgwcn5",
            "EntityName": "Fulfill Your Need"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rhhgpp",
            "EntityName": "Standing On Jesus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rj455v",
            "EntityName": "The Love Between Me and My Kids"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rjqd_v",
            "EntityName": "The Road to Damascus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rjqdgz",
            "EntityName": "He Can Fix Anything"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rjqk7x",
            "EntityName": "We Are The Warriors"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rvzf2",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rvzf9",
            "EntityName": "Baby That's Backatcha"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rvzfj",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rvzfr",
            "EntityName": "(It's The) Same Old Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rvzfz",
            "EntityName": "The Agony and the Ecstasy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rvzgd",
            "EntityName": "Don't Play Another Love Song"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rvzgm",
            "EntityName": "Get Ready"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rvzgv",
            "EntityName": "Let Me Be the Clock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rvzh1",
            "EntityName": "One Heartbeat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rvzh8",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0shh9bn",
            "EntityName": "Little Girl Little Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0shjmm7",
            "EntityName": "Te Quiero Como Si No Hubiera Un Manana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0shqv6r",
            "EntityName": "Because of You It's the Best It's Ever Been"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0shv48x",
            "EntityName": "Sleepless Nights"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0shvq8s",
            "EntityName": "Hold on to Your Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0sj2crn",
            "EntityName": "Photograph in My Mind"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0sjczzn",
            "EntityName": "Be Kind to the Growing Mind"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0sjwhfz",
            "EntityName": "Driving Thru Life in the Fast Lane"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0sjxs37",
            "EntityName": "Gone Forever"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0skth34",
            "EntityName": "Girl I'm Standing There"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0sllgc1",
            "EntityName": "No Time to Stop Believing"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0sm8fxv",
            "EntityName": "Train of Thought"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0smdbk7",
            "EntityName": "Close Encounters of the First Kind"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0sn2h12",
            "EntityName": "Hanging on by a Thread"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0sngt3w",
            "EntityName": "Why Are You Running From My Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0snrjwr",
            "EntityName": "Wishful Thinking"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0sp3sk1",
            "EntityName": "Some People Will Do Anything for Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0t6xs8",
            "EntityName": "Ebony Eyes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0vhw1s",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0vlj8h",
            "EntityName": "And I Love Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0vy2vlk",
            "EntityName": "The Tears Of A Clown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0wznrc",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0x1pvv",
            "EntityName": "First Time on a Ferris Wheel (Love Theme From \\\"Berry Gordy's The Last Dragon\\\")"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0x7x8jf",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0x9mvw7",
            "EntityName": "Winter Wonderland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0xlrlq9",
            "EntityName": "The Tracks Of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0xy0b_",
            "EntityName": "The Christmas Song (Chestnuts Roasting on an Open Fire) (feat. The Temptations)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0xy2lj",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y4bhd",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ydd80",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ydxzn",
            "EntityName": "Be Careful What You Wish For"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ydy1y",
            "EntityName": "Really Gonna Miss You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ydy24",
            "EntityName": "Be Careful What You Wish For (instrumental)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yjgdk",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ykc0x",
            "EntityName": "Just My Soul Responding"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yljw0",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yljyn",
            "EntityName": "One Heartbeat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yn3m0",
            "EntityName": "Going to a Go-Go"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0z2vns",
            "EntityName": "The Agony and the Ecstasy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zh9t_",
            "EntityName": "Virgin Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjfjj",
            "EntityName": "Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zptsbd",
            "EntityName": "Please Come Home for Christmas"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.012_6c": "Smokey Robinson"
    },
    "qid_topic_entity": {
      "Q310332": "Smokey Robinson"
    },
    "index": 468
  },
  {
    "QuestionId": "WebQTest-126",
    "RawQuestion": "who wrote the jana gana mana?",
    "ProcessedQuestion": "who wrote the jana gana mana",
    "Parses": [
      {
        "ParseId": "WebQTest-126.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fl44)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fl44 ns:music.composition.composer ?x .\n}\n",
        "PotentialTopicEntityMention": "jana gana mana",
        "TopicEntityName": "Jana Gana Mana",
        "TopicEntityMid": "m.0fl44",
        "InferentialChain": [
          "music.composition.composer"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vx721",
            "EntityName": "Ram Singh Thakur"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d0mbj",
            "EntityName": "Rabindranath Tagore"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0fl44": "Jana Gana Mana"
    },
    "qid_topic_entity": {
      "Q83099": "Jana Gana Mana"
    },
    "index": 469
  },
  {
    "QuestionId": "WebQTest-56",
    "RawQuestion": "what county is kansas city kansas?",
    "ProcessedQuestion": "what county is kansas city kansas",
    "Parses": [
      {
        "ParseId": "WebQTest-56.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0tcj6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0tcj6 ns:location.hud_county_place.county ?x .\n}\n",
        "PotentialTopicEntityMention": "kansas city kansas",
        "TopicEntityName": "Kansas City",
        "TopicEntityMid": "m.0tcj6",
        "InferentialChain": [
          "location.hud_county_place.county"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nnyr",
            "EntityName": "Wyandotte County"
          }
        ]
      },
      {
        "ParseId": "WebQTest-56.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0tcj6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0tcj6 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
        "PotentialTopicEntityMention": "kansas city kansas",
        "TopicEntityName": "Kansas City",
        "TopicEntityMid": "m.0tcj6",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpym_",
            "EntityName": "US County",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nnyr",
            "EntityName": "Wyandotte County"
          }
        ]
      },
      {
        "ParseId": "WebQTest-56.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04fdkj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04fdkj ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
        "PotentialTopicEntityMention": "kansas city kansas",
        "TopicEntityName": "Kansas Speedway",
        "TopicEntityMid": "m.04fdkj",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpym_",
            "EntityName": "US County",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nnyr",
            "EntityName": "Wyandotte County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0tcj6": "Kansas City",
      "m.04fdkj": "Kansas Speedway"
    },
    "qid_topic_entity": {
      "Q486472": "Kansas City",
      "Q1723946": "Kansas Speedway"
    },
    "index": 470
  },
  {
    "QuestionId": "WebQTest-619",
    "RawQuestion": "who played victoria barkley?",
    "ProcessedQuestion": "who played victoria barkley",
    "Parses": [
      {
        "ParseId": "WebQTest-619.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.030k44)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.030k44 ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.09cyx23 .\n}\n",
        "PotentialTopicEntityMention": "victoria barkley",
        "TopicEntityName": "The Big Valley",
        "TopicEntityMid": "m.030k44",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.09cyx23",
            "EntityName": "Victoria Barkley",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bw6y",
            "EntityName": "Barbara Stanwyck"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.030k44": "The Big Valley"
    },
    "qid_topic_entity": {
      "Q582053": "The Big Valley"
    },
    "index": 471
  },
  {
    "QuestionId": "WebQTest-701",
    "RawQuestion": "what team is reggie bush on 2011?",
    "ProcessedQuestion": "what team is reggie bush on 2011",
    "Parses": [
      {
        "ParseId": "WebQTest-701.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05cb70)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05cb70 ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "reggie bush",
        "TopicEntityName": "Reggie Bush",
        "TopicEntityMid": "m.05cb70",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2011-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2011-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2011-01-01",
          "End": "2011-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "2011"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vn5",
            "EntityName": "Miami Dolphins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05g3v",
            "EntityName": "New Orleans Saints"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05cb70": "Reggie Bush"
    },
    "qid_topic_entity": {
      "Q555271": "Reggie Bush"
    },
    "index": 472
  },
  {
    "QuestionId": "WebQTest-1420",
    "RawQuestion": "what does monsanto own?",
    "ProcessedQuestion": "what does monsanto own",
    "Parses": [
      {
        "ParseId": "WebQTest-1420.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0n8m6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0n8m6 ns:business.business_operation.industry ?x .\n}\n",
        "PotentialTopicEntityMention": "monsanto",
        "TopicEntityName": "Monsanto",
        "TopicEntityMid": "m.0n8m6",
        "InferentialChain": [
          "business.business_operation.industry"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ntf00",
            "EntityName": "Agrochemical"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09dh0",
            "EntityName": "Seed"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g10z",
            "EntityName": "Chemical industry"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hkf",
            "EntityName": "Agriculture"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0n8m6": "Monsanto"
    },
    "qid_topic_entity": {
      "Q207983": "Monsanto"
    },
    "index": 473
  },
  {
    "QuestionId": "WebQTest-1001",
    "RawQuestion": "what country is nicki minaj from?",
    "ProcessedQuestion": "what country is nicki minaj from",
    "Parses": [
      {
        "ParseId": "WebQTest-1001.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.047sxrj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.047sxrj ns:people.person.nationality ?x .\n}\n",
        "PotentialTopicEntityMention": "nicki minaj",
        "TopicEntityName": "Nicki Minaj",
        "TopicEntityMid": "m.047sxrj",
        "InferentialChain": [
          "people.person.nationality"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.047sxrj": "Nicki Minaj"
    },
    "qid_topic_entity": {
      "Q162202": "Nicki Minaj"
    },
    "index": 474
  },
  {
    "QuestionId": "WebQTest-1833",
    "RawQuestion": "what kind of government does brazil has?",
    "ProcessedQuestion": "what kind of government does brazil has",
    "Parses": [
      {
        "ParseId": "WebQTest-1833.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015fr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015fr ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "brazil",
        "TopicEntityName": "Brazil",
        "TopicEntityMid": "m.015fr",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d9r3",
            "EntityName": "Presidential system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c9rw5",
            "EntityName": "Constitutional republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j729",
            "EntityName": "Federal republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.015fr": "Brazil"
    },
    "qid_topic_entity": {
      "Q155": "Brazil"
    },
    "index": 475
  },
  {
    "QuestionId": "WebQTest-923",
    "RawQuestion": "what countries does england border?",
    "ProcessedQuestion": "what countries does england border",
    "Parses": [
      {
        "ParseId": "WebQTest-923.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02jx1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02jx1 ns:location.location.adjoin_s ?y .\n?y ns:location.adjoining_relationship.adjoins ?x .\n?x ns:base.biblioness.bibs_location.loc_type ?sk0 .\nFILTER (str(?sk0) = \"Country\")\n}\n",
        "PotentialTopicEntityMention": "england",
        "TopicEntityName": "England",
        "TopicEntityMid": "m.02jx1",
        "InferentialChain": [
          "location.location.adjoin_s",
          "location.adjoining_relationship.adjoins"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Value",
            "Argument": "Country",
            "EntityName": null,
            "SourceNodeIndex": 1,
            "NodePredicate": "base.biblioness.bibs_location.loc_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q1r",
            "EntityName": "Scotland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5g9",
            "EntityName": "Wales"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02jx1": "England"
    },
    "qid_topic_entity": {
      "Q21": "England"
    },
    "index": 476
  },
  {
    "QuestionId": "WebQTest-88",
    "RawQuestion": "who is willow smith mom name?",
    "ProcessedQuestion": "who is willow smith mom name",
    "Parses": [
      {
        "ParseId": "WebQTest-88.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gq433)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gq433 ns:people.person.parents ?x .\n?x ns:people.person.gender ns:m.02zsn .\n}\n",
        "PotentialTopicEntityMention": "willow smith",
        "TopicEntityName": "Willow Smith",
        "TopicEntityMid": "m.03gq433",
        "InferentialChain": [
          "people.person.parents"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02zsn",
            "EntityName": "Female",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.person.gender",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01j7z7",
            "EntityName": "Jada Pinkett Smith"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03gq433": "Willow Smith"
    },
    "qid_topic_entity": {
      "Q298209": "Willow Smith"
    },
    "index": 477
  },
  {
    "QuestionId": "WebQTest-1905",
    "RawQuestion": "where was auschwitz concentration camp located?",
    "ProcessedQuestion": "where was auschwitz concentration camp located",
    "Parses": [
      {
        "ParseId": "WebQTest-1905.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0v_x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0v_x ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "auschwitz concentration camp",
        "TopicEntityName": "Auschwitz concentration camp",
        "TopicEntityMid": "m.0v_x",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.021p2p",
            "EntityName": "O\u015bwi\u0119cim"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05mtdhz",
            "EntityName": "Auschwitz-Birkenau State Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qhw",
            "EntityName": "Poland"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0v_x": "Auschwitz concentration camp"
    },
    "qid_topic_entity": {
      "Q7341": "Auschwitz concentration camp"
    },
    "index": 478
  },
  {
    "QuestionId": "WebQTest-1559",
    "RawQuestion": "what to do san jose ca?",
    "ProcessedQuestion": "what to do san jose ca",
    "Parses": [
      {
        "ParseId": "WebQTest-1559.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f04v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f04v ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "san jose ca",
        "TopicEntityName": "San Jose",
        "TopicEntityMid": "m.0f04v",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nmrx",
            "EntityName": "Winchester Mystery House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0255__",
            "EntityName": "Rosicrucian Egyptian Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ryz1",
            "EntityName": "The Tech Museum of Innovation"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03bwp6",
            "EntityName": "Alum Rock Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gyhcp",
            "EntityName": "San Jose Museum of Quilts & Textiles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rvy1",
            "EntityName": "Japantown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04_y_d",
            "EntityName": "San Jose Museum of Art"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04zrqk",
            "EntityName": "Kelley Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.053j1_",
            "EntityName": "Happy Hollow Park & Zoo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b8gm",
            "EntityName": "Cinequest Film Festival"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05cm97",
            "EntityName": "Downtown San Jose"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.072p67",
            "EntityName": "Santana Row"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.099ltq",
            "EntityName": "San Jose Municipal Rose Garden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cm9hhr",
            "EntityName": "Rock \u2018n\u2019 Roll San Jose Half Marathon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fcd8p",
            "EntityName": "Children's Discovery Museum of San Jose"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f04v": "San Jose"
    },
    "qid_topic_entity": {
      "Q16553": "San Jose"
    },
    "index": 479
  },
  {
    "QuestionId": "WebQTest-68",
    "RawQuestion": "who plays the voice of kitt in knight rider?",
    "ProcessedQuestion": "who plays the voice of kitt in knight rider",
    "Parses": [
      {
        "ParseId": "WebQTest-68.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bvxv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bvxv ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.special_performance_type ns:m.02nsjvf .\n?y ns:tv.regular_tv_appearance.character ns:m.05_bhx .\n}\n",
        "PotentialTopicEntityMention": "knight rider",
        "TopicEntityName": "Knight Rider",
        "TopicEntityMid": "m.0bvxv",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02nsjvf",
            "EntityName": "Voice",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.special_performance_type",
            "ValueType": "String"
          },
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.05_bhx",
            "EntityName": "KITT",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0309r1",
            "EntityName": "William Daniels"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0bvxv": "Knight Rider"
    },
    "qid_topic_entity": {
      "Q464009": "Knight Rider"
    },
    "index": 480
  },
  {
    "QuestionId": "WebQTest-1039",
    "RawQuestion": "where does sherrod brown live?",
    "ProcessedQuestion": "where does sherrod brown live",
    "Parses": [
      {
        "ParseId": "WebQTest-1039.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.034s80)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.034s80 ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\nFILTER(NOT EXISTS {?y ns:people.place_lived.end_date ?sk0} || \nEXISTS {?y ns:people.place_lived.end_date ?sk1 . \nFILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.place_lived.start_date ?sk2} || \nEXISTS {?y ns:people.place_lived.start_date ?sk3 . \nFILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "sherrod brown",
        "TopicEntityName": "Sherrod Brown",
        "TopicEntityMid": "m.034s80",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.place_lived.end_date",
            "ValueType": "DateTime"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.place_lived.start_date",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yzw7",
            "EntityName": "Avon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0z18v",
            "EntityName": "Mansfield"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.034s80": "Sherrod Brown"
    },
    "qid_topic_entity": {
      "Q381880": "Sherrod Brown"
    },
    "index": 481
  },
  {
    "QuestionId": "WebQTest-206",
    "RawQuestion": "what position does brandon roy play?",
    "ProcessedQuestion": "what position does brandon roy play",
    "Parses": [
      {
        "ParseId": "WebQTest-206.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cf_p_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cf_p_ ns:basketball.basketball_player.position_s ?x .\n}\n",
        "PotentialTopicEntityMention": "brandon roy",
        "TopicEntityName": "Brandon Roy",
        "TopicEntityMid": "m.0cf_p_",
        "InferentialChain": [
          "basketball.basketball_player.position_s"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02sf_r",
            "EntityName": "Point guard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03558l",
            "EntityName": "Shooting guard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0355dz",
            "EntityName": "Small forward"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0cf_p_": "Brandon Roy"
    },
    "qid_topic_entity": {
      "Q313485": "Brandon Roy"
    },
    "index": 482
  },
  {
    "QuestionId": "WebQTest-278",
    "RawQuestion": "who's dating claire danes?",
    "ProcessedQuestion": "who 's dating claire danes",
    "Parses": [
      {
        "ParseId": "WebQTest-278.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01gq0b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01gq0b ns:celebrities.celebrity.sexual_relationships ?y .\n?y ns:celebrities.romantic_relationship.celebrity ?x .\n?y ns:celebrities.romantic_relationship.relationship_type ns:m.02_7k44 .\nFILTER(NOT EXISTS {?y ns:celebrities.romantic_relationship.start_date ?sk0} || \nEXISTS {?y ns:celebrities.romantic_relationship.start_date ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:celebrities.romantic_relationship.end_date ?sk2} || \nEXISTS {?y ns:celebrities.romantic_relationship.end_date ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "claire danes",
        "TopicEntityName": "Claire Danes",
        "TopicEntityMid": "m.01gq0b",
        "InferentialChain": [
          "celebrities.celebrity.sexual_relationships",
          "celebrities.romantic_relationship.celebrity"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02_7k44",
            "EntityName": "Dated",
            "SourceNodeIndex": 0,
            "NodePredicate": "celebrities.romantic_relationship.relationship_type",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "celebrities.romantic_relationship.start_date",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "celebrities.romantic_relationship.end_date",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02tc5y",
            "EntityName": "Hugh Dancy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01gq0b": "Claire Danes"
    },
    "qid_topic_entity": {
      "Q867813": "Claire Danes"
    },
    "index": 483
  },
  {
    "QuestionId": "WebQTest-1631",
    "RawQuestion": "who is the texas state senator?",
    "ProcessedQuestion": "who is the texas state senator",
    "Parses": [
      {
        "ParseId": "WebQTest-1631.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07b_l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07b_l ns:government.political_district.representatives ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.office_position_or_title ns:m.02_7l8y .\n}\n",
        "PotentialTopicEntityMention": "texas",
        "TopicEntityName": "Texas",
        "TopicEntityMid": "m.07b_l",
        "InferentialChain": [
          "government.political_district.representatives",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02_7l8y",
            "EntityName": "United States Senator",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.office_position_or_title",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016l53",
            "EntityName": "Phil Gramm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01rpmr",
            "EntityName": "Lloyd Bentsen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01xcqs",
            "EntityName": "John Cornyn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02050j",
            "EntityName": "Kay Bailey Hutchison"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.021nlp",
            "EntityName": "Ralph Yarborough"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028356y",
            "EntityName": "John Hemphill"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02dcc4",
            "EntityName": "John Tower"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pv3w",
            "EntityName": "James Pinckney Henderson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wv_6",
            "EntityName": "W. Lee O'Daniel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037_c0",
            "EntityName": "Thomas Jefferson Rusk"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037f5r",
            "EntityName": "Charles Allen Culberson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03r6tl",
            "EntityName": "John Henninger Reagan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03w4ln",
            "EntityName": "Roger Q. Mills"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03x_db",
            "EntityName": "Richard Coke"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03yvp9",
            "EntityName": "Price Daniel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0452c9",
            "EntityName": "Bob Krueger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04l_mk",
            "EntityName": "Louis Wigfall"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.053fln",
            "EntityName": "William A. Blakley"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.053zcg",
            "EntityName": "Joseph Weldon Bailey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06j9dp",
            "EntityName": "Andrew Jackson Houston"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06yjdd",
            "EntityName": "Horace Chilton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06yjq_",
            "EntityName": "Morris Sheppard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ym7b",
            "EntityName": "Matthias Ward"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07j6ty",
            "EntityName": "Ted Cruz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07jjx6",
            "EntityName": "James W. Flanagan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07k6x2",
            "EntityName": "Samuel B. Maxey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07p913",
            "EntityName": "Morgan C. Hamilton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.084vl0",
            "EntityName": "Earle Bradford Mayfield"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.089hd7",
            "EntityName": "Tom Connally"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08fbq9",
            "EntityName": "Rienzi Melville Johnston"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f7fy",
            "EntityName": "Lyndon B. Johnson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbjz",
            "EntityName": "Sam Houston"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07b_l": "Texas"
    },
    "qid_topic_entity": {
      "Q1439": "Texas"
    },
    "index": 484
  },
  {
    "QuestionId": "WebQTest-1885",
    "RawQuestion": "what does god shiva represent?",
    "ProcessedQuestion": "what does god shiva represent",
    "Parses": [
      {
        "ParseId": "WebQTest-1885.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.074l5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.074l5 ns:religion.deity.deity_of ?x .\n}\n",
        "PotentialTopicEntityMention": "shiva",
        "TopicEntityName": "Shiva",
        "TopicEntityMid": "m.074l5",
        "InferentialChain": [
          "religion.deity.deity_of"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03j6c",
            "EntityName": "Hinduism"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.074l5": "Shiva"
    },
    "qid_topic_entity": {
      "Q11378": "Shiva"
    },
    "index": 485
  },
  {
    "QuestionId": "WebQTest-910",
    "RawQuestion": "where did alexander graham bell die?",
    "ProcessedQuestion": "where did alexander graham bell die",
    "Parses": [
      {
        "ParseId": "WebQTest-910.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k70)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k70 ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "alexander graham bell",
        "TopicEntityName": "Alexander Graham Bell",
        "TopicEntityMid": "m.0k70",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08npx8",
            "EntityName": "Beinn Bhreagh, Nova Scotia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0k70": "Alexander Graham Bell"
    },
    "qid_topic_entity": {
      "Q34286": "Alexander Graham Bell"
    },
    "index": 486
  },
  {
    "QuestionId": "WebQTest-406",
    "RawQuestion": "who is the coach of the sf giants?",
    "ProcessedQuestion": "who is the coach of the sf giants",
    "Parses": [
      {
        "ParseId": "WebQTest-406.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0713r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0713r ns:baseball.baseball_team.current_coaches ?y .\n?y ns:baseball.current_coaching_tenure.baseball_coach ?x .\n}\n",
        "PotentialTopicEntityMention": "sf giants",
        "TopicEntityName": "San Francisco Giants",
        "TopicEntityMid": "m.0713r",
        "InferentialChain": [
          "baseball.baseball_team.current_coaches",
          "baseball.current_coaching_tenure.baseball_coach"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02680w9",
            "EntityName": "Bill Hayes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02plhsr",
            "EntityName": "Tim Flannery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02yf3x",
            "EntityName": "Dave Righetti"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.057jcc",
            "EntityName": "Carney Lansford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.079w94",
            "EntityName": "Roberto Kelly"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07w9kn",
            "EntityName": "Ron Wotus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.085wxv",
            "EntityName": "Mark Gardner"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0713r": "San Francisco Giants"
    },
    "qid_topic_entity": {
      "Q308966": "San Francisco Giants"
    },
    "index": 487
  },
  {
    "QuestionId": "WebQTest-1364",
    "RawQuestion": "what do they speak in scotland?",
    "ProcessedQuestion": "what do they speak in scotland",
    "Parses": [
      {
        "ParseId": "WebQTest-1364.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06q1r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06q1r ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "scotland",
        "TopicEntityName": "Scotland",
        "TopicEntityMid": "m.06q1r",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06q1r": "Scotland"
    },
    "qid_topic_entity": {
      "Q22": "Scotland"
    },
    "index": 488
  },
  {
    "QuestionId": "WebQTest-1844",
    "RawQuestion": "who plays robin hood in prince of thieves?",
    "ProcessedQuestion": "who plays robin hood in prince of thieves",
    "Parses": [
      {
        "ParseId": "WebQTest-1844.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01msrb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01msrb ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.06j7x .\n}\n",
        "PotentialTopicEntityMention": "prince of thieves",
        "TopicEntityName": "Robin Hood: Prince of Thieves",
        "TopicEntityMid": "m.01msrb",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.06j7x",
            "EntityName": "Robin Hood",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0127m7",
            "EntityName": "Kevin Costner"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01msrb": "Robin Hood: Prince of Thieves"
    },
    "qid_topic_entity": {
      "Q486822": "Robin Hood: Prince of Thieves"
    },
    "index": 489
  },
  {
    "QuestionId": "WebQTest-1664",
    "RawQuestion": "what form of currency does germany use?",
    "ProcessedQuestion": "what form of currency does germany use",
    "Parses": [
      {
        "ParseId": "WebQTest-1664.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0345h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0345h ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "germany",
        "TopicEntityName": "Germany",
        "TopicEntityMid": "m.0345h",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02l6h",
            "EntityName": "Euro"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0345h": "Germany"
    },
    "qid_topic_entity": {
      "Q183": "Germany"
    },
    "index": 490
  },
  {
    "QuestionId": "WebQTest-1593",
    "RawQuestion": "where is the thames river source?",
    "ProcessedQuestion": "where is the thames river source",
    "Parses": [
      {
        "ParseId": "WebQTest-1593.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d2kt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d2kt ns:geography.river.origin ?x .\n}\n",
        "PotentialTopicEntityMention": "thames river",
        "TopicEntityName": "River Thames",
        "TopicEntityMid": "m.0d2kt",
        "InferentialChain": [
          "geography.river.origin"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pj_tp",
            "EntityName": "Thames Head"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d2kt": "River Thames"
    },
    "qid_topic_entity": {
      "Q19686": "River Thames"
    },
    "index": 491
  },
  {
    "QuestionId": "WebQTest-340",
    "RawQuestion": "who is richard pryor son?",
    "ProcessedQuestion": "who is richard pryor son",
    "Parses": [
      {
        "ParseId": "WebQTest-340.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01hmk9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01hmk9 ns:people.person.children ?x .\n?x ns:people.person.gender ns:m.05zppz .\n}\n",
        "PotentialTopicEntityMention": "richard pryor",
        "TopicEntityName": "Richard Pryor",
        "TopicEntityMid": "m.01hmk9",
        "InferentialChain": [
          "people.person.children"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.05zppz",
            "EntityName": "Male",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.person.gender",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05z2sc1",
            "EntityName": "Franklin Pryor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05z2scn",
            "EntityName": "Richard Pryor Jr."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05z2scv",
            "EntityName": "Steven Pryor"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01hmk9": "Richard Pryor"
    },
    "qid_topic_entity": {
      "Q294912": "Richard Pryor"
    },
    "index": 492
  },
  {
    "QuestionId": "WebQTest-543",
    "RawQuestion": "what college did martin luther king jr go to?",
    "ProcessedQuestion": "what college did martin luther king jr go to",
    "Parses": [
      {
        "ParseId": "WebQTest-543.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051cc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051cc ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "martin luther king jr",
        "TopicEntityName": "Martin Luther King, Jr.",
        "TopicEntityMid": "m.051cc",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_r9k",
            "EntityName": "Morehouse College"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06yr21",
            "EntityName": "Crozer Theological Seminary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gl5_",
            "EntityName": "Boston University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.051cc": "Martin Luther King, Jr."
    },
    "qid_topic_entity": {
      "Q8027": "Martin Luther King, Jr."
    },
    "index": 493
  },
  {
    "QuestionId": "WebQTest-831",
    "RawQuestion": "what type of religion does argentina have?",
    "ProcessedQuestion": "what type of religion does argentina have",
    "Parses": [
      {
        "ParseId": "WebQTest-831.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jgd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jgd ns:location.statistical_region.religions ?y .\n?y ns:location.religion_percentage.religion ?x .\n}\n",
        "PotentialTopicEntityMention": "argentina",
        "TopicEntityName": "Argentina",
        "TopicEntityMid": "m.0jgd",
        "InferentialChain": [
          "location.statistical_region.religions",
          "location.religion_percentage.religion"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_gx",
            "EntityName": "Judaism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05sfs",
            "EntityName": "Protestantism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c8wxp",
            "EntityName": "Catholicism"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jgd": "Argentina"
    },
    "qid_topic_entity": {
      "Q414": "Argentina"
    },
    "index": 494
  },
  {
    "QuestionId": "WebQTest-281",
    "RawQuestion": "what type of sports do japanese play?",
    "ProcessedQuestion": "what type of sports do japanese play",
    "Parses": [
      {
        "ParseId": "WebQTest-281.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_3d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_3d ns:sports.sports_team_location.teams ?x .\n}\n",
        "PotentialTopicEntityMention": "japanese",
        "TopicEntityName": "Japan",
        "TopicEntityMid": "m.03_3d",
        "InferentialChain": [
          "sports.sports_team_location.teams"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ppd68",
            "EntityName": "Japan women's national volleyball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rkd3c",
            "EntityName": "Japan men's national volleyball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03xh50",
            "EntityName": "Japan national football team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05p71j1",
            "EntityName": "Japan women's national handball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09gqcv",
            "EntityName": "Japan national baseball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f9d97",
            "EntityName": "Japan national handball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qfps15",
            "EntityName": "Bridgestone-Anchor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0t_dl1j",
            "EntityName": "Burning"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03_3d": "Japan"
    },
    "qid_topic_entity": {
      "Q17": "Japan"
    },
    "index": 495
  },
  {
    "QuestionId": "WebQTest-1225",
    "RawQuestion": "what kourtney kardashian boyfriends name?",
    "ProcessedQuestion": "what kourtney kardashian boyfriends name",
    "Parses": [
      {
        "ParseId": "WebQTest-1225.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.043ttm7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.043ttm7 ns:base.popstra.celebrity.dated ?y .\n?y ns:base.popstra.dated.participant ?x .\n}\n",
        "PotentialTopicEntityMention": "kourtney kardashian",
        "TopicEntityName": "Kourtney Kardashian",
        "TopicEntityMid": "m.043ttm7",
        "InferentialChain": [
          "base.popstra.celebrity.dated",
          "base.popstra.dated.participant"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crfmmg",
            "EntityName": "Scott Disick"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.043ttm7": "Kourtney Kardashian"
    },
    "qid_topic_entity": {
      "Q575689": "Kourtney Kardashian"
    },
    "index": 496
  },
  {
    "QuestionId": "WebQTest-1836",
    "RawQuestion": "where laura ingalls wilder lived?",
    "ProcessedQuestion": "where laura ingalls wilder lived",
    "Parses": [
      {
        "ParseId": "WebQTest-1836.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bt87)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bt87 ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n",
        "PotentialTopicEntityMention": "laura ingalls wilder",
        "TopicEntityName": "Laura Ingalls Wilder",
        "TopicEntityMid": "m.01bt87",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_r0n",
            "EntityName": "De Smet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01mmj7",
            "EntityName": "Pepin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0488g",
            "EntityName": "Kansas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dz6k_",
            "EntityName": "Burr Oak"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0wg6f",
            "EntityName": "Walnut Grove"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0x14p",
            "EntityName": "Mansfield"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01bt87": "Laura Ingalls Wilder"
    },
    "qid_topic_entity": {
      "Q237514": "Laura Ingalls Wilder"
    },
    "index": 497
  },
  {
    "QuestionId": "WebQTest-834",
    "RawQuestion": "where did the battle of waterloo occur?",
    "ProcessedQuestion": "where did the battle of waterloo occur",
    "Parses": [
      {
        "ParseId": "WebQTest-834.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01dcm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01dcm ns:time.event.locations ?x .\n}\n",
        "PotentialTopicEntityMention": "waterloo",
        "TopicEntityName": "Battle of Waterloo",
        "TopicEntityMid": "m.01dcm",
        "InferentialChain": [
          "time.event.locations"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.017qwy",
            "EntityName": "Waterloo"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01dcm": "Battle of Waterloo"
    },
    "qid_topic_entity": {
      "Q48314": "Battle of Waterloo"
    },
    "index": 498
  },
  {
    "QuestionId": "WebQTest-1741",
    "RawQuestion": "where is the headquarters of bank of america?",
    "ProcessedQuestion": "where is the headquarters of bank of america",
    "Parses": [
      {
        "ParseId": "WebQTest-1741.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01yx7f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01yx7f ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "bank of america",
        "TopicEntityName": "Bank of America Corporation",
        "TopicEntityMid": "m.01yx7f",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fsb8",
            "EntityName": "Charlotte"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01yx7f": "Bank of America Corporation"
    },
    "qid_topic_entity": {
      "Q487907": "Bank of America Corporation"
    },
    "index": 499
  }
]