[
  {
    "QuestionId": "WebQTest-1198",
    "RawQuestion": "who influenced samuel taylor coleridge?",
    "ProcessedQuestion": "who influenced samuel taylor coleridge",
    "Parses": [
      {
        "ParseId": "WebQTest-1198.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.078w2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.078w2 ns:influence.influence_node.influenced_by ?x .\n}\n",
        "PotentialTopicEntityMention": "samuel taylor coleridge",
        "TopicEntityName": "Samuel Taylor Coleridge",
        "TopicEntityMid": "m.078w2",
        "InferentialChain": [
          "influence.influence_node.influenced_by"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015_hb",
            "EntityName": "Giambattista Vico"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015n8",
            "EntityName": "Baruch Spinoza"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.017m4j",
            "EntityName": "Thomas Browne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0182w0",
            "EntityName": "Friedrich Wilhelm Joseph Schelling"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01gnng",
            "EntityName": "Emanuel Swedenborg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03sbs",
            "EntityName": "Immanuel Kant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0448r",
            "EntityName": "John Milton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.081k8",
            "EntityName": "William Shakespeare"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09482",
            "EntityName": "Robert Burns"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nld",
            "EntityName": "Algernon Charles Swinburne"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.078w2": "Samuel Taylor Coleridge"
    },
    "qid_topic_entity": {
      "Q82409": "Samuel Taylor Coleridge"
    },
    "index": 0
  },
  {
    "QuestionId": "WebQTest-1092",
    "RawQuestion": "who did viggo mortensen play in lord of the rings?",
    "ProcessedQuestion": "who did viggo mortensen play in lord of the rings",
    "Parses": [
      {
        "ParseId": "WebQTest-1092.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ps2h8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ps2h8 ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.017gl1 .\n}\n",
        "PotentialTopicEntityMention": "viggo mortensen",
        "TopicEntityName": "Viggo Mortensen",
        "TopicEntityMid": "m.01ps2h8",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.017gl1",
            "EntityName": "The Lord of the Rings: The Fellowship of the Ring",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gwlg",
            "EntityName": "Aragorn"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1092.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ps2h8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ps2h8 ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.017jd9 .\n}\n",
        "PotentialTopicEntityMention": "viggo mortensen",
        "TopicEntityName": "Viggo Mortensen",
        "TopicEntityMid": "m.01ps2h8",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.017jd9",
            "EntityName": "The Lord of the Rings: The Return of the King",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gwlg",
            "EntityName": "Aragorn"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1092.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ps2h8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ps2h8 ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.017gm7 .\n}\n",
        "PotentialTopicEntityMention": "viggo mortensen",
        "TopicEntityName": "Viggo Mortensen",
        "TopicEntityMid": "m.01ps2h8",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.017gm7",
            "EntityName": "The Lord of the Rings: The Two Towers",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gwlg",
            "EntityName": "Aragorn"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1092.P3",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017gl1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017gl1 ns:film.film.starring ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.actor ns:m.01ps2h8 .\n}\n",
        "PotentialTopicEntityMention": "lord of the rings",
        "TopicEntityName": "The Lord of the Rings: The Fellowship of the Ring",
        "TopicEntityMid": "m.017gl1",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01ps2h8",
            "EntityName": "Viggo Mortensen",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.actor",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gwlg",
            "EntityName": "Aragorn"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1092.P4",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017jd9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017jd9 ns:film.film.starring ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.actor ns:m.01ps2h8 .\n}\n",
        "PotentialTopicEntityMention": "lord of the rings",
        "TopicEntityName": "The Lord of the Rings: The Return of the King",
        "TopicEntityMid": "m.017jd9",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01ps2h8",
            "EntityName": "Viggo Mortensen",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.actor",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gwlg",
            "EntityName": "Aragorn"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01ps2h8": "Viggo Mortensen",
      "m.017gl1": "The Lord of the Rings: The Fellowship of the Ring",
      "m.017jd9": "The Lord of the Rings: The Return of the King"
    },
    "qid_topic_entity": {
      "Q171363": "Viggo Mortensen",
      "Q127367": "The Lord of the Rings: The Fellowship of the Ring",
      "Q131074": "The Lord of the Rings: The Return of the King"
    },
    "index": 1
  },
  {
    "QuestionId": "WebQTest-713",
    "RawQuestion": "what county is st. louis park in?",
    "ProcessedQuestion": "what county is st. louis park in",
    "Parses": [
      {
        "ParseId": "WebQTest-713.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0xdhj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0xdhj ns:location.hud_county_place.county ?x .\n}\n",
        "PotentialTopicEntityMention": "st . louis park",
        "TopicEntityName": "St. Louis Park",
        "TopicEntityMid": "m.0xdhj",
        "InferentialChain": [
          "location.hud_county_place.county"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nhmw",
            "EntityName": "Hennepin County"
          }
        ]
      },
      {
        "ParseId": "WebQTest-713.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0xdhj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0xdhj ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
        "PotentialTopicEntityMention": "st . louis park",
        "TopicEntityName": "St. Louis Park",
        "TopicEntityMid": "m.0xdhj",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpym_",
            "EntityName": "US County",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nhmw",
            "EntityName": "Hennepin County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0xdhj": "St. Louis Park"
    },
    "qid_topic_entity": {
      "Q988741": "St. Louis Park"
    },
    "index": 2
  },
  {
    "QuestionId": "WebQTest-1637",
    "RawQuestion": "what are the catholic holy days?",
    "ProcessedQuestion": "what are the catholic holy days",
    "Parses": [
      {
        "ParseId": "WebQTest-1637.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c8wxp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c8wxp ns:religion.religion.holidays ?x .\n}\n",
        "PotentialTopicEntityMention": "catholic",
        "TopicEntityName": "Catholicism",
        "TopicEntityMid": "m.0c8wxp",
        "InferentialChain": [
          "religion.religion.holidays"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kv0v5",
            "EntityName": "Feast of St. Margaret of the \u00c1rp\u00e1d House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kvb49",
            "EntityName": "Feast of Our Lady of Hungary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kvbh6",
            "EntityName": "Feast of Our Lady of the Rosary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_l_d7h",
            "EntityName": "Our Lady of Aparecida's day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_lpd56",
            "EntityName": "Father Damien Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_lsyyw",
            "EntityName": "Our Lady of Guadalupe Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_m1438",
            "EntityName": "St. Spiridon Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_m14vv",
            "EntityName": "Saint Nicholas' Eve"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_mrbts",
            "EntityName": "Feast of Assumption"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011ncb1h",
            "EntityName": "Euthymius the Great's Feast Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011ncyv_",
            "EntityName": "The Feast of Our Lady of Mount Carmel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011nk6vg",
            "EntityName": "St. Anthony's Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011nkz4p",
            "EntityName": "Feast of Our Lady of Sorrows"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0148r6",
            "EntityName": "St Joseph's Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016s_l",
            "EntityName": "Saint Patrick's Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016v69",
            "EntityName": "Maundy Thursday"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cqmf",
            "EntityName": "St. Stephen's Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01v147",
            "EntityName": "Corpus Christi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03nlrrk",
            "EntityName": "Nativity of Mary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0497bm",
            "EntityName": "Olsok"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04mrs1",
            "EntityName": "Feast of the Immaculate Conception"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04qnzg",
            "EntityName": "Feast of the Cross"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04sy0c",
            "EntityName": "Feast of Christ the King"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.058_lf",
            "EntityName": "Name day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0581_5",
            "EntityName": "Fat Thursday"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b22_z",
            "EntityName": "World Day of Peace"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.060_r",
            "EntityName": "Palm Sunday"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0604_c",
            "EntityName": "Saints Cyril and Methodius Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cpnkn",
            "EntityName": "Solemnity of Mary, Mother of God"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dsq86",
            "EntityName": "Feast of Saints Peter and Paul"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f6l2j",
            "EntityName": "St Crispin's Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fdm1h",
            "EntityName": "St Casimir's Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k0c",
            "EntityName": "All Saints' Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k5y347",
            "EntityName": "Feast of St Francis of Assisi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n_fbc8",
            "EntityName": "St Nicholas Day"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0c8wxp": "Catholicism"
    },
    "qid_topic_entity": {
      "Q1841": "Catholicism"
    },
    "index": 3
  },
  {
    "QuestionId": "WebQTest-1241",
    "RawQuestion": "where does the columbia river start?",
    "ProcessedQuestion": "where does the columbia river start",
    "Parses": [
      {
        "ParseId": "WebQTest-1241.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01n86)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01n86 ns:geography.river.origin ?x .\n}\n",
        "PotentialTopicEntityMention": "columbia river",
        "TopicEntityName": "Columbia River",
        "TopicEntityMid": "m.01n86",
        "InferentialChain": [
          "geography.river.origin"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r8kvz",
            "EntityName": "Columbia Lake"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01n86": "Columbia River"
    },
    "qid_topic_entity": {
      "Q2251": "Columbia River"
    },
    "index": 4
  },
  {
    "QuestionId": "WebQTest-377",
    "RawQuestion": "what school did michael jordan attend?",
    "ProcessedQuestion": "what school did michael jordan attend",
    "Parses": [
      {
        "ParseId": "WebQTest-377.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.054c1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.054c1 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "michael jordan",
        "TopicEntityName": "Michael Jordan",
        "TopicEntityMid": "m.054c1",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07qymj",
            "EntityName": "Emsley A. Laney High School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bx8pn",
            "EntityName": "University of North Carolina at Chapel Hill"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.054c1": "Michael Jordan"
    },
    "qid_topic_entity": {
      "Q41421": "Michael Jordan"
    },
    "index": 5
  },
  {
    "QuestionId": "WebQTest-1488",
    "RawQuestion": "what type of art does marc chagall do?",
    "ProcessedQuestion": "what type of art does marc chagall do",
    "Parses": [
      {
        "ParseId": "WebQTest-1488.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g_j0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g_j0 ns:visual_art.visual_artist.associated_periods_or_movements ?x .\n}\n",
        "PotentialTopicEntityMention": "marc chagall",
        "TopicEntityName": "Marc Chagall",
        "TopicEntityMid": "m.0g_j0",
        "InferentialChain": [
          "visual_art.visual_artist.associated_periods_or_movements"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015r61",
            "EntityName": "Modern art"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lx1",
            "EntityName": "Fauvism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.073_6",
            "EntityName": "Surrealism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09ff3",
            "EntityName": "Cubism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pybl",
            "EntityName": "Expressionism"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0g_j0": "Marc Chagall"
    },
    "qid_topic_entity": {
      "Q93284": "Marc Chagall"
    },
    "index": 6
  },
  {
    "QuestionId": "WebQTest-383",
    "RawQuestion": "what language do chinese people write in?",
    "ProcessedQuestion": "what language do chinese people write in",
    "Parses": [
      {
        "ParseId": "WebQTest-383.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01r2l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01r2l ns:language.human_language.writing_system ?x .\n}\n",
        "PotentialTopicEntityMention": "chinese",
        "TopicEntityName": "Chinese language",
        "TopicEntityMid": "m.01r2l",
        "InferentialChain": [
          "language.human_language.writing_system"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014lbg",
            "EntityName": "N\u00fcshu script"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01mw7r",
            "EntityName": "Simplified Chinese character"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nf5z",
            "EntityName": "Traditional Chinese characters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050fyz",
            "EntityName": "'Phags-pa script"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0mmzb",
            "EntityName": "Chinese characters"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01r2l": "Chinese language"
    },
    "qid_topic_entity": {
      "Q7850": "Chinese language"
    },
    "index": 7
  },
  {
    "QuestionId": "WebQTest-1619",
    "RawQuestion": "where do the appalachian mountains run?",
    "ProcessedQuestion": "where do the appalachian mountains run",
    "Parses": [
      {
        "ParseId": "WebQTest-1619.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "lots of other predicates are equally fine: contains, mountains, partially contained by, etc."
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lm0n)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lm0n ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "appalachian mountains",
        "TopicEntityName": "Appalachian Mountains",
        "TopicEntityMid": "m.0lm0n",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059g4",
            "EntityName": "North America"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0lm0n": "Appalachian Mountains"
    },
    "qid_topic_entity": {
      "Q93332": "Appalachian Mountains"
    },
    "index": 8
  },
  {
    "QuestionId": "WebQTest-1508",
    "RawQuestion": "when did bill clinton go to college?",
    "ProcessedQuestion": "when did bill clinton go to college",
    "Parses": [
      {
        "ParseId": "WebQTest-1508.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0157m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0157m ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "bill clinton",
        "TopicEntityName": "Bill Clinton",
        "TopicEntityMid": "m.0157m",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bq1j",
            "EntityName": "Yale Law School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ckl3",
            "EntityName": "Edmund A. Walsh School of Foreign Service"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07tgn",
            "EntityName": "University of Oxford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08815",
            "EntityName": "University Yale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pspl",
            "EntityName": "Georgetown University"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ymf1",
            "EntityName": "University College, Oxford"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0157m": "Bill Clinton"
    },
    "qid_topic_entity": {
      "Q1124": "Bill Clinton"
    },
    "index": 9
  },
  {
    "QuestionId": "WebQTest-266",
    "RawQuestion": "what is there to do for fun in kansas city?",
    "ProcessedQuestion": "what is there to do for fun in kansas city",
    "Parses": [
      {
        "ParseId": "WebQTest-266.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04f_d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04f_d ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "kansas city",
        "TopicEntityName": "Kansas City",
        "TopicEntityMid": "m.04f_d",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02665lb",
            "EntityName": "Kansas City Zoo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026g4b1",
            "EntityName": "Kauffman Center for the Performing Arts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rccg",
            "EntityName": "18th and Vine-Downtown East"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0321ly",
            "EntityName": "Kemper Museum of Contemporary Art"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03n2sf",
            "EntityName": "Liberty Memorial"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03p0kv",
            "EntityName": "Harry S. Truman Presidential Library and Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wglg",
            "EntityName": "Crown Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065tqj",
            "EntityName": "Worlds of Fun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06rchd",
            "EntityName": "Sprint Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0724nn",
            "EntityName": "Negro Leagues Baseball Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.075m4m",
            "EntityName": "Boulevard Brewing Company"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08c_14",
            "EntityName": "Oceans of Fun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cnyls8",
            "EntityName": "Hotel Phillips"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gfgk80",
            "EntityName": "Deer Creek Golf Course"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jyw372",
            "EntityName": "Ewing and Muriel Kauffman Memorial Garden"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04f_d": "Kansas City"
    },
    "qid_topic_entity": {
      "Q41819": "Kansas City"
    },
    "index": 10
  },
  {
    "QuestionId": "WebQTest-191",
    "RawQuestion": "where did drew brees go to college wikianswers?",
    "ProcessedQuestion": "where did drew brees go to college wikianswers",
    "Parses": [
      {
        "ParseId": "WebQTest-191.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.030bdd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.030bdd ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "drew brees",
        "TopicEntityName": "Drew Brees",
        "TopicEntityMid": "m.030bdd",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bb47",
            "EntityName": "Stanford Graduate School of Business"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05x_5",
            "EntityName": "Purdue University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.030bdd": "Drew Brees"
    },
    "qid_topic_entity": {
      "Q38952": "Drew Brees"
    },
    "index": 11
  },
  {
    "QuestionId": "WebQTest-554",
    "RawQuestion": "what money do they use in spain?",
    "ProcessedQuestion": "what money do they use in spain",
    "Parses": [
      {
        "ParseId": "WebQTest-554.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mkj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mkj ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "spain",
        "TopicEntityName": "Spain",
        "TopicEntityMid": "m.06mkj",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02l6h",
            "EntityName": "Euro"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06mkj": "Spain"
    },
    "qid_topic_entity": {
      "Q29": "Spain"
    },
    "index": 12
  },
  {
    "QuestionId": "WebQTest-637",
    "RawQuestion": "what type of government did soviet union have?",
    "ProcessedQuestion": "what type of government did soviet union have",
    "Parses": [
      {
        "ParseId": "WebQTest-637.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05vz3zq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05vz3zq ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "soviet union",
        "TopicEntityName": "Soviet Union",
        "TopicEntityMid": "m.05vz3zq",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fkst",
            "EntityName": "Communist state"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025tbxf",
            "EntityName": "Socialist state"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06zgbt",
            "EntityName": "Soviet democracy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0glnsx",
            "EntityName": "Parliamentary republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05vz3zq": "Soviet Union"
    },
    "qid_topic_entity": {
      "Q15180": "Soviet Union"
    },
    "index": 13
  },
  {
    "QuestionId": "WebQTest-875",
    "RawQuestion": "where did hugo chavez go to school?",
    "ProcessedQuestion": "where did hugo chavez go to school",
    "Parses": [
      {
        "ParseId": "WebQTest-875.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d1b_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d1b_ ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "hugo chavez",
        "TopicEntityName": "Hugo Ch\u00e1vez",
        "TopicEntityMid": "m.0d1b_",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0467r_n",
            "EntityName": "Julian Pino School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0467s09",
            "EntityName": "Daniel Florencio O'Leary School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04fc47",
            "EntityName": "Sim\u00f3n Bol\u00edvar University"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08fk_z",
            "EntityName": "Bolivarian Military University of Venezuela"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d1b_": "Hugo Ch\u00e1vez"
    },
    "qid_topic_entity": {
      "Q8440": "Hugo Ch\u00e1vez"
    },
    "index": 14
  },
  {
    "QuestionId": "WebQTest-438",
    "RawQuestion": "what university did romney graduated from?",
    "ProcessedQuestion": "what university did romney graduated from",
    "Parses": [
      {
        "ParseId": "WebQTest-438.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "?? undergraduate or higher degree?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0271_s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0271_s ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?y ns:education.education.degree ns:m.014mlp .\n}\n",
        "PotentialTopicEntityMention": "romney",
        "TopicEntityName": "Mitt Romney",
        "TopicEntityMid": "m.0271_s",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.014mlp",
            "EntityName": "Bachelor of Arts",
            "SourceNodeIndex": 0,
            "NodePredicate": "education.education.degree",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0l2tk",
            "EntityName": "Brigham Young University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0271_s": "Mitt Romney"
    },
    "qid_topic_entity": {
      "Q4496": "Mitt Romney"
    },
    "index": 15
  },
  {
    "QuestionId": "WebQTest-234",
    "RawQuestion": "what countries does the panama canal go through?",
    "ProcessedQuestion": "what countries does the panama canal go through",
    "Parses": [
      {
        "ParseId": "WebQTest-234.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.066rl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.066rl ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n}\n",
        "PotentialTopicEntityMention": "panama canal",
        "TopicEntityName": "Panama Canal",
        "TopicEntityMid": "m.066rl",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01mp",
            "EntityName": "Country",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qx1",
            "EntityName": "Panama"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.066rl": "Panama Canal"
    },
    "qid_topic_entity": {
      "Q7350": "Panama Canal"
    },
    "index": 16
  },
  {
    "QuestionId": "WebQTest-461",
    "RawQuestion": "where did clay matthews go to school?",
    "ProcessedQuestion": "where did clay matthews go to school",
    "Parses": [
      {
        "ParseId": "WebQTest-461.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04zy7pw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04zy7pw ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "clay matthews",
        "TopicEntityName": "Clay Matthews III",
        "TopicEntityMid": "m.04zy7pw",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065y4w7",
            "EntityName": "University of Southern California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06w97y",
            "EntityName": "Agoura High School"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04zy7pw": "Clay Matthews III"
    },
    "qid_topic_entity": {
      "Q390698": "Clay Matthews III"
    },
    "index": 17
  },
  {
    "QuestionId": "WebQTest-1441",
    "RawQuestion": "where all did picasso live?",
    "ProcessedQuestion": "where all did picasso live",
    "Parses": [
      {
        "ParseId": "WebQTest-1441.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.060_7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.060_7 ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n",
        "PotentialTopicEntityMention": "picasso",
        "TopicEntityName": "Pablo Picasso",
        "TopicEntityMid": "m.060_7",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01978d",
            "EntityName": "M\u00e1laga"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.056_y",
            "EntityName": "Madrid"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f8l9c",
            "EntityName": "France"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.060_7": "Pablo Picasso"
    },
    "qid_topic_entity": {
      "Q5593": "Pablo Picasso"
    },
    "index": 18
  },
  {
    "QuestionId": "WebQTest-1622",
    "RawQuestion": "what ocean is around hawaii?",
    "ProcessedQuestion": "what ocean is around hawaii",
    "Parses": [
      {
        "ParseId": "WebQTest-1622.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jbt3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jbt3 ns:geography.island.body_of_water ?x .\n}\n",
        "PotentialTopicEntityMention": "hawaii",
        "TopicEntityName": "Hawaii",
        "TopicEntityMid": "m.0jbt3",
        "InferentialChain": [
          "geography.island.body_of_water"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05rgl",
            "EntityName": "Pacific Ocean"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1622.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gh4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gh4 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.01y2jks .\n}\n",
        "PotentialTopicEntityMention": "hawaii",
        "TopicEntityName": "Hawaii",
        "TopicEntityMid": "m.03gh4",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2jks",
            "EntityName": "Body Of Water",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05rgl",
            "EntityName": "Pacific Ocean"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jbt3": "Hawaii",
      "m.03gh4": "Hawaii"
    },
    "qid_topic_entity": {
      "Q68740": "Hawaii",
      "Q782": "Hawaii"
    },
    "index": 19
  },
  {
    "QuestionId": "WebQTest-1757",
    "RawQuestion": "what did michael crabtree do?",
    "ProcessedQuestion": "what did michael crabtree do",
    "Parses": [
      {
        "ParseId": "WebQTest-1757.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ccsym)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ccsym ns:american_football.football_player.position_s ?x .\n}\n",
        "PotentialTopicEntityMention": "michael crabtree",
        "TopicEntityName": "Michael Crabtree",
        "TopicEntityMid": "m.03ccsym",
        "InferentialChain": [
          "american_football.football_player.position_s"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02g_6x",
            "EntityName": "Wide receiver"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1757.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ccsym)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ccsym ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "michael crabtree",
        "TopicEntityName": "Michael Crabtree",
        "TopicEntityMid": "m.03ccsym",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01445t",
            "EntityName": "Athlete"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h665k",
            "EntityName": "American football player"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1757.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ccsym)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ccsym ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.position ?x .\n}\n",
        "PotentialTopicEntityMention": "michael crabtree",
        "TopicEntityName": "Michael Crabtree",
        "TopicEntityMid": "m.03ccsym",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.position"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02g_6x",
            "EntityName": "Wide receiver"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03ccsym": "Michael Crabtree"
    },
    "qid_topic_entity": {
      "Q2351787": "Michael Crabtree"
    },
    "index": 20
  },
  {
    "QuestionId": "WebQTest-1328",
    "RawQuestion": "what did hayes do?",
    "ProcessedQuestion": "what did hayes do",
    "Parses": [
      {
        "ParseId": "WebQTest-1328.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06g42)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06g42 ns:common.topic.notable_for ?y .\n?y ns:common.notable_for.object ?x .\n}\n",
        "PotentialTopicEntityMention": "hayes",
        "TopicEntityName": "Rutherford B. Hayes",
        "TopicEntityMid": "m.06g42",
        "InferentialChain": [
          "common.topic.notable_for",
          "common.notable_for.object"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01xljv7",
            "EntityName": "US President"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06g42": "Rutherford B. Hayes"
    },
    "qid_topic_entity": {
      "Q35686": "Rutherford B. Hayes"
    },
    "index": 21
  },
  {
    "QuestionId": "WebQTest-296",
    "RawQuestion": "what kind of government does libya have today?",
    "ProcessedQuestion": "what kind of government does libya have today",
    "Parses": [
      {
        "ParseId": "WebQTest-296.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04gqr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04gqr ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "libya",
        "TopicEntityName": "Libya",
        "TopicEntityMid": "m.04gqr",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02tz3y",
            "EntityName": "Provisional government"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0glnsx",
            "EntityName": "Parliamentary republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04gqr": "Libya"
    },
    "qid_topic_entity": {
      "Q1016": "Libya"
    },
    "index": 22
  },
  {
    "QuestionId": "WebQTest-527",
    "RawQuestion": "what country borders slovakia?",
    "ProcessedQuestion": "what country borders slovakia",
    "Parses": [
      {
        "ParseId": "WebQTest-527.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06npd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06npd ns:location.location.adjoin_s ?y .\n?y ns:location.adjoining_relationship.adjoins ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n}\n",
        "PotentialTopicEntityMention": "slovakia",
        "TopicEntityName": "Slovakia",
        "TopicEntityMid": "m.06npd",
        "InferentialChain": [
          "location.location.adjoin_s",
          "location.adjoining_relationship.adjoins"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01mp",
            "EntityName": "Country",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01mjq",
            "EntityName": "Czech Republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gj2",
            "EntityName": "Hungary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qhw",
            "EntityName": "Poland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07t21",
            "EntityName": "Ukraine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h7x",
            "EntityName": "Austria"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06npd": "Slovakia"
    },
    "qid_topic_entity": {
      "Q214": "Slovakia"
    },
    "index": 23
  },
  {
    "QuestionId": "WebQTest-2001",
    "RawQuestion": "who won the 2000 fa cup final?",
    "ProcessedQuestion": "who won the 2000 fa cup final",
    "Parses": [
      {
        "ParseId": "WebQTest-2001.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_p0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_p0 ns:sports.sports_award_type.winners ?y .\n?y ns:sports.sports_award.award_winner ?x .\n?y ns:sports.sports_award.season ns:m.03wcq72 .\n}\n",
        "PotentialTopicEntityMention": "fa cup",
        "TopicEntityName": "FA Cup",
        "TopicEntityMid": "m.02_p0",
        "InferentialChain": [
          "sports.sports_award_type.winners",
          "sports.sports_award.award_winner"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.03wcq72",
            "EntityName": "1999\u20132000 FA Cup",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_award.season",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.023fb",
            "EntityName": "Chelsea F.C."
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02_p0": "FA Cup"
    },
    "qid_topic_entity": {
      "Q11151": "FA Cup"
    },
    "index": 24
  },
  {
    "QuestionId": "WebQTest-1997",
    "RawQuestion": "who does owen schmitt play for?",
    "ProcessedQuestion": "who does owen schmitt play for",
    "Parses": [
      {
        "ParseId": "WebQTest-1997.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027rvyc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027rvyc ns:american_football.football_player.games ?y .\n?y ns:american_football.player_game_statistics.team ?x .\n}\n",
        "PotentialTopicEntityMention": "owen schmitt",
        "TopicEntityName": "Owen Schmitt",
        "TopicEntityMid": "m.027rvyc",
        "InferentialChain": [
          "american_football.football_player.games",
          "american_football.player_game_statistics.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.070xg",
            "EntityName": "Seattle Seahawks"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1997.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027rvyc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027rvyc ns:american_football.football_player.receiving ?y .\n?y ns:american_football.player_receiving_statistics.team ?x .\n}\n",
        "PotentialTopicEntityMention": "owen schmitt",
        "TopicEntityName": "Owen Schmitt",
        "TopicEntityMid": "m.027rvyc",
        "InferentialChain": [
          "american_football.football_player.receiving",
          "american_football.player_receiving_statistics.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.070xg",
            "EntityName": "Seattle Seahawks"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1997.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027rvyc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027rvyc ns:american_football.football_player.rushing ?y .\n?y ns:american_football.player_rushing_statistics.team ?x .\n}\n",
        "PotentialTopicEntityMention": "owen schmitt",
        "TopicEntityName": "Owen Schmitt",
        "TopicEntityMid": "m.027rvyc",
        "InferentialChain": [
          "american_football.football_player.rushing",
          "american_football.player_rushing_statistics.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.070xg",
            "EntityName": "Seattle Seahawks"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.027rvyc": "Owen Schmitt"
    },
    "qid_topic_entity": {
      "Q3887743": "Owen Schmitt"
    },
    "index": 25
  },
  {
    "QuestionId": "WebQTest-1848",
    "RawQuestion": "what instrument does louis armstrong?",
    "ProcessedQuestion": "what instrument does louis armstrong",
    "Parses": [
      {
        "ParseId": "WebQTest-1848.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04n32)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04n32 ns:music.group_member.instruments_played ?x .\n}\n",
        "PotentialTopicEntityMention": "louis armstrong",
        "TopicEntityName": "Louis Armstrong",
        "TopicEntityMid": "m.04n32",
        "InferentialChain": [
          "music.group_member.instruments_played"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020w2",
            "EntityName": "Cornet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07gql",
            "EntityName": "Trumpet"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04n32": "Louis Armstrong"
    },
    "qid_topic_entity": {
      "Q1779": "Louis Armstrong"
    },
    "index": 26
  },
  {
    "QuestionId": "WebQTest-482",
    "RawQuestion": "who plays blaine in batman?",
    "ProcessedQuestion": "who plays blaine in batman",
    "Parses": [
      {
        "ParseId": "WebQTest-482.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: F Union. Original comment: F not clear what blaine refers too or what batman"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n\t{ \n\tns:m.0321b4 ns:film.film_character.portrayed_in_films ?y .\n\t?y ns:film.performance.actor ?x .\n\t}\n\tUNION\n\t{\n\tns:m.0321b4 ns:tv.tv_character.appeared_in_tv_program ?y .\n\t?y ns:tv.regular_tv_appearance.actor ?x .\n\t}\n}",
        "PotentialTopicEntityMention": "batman",
        "TopicEntityName": "Batman",
        "TopicEntityMid": "m.01hp5",
        "InferentialChain": null,
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0115x7ps",
            "EntityName": "Matthew Wagner"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01xllf",
            "EntityName": "Danny Trejo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hblj",
            "EntityName": "Carlos Alazraqui"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05xf75",
            "EntityName": "Tom Hardy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01hp5": "Batman"
    },
    "qid_topic_entity": {
      "Q116852": "Batman"
    },
    "index": 27
  },
  {
    "QuestionId": "WebQTest-1780",
    "RawQuestion": "who does michael oher play for in 2010?",
    "ProcessedQuestion": "who does michael oher play for in 2010",
    "Parses": [
      {
        "ParseId": "WebQTest-1780.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h7q7b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h7q7b ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2010-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2010-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "michael oher",
        "TopicEntityName": "Michael Oher",
        "TopicEntityMid": "m.0h7q7b",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2010-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2010-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2010-01-01",
          "End": "2010-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "2010"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01ct6",
            "EntityName": "Baltimore Ravens"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0h7q7b": "Michael Oher"
    },
    "qid_topic_entity": {
      "Q977601": "Michael Oher"
    },
    "index": 28
  },
  {
    "QuestionId": "WebQTest-504",
    "RawQuestion": "who was philip in acts chapter 8?",
    "ProcessedQuestion": "who was philip in acts chapter 8",
    "Parses": [
      {
        "ParseId": "WebQTest-504.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? "
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012tjy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012tjy ns:fictional_universe.person_in_fiction.representations_in_fiction ?x .\n}\n",
        "PotentialTopicEntityMention": "philip",
        "TopicEntityName": "Philip the Apostle",
        "TopicEntityMid": "m.012tjy",
        "InferentialChain": [
          "fictional_universe.person_in_fiction.representations_in_fiction"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.075pg8m",
            "EntityName": "Apostle Philip"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.012tjy": "Philip the Apostle"
    },
    "qid_topic_entity": {
      "Q43675": "Philip the Apostle"
    },
    "index": 29
  },
  {
    "QuestionId": "WebQTest-410",
    "RawQuestion": "what are the major cities in ukraine?",
    "ProcessedQuestion": "what are the major cities in ukraine",
    "Parses": [
      {
        "ParseId": "WebQTest-410.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07t21)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07t21 ns:location.country.capital ?x .\n}\n",
        "PotentialTopicEntityMention": "ukraine",
        "TopicEntityName": "Ukraine",
        "TopicEntityMid": "m.07t21",
        "InferentialChain": [
          "location.country.capital"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02sn34",
            "EntityName": "Kiev"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07t21": "Ukraine"
    },
    "qid_topic_entity": {
      "Q212": "Ukraine"
    },
    "index": 30
  },
  {
    "QuestionId": "WebQTest-2005",
    "RawQuestion": "who plays bob kelso in scrubs?",
    "ProcessedQuestion": "who plays bob kelso in scrubs",
    "Parses": [
      {
        "ParseId": "WebQTest-2005.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ck2ty)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ck2ty ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.series ns:m.01fs__ .\n}\n",
        "PotentialTopicEntityMention": "bob kelso",
        "TopicEntityName": "Bob Kelso",
        "TopicEntityMid": "m.0ck2ty",
        "InferentialChain": [
          "tv.tv_character.appeared_in_tv_program",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01fs__",
            "EntityName": "Scrubs",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.series",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07w8hh",
            "EntityName": "Ken Jenkins"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ck2ty": "Bob Kelso"
    },
    "qid_topic_entity": {
      "Q2532197": "Bob Kelso"
    },
    "index": 31
  },
  {
    "QuestionId": "WebQTest-1894",
    "RawQuestion": "what baseball team was jackie robinson on?",
    "ProcessedQuestion": "what baseball team was jackie robinson on",
    "Parses": [
      {
        "ParseId": "WebQTest-1894.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0443c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0443c ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n?x ns:sports.sports_team.sport ns:m.018jz .\n}\n",
        "PotentialTopicEntityMention": "jackie robinson",
        "TopicEntityName": "Jackie Robinson",
        "TopicEntityMid": "m.0443c",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.018jz",
            "EntityName": "Baseball",
            "SourceNodeIndex": 1,
            "NodePredicate": "sports.sports_team.sport",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_cjl",
            "EntityName": "Kansas City Monarchs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_wkh",
            "EntityName": "Montreal Royals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05fc8c9",
            "EntityName": "Brooklyn Dodgers"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0443c": "Jackie Robinson"
    },
    "qid_topic_entity": {
      "Q221048": "Jackie Robinson"
    },
    "index": 32
  },
  {
    "QuestionId": "WebQTest-1303",
    "RawQuestion": "what other movies is josh hutcherson in?",
    "ProcessedQuestion": "what other movies is josh hutcherson in",
    "Parses": [
      {
        "ParseId": "WebQTest-1303.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08wjf4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08wjf4 ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "josh hutcherson",
        "TopicEntityName": "Josh Hutchersonm",
        "TopicEntityMid": "m.08wjf4",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.11b7k0v3hq",
            "EntityName": "In Dubious Battle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0135_65p",
            "EntityName": "The Long Home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026gt8b",
            "EntityName": "Bridge to Terabithia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0270k40",
            "EntityName": "Cirque du Freak: The Vampire's Assistant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q02ql",
            "EntityName": "Firehouse Dog"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qd6h2",
            "EntityName": "Winged Creatures"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047qh9b",
            "EntityName": "Party Wagon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f8ttb",
            "EntityName": "Journey to the Center of the Earth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j0_gm",
            "EntityName": "One Last Ride"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j1g18",
            "EntityName": "Wilder Days"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j1phy",
            "EntityName": "Miracle Dogs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05spvb",
            "EntityName": "Kicking & Screaming"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07sbq6c",
            "EntityName": "Red Dawn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07y296",
            "EntityName": "Motocross Kids"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09qs_s",
            "EntityName": "Zathura"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09tqkv2",
            "EntityName": "The Kids Are All Right"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09v9dsq",
            "EntityName": "The Forger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09w6br",
            "EntityName": "The Polar Express"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bcs_f",
            "EntityName": "RV"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crnh6",
            "EntityName": "Little Manhattan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ds2_k2",
            "EntityName": "Journey 2: The Mysterious Island"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dzz6g",
            "EntityName": "American Splendor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g4tknw",
            "EntityName": "Detention"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gkp_k",
            "EntityName": "House Blend"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gkz15s",
            "EntityName": "The Hunger Games"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gy8kqb",
            "EntityName": "7 Days in Havana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gy8kv2",
            "EntityName": "The Third Rule"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hhgh69",
            "EntityName": "Epic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n40qmp",
            "EntityName": "The Hunger Games: Catching Fire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ngvsvk",
            "EntityName": "The Hunger Games: Mockingjay, Part 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ngvtb_",
            "EntityName": "The Hunger Games: Mockingjay, Part 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0x1xc_w",
            "EntityName": "Escobar: Paradise Lost"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.08wjf4": "Josh Hutchersonm"
    },
    "qid_topic_entity": {
      "Q217004": "Josh Hutchersonm"
    },
    "index": 33
  },
  {
    "QuestionId": "WebQTest-1017",
    "RawQuestion": "who plays charlie in the santa clause movies?",
    "ProcessedQuestion": "who plays charlie in the santa clause movies",
    "Parses": [
      {
        "ParseId": "WebQTest-1017.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0129g2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0129g2 ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0dlsybb .\n}\n",
        "PotentialTopicEntityMention": "the santa clause",
        "TopicEntityName": "The Santa Clause",
        "TopicEntityMid": "m.0129g2",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0dlsybb",
            "EntityName": "Charlie Calvin",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d7whx",
            "EntityName": "Eric Lloyd"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0129g2": "The Santa Clause"
    },
    "qid_topic_entity": {
      "Q497850": "The Santa Clause"
    },
    "index": 34
  },
  {
    "QuestionId": "WebQTest-1526",
    "RawQuestion": "how many languages do they speak in switzerland?",
    "ProcessedQuestion": "how many languages do they speak in switzerland",
    "Parses": [
      {
        "ParseId": "WebQTest-1526.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mzp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mzp ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "switzerland",
        "TopicEntityName": "Switzerland",
        "TopicEntityMid": "m.06mzp",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bjrlw",
            "EntityName": "Italian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04306rv",
            "EntityName": "German Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064_8sq",
            "EntityName": "French"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ctk",
            "EntityName": "Romansh language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1526.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mzp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mzp ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "switzerland",
        "TopicEntityName": "Switzerland",
        "TopicEntityMid": "m.06mzp",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bjrlw",
            "EntityName": "Italian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04306rv",
            "EntityName": "German Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064_8sq",
            "EntityName": "French"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ctk",
            "EntityName": "Romansh language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06mzp": "Switzerland"
    },
    "qid_topic_entity": {
      "Q39": "Switzerland"
    },
    "index": 35
  },
  {
    "QuestionId": "WebQTest-634",
    "RawQuestion": "what county is san antonio in?",
    "ProcessedQuestion": "what county is san antonio in",
    "Parses": [
      {
        "ParseId": "WebQTest-634.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2w0 ns:location.hud_county_place.county ?x .\n}\n",
        "PotentialTopicEntityMention": "san antonio",
        "TopicEntityName": "San Antonio",
        "TopicEntityMid": "m.0f2w0",
        "InferentialChain": [
          "location.hud_county_place.county"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ms5v",
            "EntityName": "Comal County"
          }
        ]
      },
      {
        "ParseId": "WebQTest-634.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2w0 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
        "PotentialTopicEntityMention": "san antonio",
        "TopicEntityName": "San Antonio",
        "TopicEntityMid": "m.0f2w0",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpym_",
            "EntityName": "US County",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0mqr8",
            "EntityName": "Medina County"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ms5v",
            "EntityName": "Comal County"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0mskq",
            "EntityName": "Bexar County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f2w0": "San Antonio"
    },
    "qid_topic_entity": {
      "Q975": "San Antonio"
    },
    "index": 36
  },
  {
    "QuestionId": "WebQTest-698",
    "RawQuestion": "who is robin roberts father?",
    "ProcessedQuestion": "who is robin roberts father",
    "Parses": [
      {
        "ParseId": "WebQTest-698.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06k3_t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06k3_t ns:people.person.parents ?x .\n?x ns:people.person.gender ns:m.05zppz .\n}\n",
        "PotentialTopicEntityMention": "robin roberts",
        "TopicEntityName": "Robin Roberts",
        "TopicEntityMid": "m.06k3_t",
        "InferentialChain": [
          "people.person.parents"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.05zppz",
            "EntityName": "Male",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.person.gender",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0czc1yg",
            "EntityName": "Lawrence E. Roberts"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06k3_t": "Robin Roberts"
    },
    "qid_topic_entity": {
      "Q2041541": "Robin Roberts"
    },
    "index": 37
  },
  {
    "QuestionId": "WebQTest-1708",
    "RawQuestion": "what are dallas cowboys colors?",
    "ProcessedQuestion": "what are dallas cowboys colors",
    "Parses": [
      {
        "ParseId": "WebQTest-1708.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02896)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02896 ns:sports.sports_team.colors ?x .\n}\n",
        "PotentialTopicEntityMention": "dallas cowboys",
        "TopicEntityName": "Dallas Cowboys",
        "TopicEntityMid": "m.02896",
        "InferentialChain": [
          "sports.sports_team.colors"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01g5v",
            "EntityName": "Blue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rnmb",
            "EntityName": "Navy Blue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03vtbc",
            "EntityName": "Silver"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06kqt3",
            "EntityName": "Royal blue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.083jv",
            "EntityName": "White"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02896": "Dallas Cowboys"
    },
    "qid_topic_entity": {
      "Q204862": "Dallas Cowboys"
    },
    "index": 38
  },
  {
    "QuestionId": "WebQTest-1990",
    "RawQuestion": "who plays timon's voice in the lion king?",
    "ProcessedQuestion": "who plays timon 's voice in the lion king",
    "Parses": [
      {
        "ParseId": "WebQTest-1990.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0m63c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0m63c ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0c31r0 .\n}\n",
        "PotentialTopicEntityMention": "the lion king",
        "TopicEntityName": "The Lion King",
        "TopicEntityMid": "m.0m63c",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0c31r0",
            "EntityName": "Timon",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nxzv",
            "EntityName": "Nathan Lane"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0m63c": "The Lion King"
    },
    "qid_topic_entity": {
      "Q36479": "The Lion King"
    },
    "index": 39
  },
  {
    "QuestionId": "WebQTest-163",
    "RawQuestion": "what year did the seahawks win the superbowl?",
    "ProcessedQuestion": "what year did the seahawks win the superbowl",
    "Parses": [
      {
        "ParseId": "WebQTest-163.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.070xg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.070xg ns:sports.sports_team.championships ?x .\n?x ns:time.event.instance_of_recurring_event ns:m.06x5s .\n}\n",
        "PotentialTopicEntityMention": "seahawks",
        "TopicEntityName": "Seattle Seahawks",
        "TopicEntityMid": "m.070xg",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.06x5s",
            "EntityName": "Super Bowl",
            "SourceNodeIndex": 0,
            "NodePredicate": "time.event.instance_of_recurring_event",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09k4qg3",
            "EntityName": "Super Bowl XLVIII"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.070xg": "Seattle Seahawks"
    },
    "qid_topic_entity": {
      "Q221878": "Seattle Seahawks"
    },
    "index": 40
  },
  {
    "QuestionId": "WebQTest-1566",
    "RawQuestion": "what kind of guitar john mayer?",
    "ProcessedQuestion": "what kind of guitar john mayer",
    "Parses": [
      {
        "ParseId": "WebQTest-1566.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01s21dg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01s21dg ns:music.guitarist.guitars_played ?x .\n}\n",
        "PotentialTopicEntityMention": "john mayer",
        "TopicEntityName": "John Mayer",
        "TopicEntityMid": "m.01s21dg",
        "InferentialChain": [
          "music.guitarist.guitars_played"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02m873",
            "EntityName": "Fender Stratocaster"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01s21dg": "John Mayer"
    },
    "qid_topic_entity": {
      "Q215215": "John Mayer"
    },
    "index": 41
  },
  {
    "QuestionId": "WebQTest-1614",
    "RawQuestion": "what religion was king louis xiv?",
    "ProcessedQuestion": "what religion was king louis xiv",
    "Parses": [
      {
        "ParseId": "WebQTest-1614.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04pwg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04pwg ns:people.person.religion ?x .\n}\n",
        "PotentialTopicEntityMention": "king louis xiv",
        "TopicEntityName": "Louis XIV of France",
        "TopicEntityMid": "m.04pwg",
        "InferentialChain": [
          "people.person.religion"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c8wxp",
            "EntityName": "Catholicism"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04pwg": "Louis XIV of France"
    },
    "qid_topic_entity": {
      "Q7742": "Louis XIV of France"
    },
    "index": 42
  },
  {
    "QuestionId": "WebQTest-1533",
    "RawQuestion": "what planet did luke skywalker came from?",
    "ProcessedQuestion": "what planet did luke skywalker came from",
    "Parses": [
      {
        "ParseId": "WebQTest-1533.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f1bg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f1bg ns:fictional_universe.fictional_character.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "luke skywalker",
        "TopicEntityName": "Luke Skywalker",
        "TopicEntityMid": "m.0f1bg",
        "InferentialChain": [
          "fictional_universe.fictional_character.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.120mc0gk",
            "EntityName": "Polis Massa"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f1bg": "Luke Skywalker"
    },
    "qid_topic_entity": {
      "Q51746": "Luke Skywalker"
    },
    "index": 43
  },
  {
    "QuestionId": "WebQTest-1470",
    "RawQuestion": "what kind of government does poland have?",
    "ProcessedQuestion": "what kind of government does poland have",
    "Parses": [
      {
        "ParseId": "WebQTest-1470.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05qhw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05qhw ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "poland",
        "TopicEntityName": "Poland",
        "TopicEntityMid": "m.05qhw",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026wp",
            "EntityName": "Democracy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0glnsx",
            "EntityName": "Parliamentary republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05qhw": "Poland"
    },
    "qid_topic_entity": {
      "Q36": "Poland"
    },
    "index": 44
  },
  {
    "QuestionId": "WebQTest-1557",
    "RawQuestion": "where do florida panthers play?",
    "ProcessedQuestion": "where do florida panthers play",
    "Parses": [
      {
        "ParseId": "WebQTest-1557.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j8js)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j8js ns:sports.sports_team.arena_stadium ?x .\n}\n",
        "PotentialTopicEntityMention": "florida panthers",
        "TopicEntityName": "Florida Panthers",
        "TopicEntityMid": "m.0j8js",
        "InferentialChain": [
          "sports.sports_team.arena_stadium"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.038hc3",
            "EntityName": "BB&T Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.039xlz",
            "EntityName": "Miami Arena"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0j8js": "Florida Panthers"
    },
    "qid_topic_entity": {
      "Q204623": "Florida Panthers"
    },
    "index": 45
  },
  {
    "QuestionId": "WebQTest-1917",
    "RawQuestion": "what did charles babbage discover?",
    "ProcessedQuestion": "what did charles babbage discover",
    "Parses": [
      {
        "ParseId": "WebQTest-1917.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01qmz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01qmz ns:law.inventor.inventions ?x .\n}\n",
        "PotentialTopicEntityMention": "charles babbage",
        "TopicEntityName": "Charles Babbage",
        "TopicEntityMid": "m.01qmz",
        "InferentialChain": [
          "law.inventor.inventions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.029wv",
            "EntityName": "Difference engine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nf_",
            "EntityName": "Analytical Engine"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01qmz": "Charles Babbage"
    },
    "qid_topic_entity": {
      "Q46633": "Charles Babbage"
    },
    "index": 46
  },
  {
    "QuestionId": "WebQTest-512",
    "RawQuestion": "who were mary shelley?",
    "ProcessedQuestion": "who were mary shelley",
    "Parses": [
      {
        "ParseId": "WebQTest-512.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04_by)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04_by ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "mary shelley",
        "TopicEntityName": "Mary Shelley",
        "TopicEntityMid": "m.04_by",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h6676",
            "EntityName": "Editor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h6nsx",
            "EntityName": "Biographer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hv44_",
            "EntityName": "Playwright"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kvk_g",
            "EntityName": "Travel writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02xhgwq",
            "EntityName": "Novelist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f1hr",
            "EntityName": "Essayist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kyk",
            "EntityName": "Author"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04_by": "Mary Shelley"
    },
    "qid_topic_entity": {
      "Q47152": "Mary Shelley"
    },
    "index": 47
  },
  {
    "QuestionId": "WebQTest-1047",
    "RawQuestion": "who does amy stiller play in dodgeball?",
    "ProcessedQuestion": "who does amy stiller play in dodgeball",
    "Parses": [
      {
        "ParseId": "WebQTest-1047.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0194r1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0194r1 ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.034qrh .\n}\n",
        "PotentialTopicEntityMention": "amy stiller",
        "TopicEntityName": "Amy Stiller",
        "TopicEntityMid": "m.0194r1",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.034qrh",
            "EntityName": "DodgeBall: A True Underdog Story",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h5kk2x",
            "EntityName": "Keno Waitress"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1047.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.034qrh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.034qrh ns:film.film.starring ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.actor ns:m.0194r1 .\n}\n",
        "PotentialTopicEntityMention": "dodgeball",
        "TopicEntityName": "DodgeBall: A True Underdog Story",
        "TopicEntityMid": "m.034qrh",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0194r1",
            "EntityName": "Amy Stiller",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.actor",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h5kk2x",
            "EntityName": "Keno Waitress"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0194r1": "Amy Stiller",
      "m.034qrh": "DodgeBall: A True Underdog Story"
    },
    "qid_topic_entity": {
      "Q443128": "Amy Stiller",
      "Q908473": "DodgeBall: A True Underdog Story"
    },
    "index": 48
  },
  {
    "QuestionId": "WebQTest-1685",
    "RawQuestion": "where did benjamin franklin went to school?",
    "ProcessedQuestion": "where did benjamin franklin went to school",
    "Parses": [
      {
        "ParseId": "WebQTest-1685.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019fz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019fz ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "benjamin franklin",
        "TopicEntityName": "Benjamin Franklin",
        "TopicEntityMid": "m.019fz",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kj7g",
            "EntityName": "Boston Latin School"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.019fz": "Benjamin Franklin"
    },
    "qid_topic_entity": {
      "Q34969": "Benjamin Franklin"
    },
    "index": 49
  },
  {
    "QuestionId": "WebQTest-218",
    "RawQuestion": "in which continent is germany?",
    "ProcessedQuestion": "in which continent is germany",
    "Parses": [
      {
        "ParseId": "WebQTest-218.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0345h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0345h ns:base.locations.countries.continent ?x .\n}\n",
        "PotentialTopicEntityMention": "germany",
        "TopicEntityName": "Germany",
        "TopicEntityMid": "m.0345h",
        "InferentialChain": [
          "base.locations.countries.continent"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02j9z",
            "EntityName": "Europe"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0345h": "Germany"
    },
    "qid_topic_entity": {
      "Q183": "Germany"
    },
    "index": 50
  },
  {
    "QuestionId": "WebQTest-938",
    "RawQuestion": "who was queen elizabeth ii mom?",
    "ProcessedQuestion": "who was queen elizabeth ii mom",
    "Parses": [
      {
        "ParseId": "WebQTest-938.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d1_f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d1_f ns:people.person.parents ?x .\n?x ns:people.person.gender ns:m.02zsn .\n}\n",
        "PotentialTopicEntityMention": "elizabeth ii",
        "TopicEntityName": "Elizabeth II",
        "TopicEntityMid": "m.0d1_f",
        "InferentialChain": [
          "people.person.parents"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02zsn",
            "EntityName": "Female",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.person.gender",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cm63",
            "EntityName": "Queen Elizabeth The Queen Mother"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d1_f": "Elizabeth II"
    },
    "qid_topic_entity": {
      "Q9682": "Elizabeth II"
    },
    "index": 51
  },
  {
    "QuestionId": "WebQTest-1570",
    "RawQuestion": "where is the arizona cardinals stadium located?",
    "ProcessedQuestion": "where is the arizona cardinals stadium located",
    "Parses": [
      {
        "ParseId": "WebQTest-1570.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ws7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ws7 ns:sports.sports_team.location ?x .\n}\n",
        "PotentialTopicEntityMention": "arizona cardinals",
        "TopicEntityName": "Arizona Cardinals",
        "TopicEntityMid": "m.0ws7",
        "InferentialChain": [
          "sports.sports_team.location"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0vmt",
            "EntityName": "Arizona"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ws7": "Arizona Cardinals"
    },
    "qid_topic_entity": {
      "Q224164": "Arizona Cardinals"
    },
    "index": 52
  },
  {
    "QuestionId": "WebQTest-935",
    "RawQuestion": "where was osama bin laden killed?",
    "ProcessedQuestion": "where was osama bin laden killed",
    "Parses": [
      {
        "ParseId": "WebQTest-935.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05mg9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05mg9 ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "osama bin laden",
        "TopicEntityName": "Osama bin Laden",
        "TopicEntityMid": "m.05mg9",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011hs1",
            "EntityName": "Abbottabad"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05mg9": "Osama bin Laden"
    },
    "qid_topic_entity": {
      "Q1317": "Osama bin Laden"
    },
    "index": 53
  },
  {
    "QuestionId": "WebQTest-454",
    "RawQuestion": "where did hank marvin come from?",
    "ProcessedQuestion": "where did hank marvin come from",
    "Parses": [
      {
        "ParseId": "WebQTest-454.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01x2fx0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01x2fx0 ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "hank marvin",
        "TopicEntityName": "Hank Marvin",
        "TopicEntityMid": "m.01x2fx0",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j7ng",
            "EntityName": "Newcastle upon Tyne"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01x2fx0": "Hank Marvin"
    },
    "qid_topic_entity": {
      "Q365478": "Hank Marvin"
    },
    "index": 54
  },
  {
    "QuestionId": "WebQTest-1807",
    "RawQuestion": "what was wayne gretzky's first team?",
    "ProcessedQuestion": "what was wayne gretzky 's first team",
    "Parses": [
      {
        "ParseId": "WebQTest-1807.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0839s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0839s ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n?y ns:sports.sports_team_roster.from ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "PotentialTopicEntityMention": "wayne gretzky",
        "TopicEntityName": "Wayne Gretzky",
        "TopicEntityMid": "m.0839s",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Ascending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "sports.sports_team_roster.from",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jnmj",
            "EntityName": "Edmonton Oilers"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0839s": "Wayne Gretzky"
    },
    "qid_topic_entity": {
      "Q209518": "Wayne Gretzky"
    },
    "index": 55
  },
  {
    "QuestionId": "WebQTest-1960",
    "RawQuestion": "when was the last time the toronto maple leafs win the stanley cup?",
    "ProcessedQuestion": "when was the last time the toronto maple leafs win the stanley cup",
    "Parses": [
      {
        "ParseId": "WebQTest-1960.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j6tr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j6tr ns:sports.sports_team.championships ?x .\n?x ns:time.event.start_date ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "toronto maple leafs",
        "TopicEntityName": "Toronto Maple Leafs",
        "TopicEntityMid": "m.0j6tr",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "time.event.start_date",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03by199",
            "EntityName": "1967 Stanley Cup Finals"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0j6tr": "Toronto Maple Leafs"
    },
    "qid_topic_entity": {
      "Q203384": "Toronto Maple Leafs"
    },
    "index": 56
  },
  {
    "QuestionId": "WebQTest-757",
    "RawQuestion": "who is angelina jolie mom and dad?",
    "ProcessedQuestion": "who is angelina jolie mom and dad",
    "Parses": [
      {
        "ParseId": "WebQTest-757.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f4vbz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f4vbz ns:people.person.parents ?x .\n}\n",
        "PotentialTopicEntityMention": "angelina jolie",
        "TopicEntityName": "Angelina Jolie",
        "TopicEntityMid": "m.0f4vbz",
        "InferentialChain": [
          "people.person.parents"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01mqgf",
            "EntityName": "Marcheline Bertrand"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.046qq",
            "EntityName": "Jon Voight"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f4vbz": "Angelina Jolie"
    },
    "qid_topic_entity": {
      "Q13909": "Angelina Jolie"
    },
    "index": 57
  },
  {
    "QuestionId": "WebQTest-721",
    "RawQuestion": "what kind of leukemia did jill clayburgh have?",
    "ProcessedQuestion": "what kind of leukemia did jill clayburgh have",
    "Parses": [
      {
        "ParseId": "WebQTest-721.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01gw8b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01gw8b ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "jill clayburgh",
        "TopicEntityName": "Jill Clayburgh",
        "TopicEntityMid": "m.01gw8b",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bg7m",
            "EntityName": "B-cell chronic lymphocytic leukemia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04psf",
            "EntityName": "Leukemia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01gw8b": "Jill Clayburgh"
    },
    "qid_topic_entity": {
      "Q230665": "Jill Clayburgh"
    },
    "index": 58
  },
  {
    "QuestionId": "WebQTest-123",
    "RawQuestion": "what all does google now do?",
    "ProcessedQuestion": "what all does google now do",
    "Parses": [
      {
        "ParseId": "WebQTest-123.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.045c7b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.045c7b ns:business.consumer_company.products ?y .\n?y ns:business.company_product_relationship.consumer_product ?x .\nFILTER(NOT EXISTS {?y ns:business.company_product_relationship.from_date ?sk0} || \nEXISTS {?y ns:business.company_product_relationship.from_date ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:business.company_product_relationship.to_date ?sk2} || \nEXISTS {?y ns:business.company_product_relationship.to_date ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "google",
        "TopicEntityName": "Google",
        "TopicEntityMid": "m.045c7b",
        "InferentialChain": [
          "business.consumer_company.products",
          "business.company_product_relationship.consumer_product"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "business.company_product_relationship.from_date",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "business.company_product_relationship.to_date",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "now"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010pkp62",
            "EntityName": "Google Classroom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03w9g0f",
            "EntityName": "Google Drive"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064qgt0",
            "EntityName": "Apache Wave"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ny5h",
            "EntityName": "Google Earth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b6g2kz",
            "EntityName": "Google Buzz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dm258",
            "EntityName": "Google Docs, Sheets, and Slides"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fpj3tb",
            "EntityName": "Nexus S"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j7m2zm",
            "EntityName": "Google Glass"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k0p036",
            "EntityName": "Nexus 7"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k2998k",
            "EntityName": "Nexus Q"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nb7n8f",
            "EntityName": "Nexus 10"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pb8gtr",
            "EntityName": "Google Maps"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0wf0rgl",
            "EntityName": "Chromecast"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.045c7b": "Google"
    },
    "qid_topic_entity": {
      "Q95": "Google"
    },
    "index": 59
  },
  {
    "QuestionId": "WebQTest-361",
    "RawQuestion": "what to do and see in vienna austria?",
    "ProcessedQuestion": "what to do and see in vienna austria",
    "Parses": [
      {
        "ParseId": "WebQTest-361.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fhp9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fhp9 ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "vienna",
        "TopicEntityName": "Vienna",
        "TopicEntityMid": "m.0fhp9",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.121ymzrf",
            "EntityName": "Rock im Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015_kq",
            "EntityName": "Sch\u00f6nbrunn Palace"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01c921",
            "EntityName": "Minoritenkirche"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fdmj",
            "EntityName": "St. Stephen's Cathedral, Vienna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.021c8v",
            "EntityName": "Vienna State Opera"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025zg_7",
            "EntityName": "Liechtenstein Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027fx_h",
            "EntityName": "Schloss Hof"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q__dl",
            "EntityName": "mumok"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02w4zw",
            "EntityName": "Imperial Crypt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037yl3",
            "EntityName": "Belvedere, Vienna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03yy70",
            "EntityName": "Kunsthistorisches Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lv9z",
            "EntityName": "Karlskirche, Vienna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04zct1",
            "EntityName": "Albertina"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0547jg",
            "EntityName": "Naturhistorisches Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05ksgz",
            "EntityName": "Hofburg Palace"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.071ygm",
            "EntityName": "Jesuit Church, Vienna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.079jqn",
            "EntityName": "Schottenkirche, Vienna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07xjrz",
            "EntityName": "Museum of Military History, Vienna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08gckp",
            "EntityName": "Vienna International Centre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08j7nmv",
            "EntityName": "Sigmund Freud Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08k4xy",
            "EntityName": "Vienna Observatory"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08v5y9",
            "EntityName": "Augustinian Church, Vienna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.098gjd",
            "EntityName": "Capuchin Church, Vienna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09fvwy",
            "EntityName": "Prater"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b0lgr",
            "EntityName": "Millennium Tower"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bygq4",
            "EntityName": "St. Peter's Church"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1v9t",
            "EntityName": "Leopold Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0czbmkt",
            "EntityName": "Haus der Musik"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dnhg8",
            "EntityName": "Rathaus, Vienna"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0fhp9": "Vienna"
    },
    "qid_topic_entity": {
      "Q1741": "Vienna"
    },
    "index": 60
  },
  {
    "QuestionId": "WebQTest-111",
    "RawQuestion": "where is the carpathian mountain range located?",
    "ProcessedQuestion": "where is the carpathian mountain range located",
    "Parses": [
      {
        "ParseId": "WebQTest-111.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cdsk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cdsk ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "carpathian mountain range",
        "TopicEntityName": "Carpathian Mountains",
        "TopicEntityMid": "m.0cdsk",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02j9z",
            "EntityName": "Europe"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0cdsk": "Carpathian Mountains"
    },
    "qid_topic_entity": {
      "Q1288": "Carpathian Mountains"
    },
    "index": 61
  },
  {
    "QuestionId": "WebQTest-673",
    "RawQuestion": "where did robert kardashian go to college?",
    "ProcessedQuestion": "where did robert kardashian go to college",
    "Parses": [
      {
        "ParseId": "WebQTest-673.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01x48v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01x48v ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "robert kardashian",
        "TopicEntityName": "Robert Kardashian",
        "TopicEntityMid": "m.01x48v",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rky4",
            "EntityName": "University of San Diego"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05pyvz",
            "EntityName": "University of San Diego School of Law"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065y4w7",
            "EntityName": "University of Southern California"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01x48v": "Robert Kardashian"
    },
    "qid_topic_entity": {
      "Q1816737": "Robert Kardashian"
    },
    "index": 62
  },
  {
    "QuestionId": "WebQTest-987",
    "RawQuestion": "what does barbara bush do for work?",
    "ProcessedQuestion": "what does barbara bush do for work",
    "Parses": [
      {
        "ParseId": "WebQTest-987.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015nr6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015nr6 ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.basic_title ?x .\n}\n",
        "PotentialTopicEntityMention": "barbara bush",
        "TopicEntityName": "Barbara Bush",
        "TopicEntityMid": "m.015nr6",
        "InferentialChain": [
          "government.politician.government_positions_held",
          "government.government_position_held.basic_title"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dz7z",
            "EntityName": "First Lady"
          }
        ]
      },
      {
        "ParseId": "WebQTest-987.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015nr6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015nr6 ns:people.person.employment_history ?y .\n?y ns:business.employment_tenure.title ?x .\n}\n",
        "PotentialTopicEntityMention": "barbara bush",
        "TopicEntityName": "Barbara Bush",
        "TopicEntityMid": "m.015nr6",
        "InferentialChain": [
          "people.person.employment_history",
          "business.employment_tenure.title"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dz7z",
            "EntityName": "First Lady"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.015nr6": "Barbara Bush"
    },
    "qid_topic_entity": {
      "Q190628": "Barbara Bush"
    },
    "index": 63
  },
  {
    "QuestionId": "WebQTest-773",
    "RawQuestion": "where is the sony ericsson company?",
    "ProcessedQuestion": "where is the sony ericsson company",
    "Parses": [
      {
        "ParseId": "WebQTest-773.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01spxd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01spxd ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "sony",
        "TopicEntityName": "Sony Mobile Communications",
        "TopicEntityMid": "m.01spxd",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.024bqj",
            "EntityName": "Minato"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01spxd": "Sony Mobile Communications"
    },
    "qid_topic_entity": {
      "Q376692": "Sony Mobile Communications"
    },
    "index": 64
  },
  {
    "QuestionId": "WebQTest-1616",
    "RawQuestion": "what did shannon hoon die from?",
    "ProcessedQuestion": "what did shannon hoon die from",
    "Parses": [
      {
        "ParseId": "WebQTest-1616.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01w2x6z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01w2x6z ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "shannon hoon",
        "TopicEntityName": "Shannon Hoon",
        "TopicEntityMid": "m.01w2x6z",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01tf_6",
            "EntityName": "Drug overdose"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01w2x6z": "Shannon Hoon"
    },
    "qid_topic_entity": {
      "Q531978": "Shannon Hoon"
    },
    "index": 65
  },
  {
    "QuestionId": "WebQTest-874",
    "RawQuestion": "what language do people from bosnia speak?",
    "ProcessedQuestion": "what language do people from bosnia speak",
    "Parses": [
      {
        "ParseId": "WebQTest-874.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0166b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0166b ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "bosnia",
        "TopicEntityName": "Bosnia and Herzegovina",
        "TopicEntityMid": "m.0166b",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06x8y",
            "EntityName": "Serbo-Croatian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k0sb",
            "EntityName": "Serbian language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-874.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0166b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0166b ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "bosnia",
        "TopicEntityName": "Bosnia and Herzegovina",
        "TopicEntityMid": "m.0166b",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01841n",
            "EntityName": "Bosnian language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k0sb",
            "EntityName": "Serbian language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k0sv",
            "EntityName": "Croatian language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0166b": "Bosnia and Herzegovina"
    },
    "qid_topic_entity": {
      "Q225": "Bosnia and Herzegovina"
    },
    "index": 66
  },
  {
    "QuestionId": "WebQTest-766",
    "RawQuestion": "what is malaysian currency?",
    "ProcessedQuestion": "what is malaysian currency",
    "Parses": [
      {
        "ParseId": "WebQTest-766.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09pmkv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09pmkv ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "malaysian",
        "TopicEntityName": "Malaysia",
        "TopicEntityMid": "m.09pmkv",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_c9q",
            "EntityName": "Malaysian ringgit"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09pmkv": "Malaysia"
    },
    "qid_topic_entity": {
      "Q833": "Malaysia"
    },
    "index": 67
  },
  {
    "QuestionId": "WebQTest-1445",
    "RawQuestion": "what tv series did mark harmon star in?",
    "ProcessedQuestion": "what tv series did mark harmon star in",
    "Parses": [
      {
        "ParseId": "WebQTest-1445.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.037gjc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.037gjc ns:tv.tv_actor.starring_roles ?y .\n?y ns:tv.regular_tv_appearance.series ?x .\n}\n",
        "PotentialTopicEntityMention": "mark harmon",
        "TopicEntityName": "Mark Harmon",
        "TopicEntityMid": "m.037gjc",
        "InferentialChain": [
          "tv.tv_actor.starring_roles",
          "tv.regular_tv_appearance.series"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fx1l",
            "EntityName": "Chicago Hope"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02996d",
            "EntityName": "Centennial"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kk_c",
            "EntityName": "From the Earth to the Moon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02md2d",
            "EntityName": "St. Elsewhere"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x6r9",
            "EntityName": "Flamingo Road"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m8sg",
            "EntityName": "NCIS"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05c2j5_",
            "EntityName": "Eleanor and Franklin: The White House Years"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05p4qwd",
            "EntityName": "Sam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06yg5s",
            "EntityName": "240-Robert"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07cgcf9",
            "EntityName": "Charlie Grace"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dl6q1_",
            "EntityName": "The Dream Merchants"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g6sm2",
            "EntityName": "Reasonable Doubts"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.037gjc": "Mark Harmon"
    },
    "qid_topic_entity": {
      "Q296774": "Mark Harmon"
    },
    "index": 68
  },
  {
    "QuestionId": "WebQTest-153",
    "RawQuestion": "what are the sights to see in madrid?",
    "ProcessedQuestion": "what are the sights to see in madrid",
    "Parses": [
      {
        "ParseId": "WebQTest-153.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.056_y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.056_y ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "madrid",
        "TopicEntityName": "Madrid",
        "TopicEntityMid": "m.056_y",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01bc9m",
            "EntityName": "El Escorial"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01hlq3",
            "EntityName": "Museo Nacional Del Prado"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01jcyh",
            "EntityName": "Museo Nacional Centro de Arte Reina Sof\u00eda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r9yg7",
            "EntityName": "Summercase"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03chy63",
            "EntityName": "Festimad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rmzx",
            "EntityName": "Buen Retiro Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04m3yk",
            "EntityName": "Royal Palace of Madrid"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.053llq",
            "EntityName": "Almudena Cathedral"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bvn8g",
            "EntityName": "Sorolla Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06_l58",
            "EntityName": "Plaza de Cibeles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06cgmf",
            "EntityName": "Madrid Arena"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06j2nj",
            "EntityName": "Paseo del Prado"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nd2f",
            "EntityName": "Parque Warner Madrid"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.073z19",
            "EntityName": "Thyssen-Bornemisza Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07f__f",
            "EntityName": "Temple of Debod"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07mpc7",
            "EntityName": "Puerta del Sol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09s07b",
            "EntityName": "Gran V\u00eda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bwg9f0",
            "EntityName": "Madrid Marathon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cd2rc",
            "EntityName": "Plaza Mayor, Madrid"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fphvtq",
            "EntityName": "La Vaguada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h3lmf1",
            "EntityName": "Museum of L\u00e1zaro Galdiano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h3tjjc",
            "EntityName": "Palace of la Bolsa de Madrid"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.056_y": "Madrid"
    },
    "qid_topic_entity": {
      "Q2807": "Madrid"
    },
    "index": 69
  },
  {
    "QuestionId": "WebQTest-420",
    "RawQuestion": "where is perpignan located?",
    "ProcessedQuestion": "where is perpignan located",
    "Parses": [
      {
        "ParseId": "WebQTest-420.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09nkq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09nkq ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "perpignan",
        "TopicEntityName": "Perpignan",
        "TopicEntityMid": "m.09nkq",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01087l",
            "EntityName": "Pyr\u00e9n\u00e9es-Orientales"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f8l9c",
            "EntityName": "France"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0lwkz",
            "EntityName": "Languedoc-Roussillon"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09nkq": "Perpignan"
    },
    "qid_topic_entity": {
      "Q6730": "Perpignan"
    },
    "index": 70
  },
  {
    "QuestionId": "WebQTest-1416",
    "RawQuestion": "what was franklin pierce famous for?",
    "ProcessedQuestion": "what was franklin pierce famous for",
    "Parses": [
      {
        "ParseId": "WebQTest-1416.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02z51)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02z51 ns:common.topic.notable_types ?x .\n}\n",
        "PotentialTopicEntityMention": "franklin pierce",
        "TopicEntityName": "Franklin Pierce",
        "TopicEntityMid": "m.02z51",
        "InferentialChain": [
          "common.topic.notable_types"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01xljv7",
            "EntityName": "US President"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02z51": "Franklin Pierce"
    },
    "qid_topic_entity": {
      "Q12312": "Franklin Pierce"
    },
    "index": 71
  },
  {
    "QuestionId": "WebQTest-1748",
    "RawQuestion": "through which countries of the sahel does the niger river flow?",
    "ProcessedQuestion": "through which countries of the sahel does the niger river flow",
    "Parses": [
      {
        "ParseId": "WebQTest-1748.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05csx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05csx ns:location.location.partially_containedby ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n?x ns:location.location.partially_contains ns:m.0l5_l .\n}\n",
        "PotentialTopicEntityMention": "niger river",
        "TopicEntityName": "Niger River",
        "TopicEntityMid": "m.05csx",
        "InferentialChain": [
          "location.location.partially_containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01mp",
            "EntityName": "Country",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          },
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0l5_l",
            "EntityName": "Sahel",
            "SourceNodeIndex": 0,
            "NodePredicate": "location.location.partially_contains",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v09",
            "EntityName": "Mali"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05cc1",
            "EntityName": "Niger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05cgv",
            "EntityName": "Nigeria"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05csx": "Niger River"
    },
    "qid_topic_entity": {
      "Q3542": "Niger River"
    },
    "index": 72
  },
  {
    "QuestionId": "WebQTest-354",
    "RawQuestion": "what art movement did leonardo da vinci belong to?",
    "ProcessedQuestion": "what art movement did leonardo da vinci belong to",
    "Parses": [
      {
        "ParseId": "WebQTest-354.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04lg6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04lg6 ns:visual_art.visual_artist.associated_periods_or_movements ?x .\n}\n",
        "PotentialTopicEntityMention": "leonardo da vinci",
        "TopicEntityName": "Leonardo da Vinci",
        "TopicEntityMid": "m.04lg6",
        "InferentialChain": [
          "visual_art.visual_artist.associated_periods_or_movements"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011nkkt6",
            "EntityName": "Pastel Art"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01z__d",
            "EntityName": "High Renaissance"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04lg6": "Leonardo da Vinci"
    },
    "qid_topic_entity": {
      "Q762": "Leonardo da Vinci"
    },
    "index": 73
  },
  {
    "QuestionId": "WebQTest-1392",
    "RawQuestion": "what the language spoken in indonesia?",
    "ProcessedQuestion": "what the language spoken in indonesia",
    "Parses": [
      {
        "ParseId": "WebQTest-1392.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ryn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ryn ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "indonesia",
        "TopicEntityName": "Indonesia",
        "TopicEntityMid": "m.03ryn",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01qzl2",
            "EntityName": "Sunda Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0201jz",
            "EntityName": "Bali Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020257",
            "EntityName": "Madura Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bv9",
            "EntityName": "Dutch Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwx1l",
            "EntityName": "Javanese Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.075yc64",
            "EntityName": "Batak Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.097kp",
            "EntityName": "Indonesian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f9fsf",
            "EntityName": "Tobelo Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y1mh",
            "EntityName": "Malay Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1392.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ryn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ryn ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "indonesia",
        "TopicEntityName": "Indonesia",
        "TopicEntityMid": "m.03ryn",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.097kp",
            "EntityName": "Indonesian Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03ryn": "Indonesia"
    },
    "qid_topic_entity": {
      "Q252": "Indonesia"
    },
    "index": 74
  },
  {
    "QuestionId": "WebQTest-90",
    "RawQuestion": "who played on the jeffersons?",
    "ProcessedQuestion": "who played on the jeffersons",
    "Parses": [
      {
        "ParseId": "WebQTest-90.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02f8jf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02f8jf ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n}\n",
        "PotentialTopicEntityMention": "the jeffersons",
        "TopicEntityName": "The Jeffersons",
        "TopicEntityMid": "m.02f8jf",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_yyp",
            "EntityName": "Sherman Hemsley"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_z06",
            "EntityName": "Isabel Sanford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0279gxy",
            "EntityName": "Damon Evans"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0279gyz",
            "EntityName": "Berlinda Tolbert"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03h436",
            "EntityName": "Roxie Roker"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03k25c",
            "EntityName": "Zara Cully"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03zwg4",
            "EntityName": "Marla Gibbs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06b_nc",
            "EntityName": "Franklin Cover"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c6b4y",
            "EntityName": "Paul Benedict"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0clm34",
            "EntityName": "Mike Evans"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gydmc",
            "EntityName": "Jay Hammer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02f8jf": "The Jeffersons"
    },
    "qid_topic_entity": {
      "Q153227": "The Jeffersons"
    },
    "index": 75
  },
  {
    "QuestionId": "WebQTest-1916",
    "RawQuestion": "what county is utica ny in?",
    "ProcessedQuestion": "what county is utica ny in",
    "Parses": [
      {
        "ParseId": "WebQTest-1916.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lpk3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lpk3 ns:location.hud_county_place.county ?x .\n}\n",
        "PotentialTopicEntityMention": "utica ny",
        "TopicEntityName": "Utica",
        "TopicEntityMid": "m.0lpk3",
        "InferentialChain": [
          "location.hud_county_place.county"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fc_9",
            "EntityName": "Oneida County"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1916.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lpk3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lpk3 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
        "PotentialTopicEntityMention": "utica ny",
        "TopicEntityName": "Utica",
        "TopicEntityMid": "m.0lpk3",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpym_",
            "EntityName": "US County",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fc_9",
            "EntityName": "Oneida County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0lpk3": "Utica"
    },
    "qid_topic_entity": {
      "Q2495519": "Utica"
    },
    "index": 76
  },
  {
    "QuestionId": "WebQTest-1489",
    "RawQuestion": "what character did billy d williams play in star wars?",
    "ProcessedQuestion": "what character did billy d williams play in star wars",
    "Parses": [
      {
        "ParseId": "WebQTest-1489.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027_sn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027_sn ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.0g55yqj .\n}\n",
        "PotentialTopicEntityMention": "billy d williams",
        "TopicEntityName": "Billy Dee Williams",
        "TopicEntityMid": "m.027_sn",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0g55yqj",
            "EntityName": "Robot Chicken: Star Wars Episode III",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ddrb",
            "EntityName": "Lando Calrissian"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1489.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027_sn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027_sn ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.0f3m1 .\n}\n",
        "PotentialTopicEntityMention": "billy d williams",
        "TopicEntityName": "Billy Dee Williams",
        "TopicEntityMid": "m.027_sn",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0f3m1",
            "EntityName": "Star Wars Episode V: The Empire Strikes Back",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ddrb",
            "EntityName": "Lando Calrissian"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1489.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027_sn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027_sn ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.0ddjy .\n}\n",
        "PotentialTopicEntityMention": "billy d williams",
        "TopicEntityName": "Billy Dee Williams",
        "TopicEntityMid": "m.027_sn",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0ddjy",
            "EntityName": "Return of the Jedi",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ddrb",
            "EntityName": "Lando Calrissian"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.027_sn": "Billy Dee Williams"
    },
    "qid_topic_entity": {
      "Q358345": "Billy Dee Williams"
    },
    "index": 77
  },
  {
    "QuestionId": "WebQTest-1955",
    "RawQuestion": "who are the judges appointed in the supreme court?",
    "ProcessedQuestion": "who are the judges appointed in the supreme court",
    "Parses": [
      {
        "ParseId": "WebQTest-1955.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07sz1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07sz1 ns:law.court.judges ?y .\n?y ns:law.judicial_tenure.judge ?x .\nFILTER(NOT EXISTS {?y ns:law.judicial_tenure.from_date ?sk0} || \nEXISTS {?y ns:law.judicial_tenure.from_date ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:law.judicial_tenure.to_date ?sk2} || \nEXISTS {?y ns:law.judicial_tenure.to_date ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "supreme court",
        "TopicEntityName": "Supreme Court of the United States",
        "TopicEntityMid": "m.07sz1",
        "InferentialChain": [
          "law.court.judges",
          "law.judicial_tenure.judge"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "law.judicial_tenure.from_date",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "law.judicial_tenure.to_date",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_4j",
            "EntityName": "Clarence Thomas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0166zk",
            "EntityName": "Antonin Scalia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016m0v",
            "EntityName": "Stephen Breyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0199pk",
            "EntityName": "Ruth Bader Ginsburg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019s7r",
            "EntityName": "Anthony Kennedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gnxk",
            "EntityName": "Samuel Alito"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.066vhq",
            "EntityName": "John Roberts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06lnfm",
            "EntityName": "Elena Kagan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06lvrr",
            "EntityName": "Sonia Sotomayor"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07sz1": "Supreme Court of the United States"
    },
    "qid_topic_entity": {
      "Q11201": "Supreme Court of the United States"
    },
    "index": 78
  },
  {
    "QuestionId": "WebQTest-708",
    "RawQuestion": "who won fa cup 1976?",
    "ProcessedQuestion": "who won fa cup 1976",
    "Parses": [
      {
        "ParseId": "WebQTest-708.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_p0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_p0 ns:sports.sports_award_type.winners ?y .\n?y ns:sports.sports_award.award_winner ?x .\n?y ns:sports.sports_award.season ns:m.04gp5lx .\n}\n",
        "PotentialTopicEntityMention": "fa cup",
        "TopicEntityName": "FA Cup",
        "TopicEntityMid": "m.02_p0",
        "InferentialChain": [
          "sports.sports_award_type.winners",
          "sports.sports_award.award_winner"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04gp5lx",
            "EntityName": "1975\u201376 FA Cup",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_award.season",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k_l4",
            "EntityName": "Southampton F.C."
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02_p0": "FA Cup"
    },
    "qid_topic_entity": {
      "Q11151": "FA Cup"
    },
    "index": 79
  },
  {
    "QuestionId": "WebQTest-342",
    "RawQuestion": "what countries have english as their official language?",
    "ProcessedQuestion": "what countries have english as their official language",
    "Parses": [
      {
        "ParseId": "WebQTest-342.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h40lc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h40lc ns:language.human_language.countries_spoken_in ?x .\n?x ns:location.country.official_language ns:m.02h40lc .\n}\n",
        "PotentialTopicEntityMention": "english",
        "TopicEntityName": "English Language",
        "TopicEntityMid": "m.02h40lc",
        "InferentialChain": [
          "language.human_language.countries_spoken_in"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02h40lc",
            "EntityName": "English Language",
            "SourceNodeIndex": 0,
            "NodePredicate": "location.country.official_language",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0160w",
            "EntityName": "Bahamas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0162v",
            "EntityName": "Barbados"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0164b",
            "EntityName": "Belize"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0165b",
            "EntityName": "Bermuda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0166v",
            "EntityName": "Botswana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019rg5",
            "EntityName": "Kenya"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nln",
            "EntityName": "Cameroon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nty",
            "EntityName": "Cayman Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020p1",
            "EntityName": "Cook Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026wtlf",
            "EntityName": "Territory of Papua and New Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027nb",
            "EntityName": "Dominica"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wt0",
            "EntityName": "Fiji"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_xj",
            "EntityName": "Jersey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.034m8",
            "EntityName": "Guyana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.034tl",
            "EntityName": "Guam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035dk",
            "EntityName": "Ghana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035hm",
            "EntityName": "Gibraltar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035yg",
            "EntityName": "Grenada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03h64",
            "EntityName": "Hong Kong"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rk0",
            "EntityName": "India"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rt9",
            "EntityName": "Republic of Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03t1s",
            "EntityName": "Isle of Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047t_",
            "EntityName": "Kiribati"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hvw",
            "EntityName": "Lesotho"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hzj",
            "EntityName": "Liberia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3q",
            "EntityName": "Malta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v6v",
            "EntityName": "Marshall Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wcf",
            "EntityName": "Montserrat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bmq",
            "EntityName": "Namibia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05br2",
            "EntityName": "Nauru"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05cgv",
            "EntityName": "Nigeria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qkp",
            "EntityName": "Papua New Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05r7t",
            "EntityName": "Puerto Rico"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05sb1",
            "EntityName": "Pakistan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05v8c",
            "EntityName": "Philippines"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dfg",
            "EntityName": "Rwanda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ryl",
            "EntityName": "Saint Kitts and Nevis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s_2",
            "EntityName": "Sierra Leone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s0l",
            "EntityName": "Saint Lucia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s6l",
            "EntityName": "Saint Vincent and the Grenadines"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s9y",
            "EntityName": "Samoa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06t2t",
            "EntityName": "Singapore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06tw8",
            "EntityName": "Sudan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06v36",
            "EntityName": "Swaziland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07dzf",
            "EntityName": "Tanzania"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07fr_",
            "EntityName": "Turks and Caicos Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07fsv",
            "EntityName": "Tuvalu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ssc",
            "EntityName": "United Kingdom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07tp2",
            "EntityName": "Uganda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07z5n",
            "EntityName": "Vanuatu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.088q4",
            "EntityName": "Zimbabwe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.088vb",
            "EntityName": "Zambia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09wfqp",
            "EntityName": "Territory of New Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ctw_b",
            "EntityName": "New Zealand"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hdx8",
            "EntityName": "Gambia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hzlz",
            "EntityName": "South Africa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5g9",
            "EntityName": "Wales"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0l3h",
            "EntityName": "Antigua and Barbuda"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02h40lc": "English Language"
    },
    "qid_topic_entity": {
      "Q1860": "English Language"
    },
    "index": 80
  },
  {
    "QuestionId": "WebQTest-921",
    "RawQuestion": "what was the cause of death for huell howser?",
    "ProcessedQuestion": "what was the cause of death for huell howser",
    "Parses": [
      {
        "ParseId": "WebQTest-921.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kddt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kddt ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "huell howser",
        "TopicEntityName": "Huell Howser",
        "TopicEntityMid": "m.02kddt",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m32h",
            "EntityName": "Prostate cancer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02kddt": "Huell Howser"
    },
    "qid_topic_entity": {
      "Q2837916": "Huell Howser"
    },
    "index": 81
  },
  {
    "QuestionId": "WebQTest-774",
    "RawQuestion": "what kind of currency does the dominican republic have?",
    "ProcessedQuestion": "what kind of currency does the dominican republic have",
    "Parses": [
      {
        "ParseId": "WebQTest-774.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027rn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027rn ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "dominican republic",
        "TopicEntityName": "Dominican Republic",
        "TopicEntityMid": "m.027rn",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lt7_",
            "EntityName": "Dominican peso"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.027rn": "Dominican Republic"
    },
    "qid_topic_entity": {
      "Q786": "Dominican Republic"
    },
    "index": 82
  },
  {
    "QuestionId": "WebQTest-279",
    "RawQuestion": "what county is st paul va in?",
    "ProcessedQuestion": "what county is st paul va in",
    "Parses": [
      {
        "ParseId": "WebQTest-279.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.013nm2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.013nm2 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
        "PotentialTopicEntityMention": "st paul va",
        "TopicEntityName": "St. Paul",
        "TopicEntityMid": "m.013nm2",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpym_",
            "EntityName": "US County",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0mmy6",
            "EntityName": "Wise County"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0mn3x",
            "EntityName": "Russell County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.013nm2": "St. Paul"
    },
    "qid_topic_entity": {
      "Q2989543": "St. Paul"
    },
    "index": 83
  },
  {
    "QuestionId": "WebQTest-172",
    "RawQuestion": "what do you call members of the senate?",
    "ProcessedQuestion": "what do you call members of the senate",
    "Parses": [
      {
        "ParseId": "WebQTest-172.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07t58)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07t58 ns:government.governmental_body.members ?y .\n?y ns:government.government_position_held.basic_title ?x .\n}\n",
        "PotentialTopicEntityMention": "senate",
        "TopicEntityName": "United States Senate",
        "TopicEntityMid": "m.07t58",
        "InferentialChain": [
          "government.governmental_body.members",
          "government.government_position_held.basic_title"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01hvfh",
            "EntityName": "President of the Senate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01t7n9",
            "EntityName": "State Senator"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025whr1",
            "EntityName": "Chief of staff"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02p31rg",
            "EntityName": "President pro tempore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.048zv9l",
            "EntityName": "Senator"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05k99t",
            "EntityName": "Senate majority leader"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07t58": "United States Senate"
    },
    "qid_topic_entity": {
      "Q66096": "United States Senate"
    },
    "index": 84
  },
  {
    "QuestionId": "WebQTest-825",
    "RawQuestion": "who does nolan ryan play for?",
    "ProcessedQuestion": "who does nolan ryan play for",
    "Parses": [
      {
        "ParseId": "WebQTest-825.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hctb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hctb ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "nolan ryan",
        "TopicEntityName": "Nolan Ryan",
        "TopicEntityMid": "m.0hctb",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m1n",
            "EntityName": "Houston Astros"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kmnv1",
            "EntityName": "California Angels"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0hctb": "Nolan Ryan"
    },
    "qid_topic_entity": {
      "Q721948": "Nolan Ryan"
    },
    "index": 85
  },
  {
    "QuestionId": "WebQTest-128",
    "RawQuestion": "who plays juni cortez?",
    "ProcessedQuestion": "who plays juni cortez",
    "Parses": [
      {
        "ParseId": "WebQTest-128.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02ql73)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02ql73 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n}\n",
        "PotentialTopicEntityMention": "juni cortez",
        "TopicEntityName": "Juni Cortez",
        "TopicEntityMid": "m.02ql73",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.042ldz",
            "EntityName": "Daryl Sabara"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02ql73": "Juni Cortez"
    },
    "qid_topic_entity": {
      "Q6313015": "Juni Cortez"
    },
    "index": 86
  },
  {
    "QuestionId": "WebQTest-178",
    "RawQuestion": "who was the leader of the us during wwii?",
    "ProcessedQuestion": "who was the leader of the us during wwii",
    "Parses": [
      {
        "ParseId": "WebQTest-178.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: F Date range join. Original comment: F nested"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n  ns:m.081pw ns:time.event.start_date ?start ;\n             ns:time.event.end_date ?end .\n  ?x ns:government.politician.government_positions_held  ?y .\n  ?y ns:government.government_position_held.office_position_or_title ns:m.060d2 ; # President of the United States\n     ns:government.government_position_held.from  ?from ;\n     ns:government.government_position_held.to  ?to .\n  FILTER (?from < ?end)\n  FILTER (?to > ?start)\n}",
        "PotentialTopicEntityMention": "wwii",
        "TopicEntityName": "World War II",
        "TopicEntityMid": "m.081pw",
        "InferentialChain": null,
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02yy8",
            "EntityName": "Franklin D. Roosevelt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09bg4l",
            "EntityName": "Harry S. Truman"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.081pw": "World War II"
    },
    "qid_topic_entity": {
      "Q362": "World War II"
    },
    "index": 87
  },
  {
    "QuestionId": "WebQTest-621",
    "RawQuestion": "what countries have german as the official language?",
    "ProcessedQuestion": "what countries have german as the official language",
    "Parses": [
      {
        "ParseId": "WebQTest-621.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04306rv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04306rv ns:language.human_language.countries_spoken_in ?x .\n?x ns:location.country.official_language ns:m.04306rv .\n}\n",
        "PotentialTopicEntityMention": "german",
        "TopicEntityName": "German Language",
        "TopicEntityMid": "m.04306rv",
        "InferentialChain": [
          "language.human_language.countries_spoken_in"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04306rv",
            "EntityName": "German Language",
            "SourceNodeIndex": 0,
            "NodePredicate": "location.country.official_language",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0154j",
            "EntityName": "Belgium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0345h",
            "EntityName": "Germany"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03f2w",
            "EntityName": "East Germany"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04g61",
            "EntityName": "Luxembourg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j53",
            "EntityName": "Liechtenstein"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mzp",
            "EntityName": "Switzerland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h7x",
            "EntityName": "Austria"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04306rv": "German Language"
    },
    "qid_topic_entity": {
      "Q188": "German Language"
    },
    "index": 88
  },
  {
    "QuestionId": "WebQTest-671",
    "RawQuestion": "who are the senators of hawaii 2012?",
    "ProcessedQuestion": "who are the senators of hawaii 2012",
    "Parses": [
      {
        "ParseId": "WebQTest-671.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gh4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gh4 ns:government.political_district.representatives ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.jurisdiction_of_office ns:m.09c7w0 .\n?y ns:government.government_position_held.from ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "hawaii",
        "TopicEntityName": "Hawaii",
        "TopicEntityMid": "m.03gh4",
        "InferentialChain": [
          "government.political_district.representatives",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.09c7w0",
            "EntityName": "United States of America",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.jurisdiction_of_office",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "government.government_position_held.from",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0357cd",
            "EntityName": "Mazie Hirono"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03gh4": "Hawaii"
    },
    "qid_topic_entity": {
      "Q782": "Hawaii"
    },
    "index": 89
  },
  {
    "QuestionId": "WebQTest-346",
    "RawQuestion": "who does donnie wahlberg play in the sixth sense?",
    "ProcessedQuestion": "who does donnie wahlberg play in the sixth sense",
    "Parses": [
      {
        "ParseId": "WebQTest-346.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02stwg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02stwg ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.07j94 .\n}\n",
        "PotentialTopicEntityMention": "donnie wahlberg",
        "TopicEntityName": "Donnie Wahlberg",
        "TopicEntityMid": "m.02stwg",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.07j94",
            "EntityName": "The Sixth Sense",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gyxn2c",
            "EntityName": "Vincent Grey"
          }
        ]
      },
      {
        "ParseId": "WebQTest-346.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07j94)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07j94 ns:film.film.starring ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.actor ns:m.02stwg .\n}\n",
        "PotentialTopicEntityMention": "the sixth sense",
        "TopicEntityName": "The Sixth Sense",
        "TopicEntityMid": "m.07j94",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02stwg",
            "EntityName": "Donnie Wahlberg",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.actor",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gyxn2c",
            "EntityName": "Vincent Grey"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02stwg": "Donnie Wahlberg",
      "m.07j94": "The Sixth Sense"
    },
    "qid_topic_entity": {
      "Q313470": "Donnie Wahlberg",
      "Q183063": "The Sixth Sense"
    },
    "index": 90
  },
  {
    "QuestionId": "WebQTest-331",
    "RawQuestion": "where was the temple of karnak built?",
    "ProcessedQuestion": "where was the temple of karnak built",
    "Parses": [
      {
        "ParseId": "WebQTest-331.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.014wy4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.014wy4 ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "temple of karnak",
        "TopicEntityName": "Karnak",
        "TopicEntityMid": "m.014wy4",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02fhym",
            "EntityName": "Luxor Governorate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02k54",
            "EntityName": "Egypt"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.014wy4": "Karnak"
    },
    "qid_topic_entity": {
      "Q522862": "Karnak"
    },
    "index": 91
  },
  {
    "QuestionId": "WebQTest-100",
    "RawQuestion": "what language is spoken in haiti today?",
    "ProcessedQuestion": "what language is spoken in haiti today",
    "Parses": [
      {
        "ParseId": "WebQTest-100.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gyl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gyl ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "haiti",
        "TopicEntityName": "Haiti",
        "TopicEntityMid": "m.03gyl",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02dhwl",
            "EntityName": "Haitian Creole"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064_8sq",
            "EntityName": "French"
          }
        ]
      },
      {
        "ParseId": "WebQTest-100.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gyl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gyl ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "haiti",
        "TopicEntityName": "Haiti",
        "TopicEntityMid": "m.03gyl",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02dhwl",
            "EntityName": "Haitian Creole"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064_8sq",
            "EntityName": "French"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03gyl": "Haiti"
    },
    "qid_topic_entity": {
      "Q790": "Haiti"
    },
    "index": 92
  },
  {
    "QuestionId": "WebQTest-852",
    "RawQuestion": "what province is toronto in ( 7 letters )?",
    "ProcessedQuestion": "what province is toronto in ( 7 letters )",
    "Parses": [
      {
        "ParseId": "WebQTest-852.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h7h6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h7h6 ns:base.biblioness.bibs_location.state ?x .\n}\n",
        "PotentialTopicEntityMention": "toronto",
        "TopicEntityName": "Toronto",
        "TopicEntityMid": "m.0h7h6",
        "InferentialChain": [
          "base.biblioness.bibs_location.state"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kr_",
            "EntityName": "Ontario"
          }
        ]
      },
      {
        "ParseId": "WebQTest-852.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h7h6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h7h6 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.01nm .\n}\n",
        "PotentialTopicEntityMention": "toronto",
        "TopicEntityName": "Toronto",
        "TopicEntityMid": "m.0h7h6",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01nm",
            "EntityName": "Canadian Province",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kr_",
            "EntityName": "Ontario"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0h7h6": "Toronto"
    },
    "qid_topic_entity": {
      "Q172": "Toronto"
    },
    "index": 93
  },
  {
    "QuestionId": "WebQTest-1634",
    "RawQuestion": "who does peter griffin voice?",
    "ProcessedQuestion": "who does peter griffin voice",
    "Parses": [
      {
        "ParseId": "WebQTest-1634.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03n6jv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03n6jv ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.special_performance_type ns:m.02nsjvf .\n}\n",
        "PotentialTopicEntityMention": "peter griffin",
        "TopicEntityName": "Peter Griffin",
        "TopicEntityMid": "m.03n6jv",
        "InferentialChain": [
          "tv.tv_character.appeared_in_tv_program",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02nsjvf",
            "EntityName": "Voice",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.special_performance_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.021yw7",
            "EntityName": "Seth MacFarlane"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03n6jv": "Peter Griffin"
    },
    "qid_topic_entity": {
      "Q28465": "Peter Griffin"
    },
    "index": 94
  },
  {
    "QuestionId": "WebQTest-1915",
    "RawQuestion": "where did harry s truman go to school?",
    "ProcessedQuestion": "where did harry s truman go to school",
    "Parses": [
      {
        "ParseId": "WebQTest-1915.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09bg4l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09bg4l ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "harry s truman",
        "TopicEntityName": "Harry S. Truman",
        "TopicEntityMid": "m.09bg4l",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016vf7",
            "EntityName": "University of Missouri\u2013Kansas City"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064r775",
            "EntityName": "University of Missouri\u2013Kansas City School of Law"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bvjpw",
            "EntityName": "William Chrisman High School"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09bg4l": "Harry S. Truman"
    },
    "qid_topic_entity": {
      "Q11613": "Harry S. Truman"
    },
    "index": 95
  },
  {
    "QuestionId": "WebQTest-257",
    "RawQuestion": "who was the soviet leader during world war ii?",
    "ProcessedQuestion": "who was the soviet leader during world war ii",
    "Parses": [
      {
        "ParseId": "WebQTest-257.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05vz3zq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05vz3zq ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?x ns:military.military_person.participated_in_conflicts ns:m.081pw .\n}\n",
        "PotentialTopicEntityMention": "soviet",
        "TopicEntityName": "Soviet Union",
        "TopicEntityMid": "m.05vz3zq",
        "InferentialChain": [
          "government.governmental_jurisdiction.governing_officials",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.081pw",
            "EntityName": "World War II",
            "SourceNodeIndex": 1,
            "NodePredicate": "military.military_person.participated_in_conflicts",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bphp",
            "EntityName": "Nikita Khrushchev"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d8xy",
            "EntityName": "Leonid Brezhnev"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05vz3zq": "Soviet Union"
    },
    "qid_topic_entity": {
      "Q15180": "Soviet Union"
    },
    "index": 96
  },
  {
    "QuestionId": "WebQTest-633",
    "RawQuestion": "what is claire danes famous for?",
    "ProcessedQuestion": "what is claire danes famous for",
    "Parses": [
      {
        "ParseId": "WebQTest-633.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01gq0b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01gq0b ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "claire danes",
        "TopicEntityName": "Claire Danes",
        "TopicEntityMid": "m.01gq0b",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hrh1q",
            "EntityName": "Actor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gjzk",
            "EntityName": "Television producer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0np9r",
            "EntityName": "Voice Actor"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01gq0b": "Claire Danes"
    },
    "qid_topic_entity": {
      "Q867813": "Claire Danes"
    },
    "index": 97
  },
  {
    "QuestionId": "WebQTest-1004",
    "RawQuestion": "what movies did christopher plummer play in?",
    "ProcessedQuestion": "what movies did christopher plummer play in",
    "Parses": [
      {
        "ParseId": "WebQTest-1004.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ycbq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ycbq ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "christopher plummer",
        "TopicEntityName": "Christopher Plummer",
        "TopicEntityMid": "m.01ycbq",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010h352r",
            "EntityName": "Elsa & Fred"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011f26pr",
            "EntityName": "Remember"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011yth",
            "EntityName": "The Insider"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012wjtcf",
            "EntityName": "I Love N.Y."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015bpl",
            "EntityName": "Star Trek VI: The Undiscovered Country"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01jwxx",
            "EntityName": "Battle of Britain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01rwyq",
            "EntityName": "Malcolm X"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0224yq",
            "EntityName": "The Fall of the Roman Empire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0269yjk",
            "EntityName": "Little Gloria... Happy at Last"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026n9yk",
            "EntityName": "Money"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027c4mq",
            "EntityName": "Stage Struck"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027r7k",
            "EntityName": "Murder by Decree"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pgkdn",
            "EntityName": "Triple Cross"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q9_sn",
            "EntityName": "A Doll's House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qjg31",
            "EntityName": "Young Catherine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qqrpy",
            "EntityName": "Dolores Claiborne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qy2zv",
            "EntityName": "Lily in Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r79_h",
            "EntityName": "The Imaginarium of Doctor Parnassus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rn00y",
            "EntityName": "Up"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rn15c",
            "EntityName": "The Pyx"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02w0_2l",
            "EntityName": "Babes in Toyland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wz1ch",
            "EntityName": "Eyewitness"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x983k",
            "EntityName": "The Clown at Midnight"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02xkm8r",
            "EntityName": "Firehead"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z0nhq",
            "EntityName": "Nicholas Nickleby"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z0qgs",
            "EntityName": "9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z14lh",
            "EntityName": "American Tragedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z7v8z",
            "EntityName": "Hamlet at Elsinore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.032xx4",
            "EntityName": "Wolf"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.033srr",
            "EntityName": "National Treasure"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03grp9d",
            "EntityName": "Man in the Chair"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03hhtw_",
            "EntityName": "Lucky Break"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03jsdr",
            "EntityName": "Ararat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03mddt9",
            "EntityName": "Riel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03p_np",
            "EntityName": "Somewhere in Time"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03qj86j",
            "EntityName": "The Amateur"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03vp54",
            "EntityName": "An American Tail"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03y8bw0",
            "EntityName": "The Spiral Staircase"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03y96y8",
            "EntityName": "My Dog Tulip"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047myg9",
            "EntityName": "The Last Station"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.049mql",
            "EntityName": "Alexander"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f6hpg",
            "EntityName": "A Hazard of Hearts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04g14gk",
            "EntityName": "Conduct Unbecoming"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gm93",
            "EntityName": "Aces High"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j0834",
            "EntityName": "Already Dead"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j0f9m",
            "EntityName": "The Conspiracy of Fear"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j0ls5",
            "EntityName": "Liar's Edge"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j1_xc",
            "EntityName": "Blackheart"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j16jd",
            "EntityName": "Blizzard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j1j4g",
            "EntityName": "The Dinosaur Hunter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j27vd",
            "EntityName": "Prototype"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j2m2s",
            "EntityName": "The First Circle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jdgq",
            "EntityName": "Dracula 2000"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jh6fj",
            "EntityName": "Lock Up Your Daughters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jmkts",
            "EntityName": "Nobody Runs Forever"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04pmnt",
            "EntityName": "The New World"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04qgzk",
            "EntityName": "Dreamscape"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ynd_",
            "EntityName": "Cold Creek Manor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.051zdz6",
            "EntityName": "The Boss' Wife"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0520m52",
            "EntityName": "Wind Across the Everglades"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b5472",
            "EntityName": "Our Fathers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05f05n",
            "EntityName": "Inside Daisy Clover"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05r1bb",
            "EntityName": "The Return of the Pink Panther"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zqyzp",
            "EntityName": "When the Circus Came to Town"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zrzs1",
            "EntityName": "Shadow Dancing"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065qhp",
            "EntityName": "Rock-a-Doodle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065tqqx",
            "EntityName": "On Golden Pond"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.068__1",
            "EntityName": "The Night of the Generals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.069687",
            "EntityName": "Hanover Street"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06vggv",
            "EntityName": "Gandahar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06zk4vw",
            "EntityName": "The Man Who Planted Trees"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06zp5gf",
            "EntityName": "Secrets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07_7th",
            "EntityName": "Possessed"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.076xkps",
            "EntityName": "Priest"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.078sj4",
            "EntityName": "Syriana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.079f7l",
            "EntityName": "The Scarlet and the Black"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07dzb3",
            "EntityName": "Must Love Dogs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07j6w",
            "EntityName": "12 Monkeys"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.083fl",
            "EntityName": "Waterloo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.087623",
            "EntityName": "Where the Heart Is"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08fsq3",
            "EntityName": "Full Disclosure"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08xvx8",
            "EntityName": "Starcrash"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09db8r",
            "EntityName": "The Boy in Blue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m6kg",
            "EntityName": "A Beautiful Mind"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09nl36",
            "EntityName": "Inside Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09pyqc",
            "EntityName": "The Man Who Would Be King"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09v2wgp",
            "EntityName": "Winchell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b44shh",
            "EntityName": "Beginners"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b4gnw",
            "EntityName": "Dragnet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b753df",
            "EntityName": "Ordeal by Innocence"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b79dp9",
            "EntityName": "Impolite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b813t",
            "EntityName": "Vampire in Venice"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bbmkh",
            "EntityName": "The Lake House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bbr312",
            "EntityName": "Night Flight"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bbw1jk",
            "EntityName": "The Day That Shook the World"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bg1bn",
            "EntityName": "The Gospel of John"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhbwpw",
            "EntityName": "Heidi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bnqf7",
            "EntityName": "Madeline: Lost in Paris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bvpzw5",
            "EntityName": "Oedipus the King"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c3tmhs",
            "EntityName": "The Royal Hunt of the Sun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c5fq4",
            "EntityName": "Woman Wanted"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0chdsfl",
            "EntityName": "A Marriage: Georgia O'Keeffe and Alfred Stieglitz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cq7tx",
            "EntityName": "The Sound of Music"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crw6bn",
            "EntityName": "Four Minutes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crybp9",
            "EntityName": "Hidden Agenda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0czbcwb",
            "EntityName": "The Assignment"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d6mrfb",
            "EntityName": "Highpoint"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ddgbq3",
            "EntityName": "Souvenir"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0df1tr",
            "EntityName": "Harrison Bergeron"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dgq_kn",
            "EntityName": "The Girl with the Dragon Tattoo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dgr9sj",
            "EntityName": "Five Good Years"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dnn1j",
            "EntityName": "The Silent Partner"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fc8w8",
            "EntityName": "Closing the Ring"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fdrns",
            "EntityName": "International Velvet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g0hgp",
            "EntityName": "Rumpelstiltskin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gh5_tc",
            "EntityName": "Silver Blaze"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gzqzl",
            "EntityName": "Emotional Arithmetic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hlpnhn",
            "EntityName": "Barrymore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jt2423",
            "EntityName": "Dark Descent of the Forgotten Empress"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k3ddp2",
            "EntityName": "Kali the Little Vampire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0njcp_c",
            "EntityName": "Skeletons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pmf3l5",
            "EntityName": "The Gnomes' Great Adventure"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0r8w0dm",
            "EntityName": "Imagine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rpfm51",
            "EntityName": "The Legend of Sarila"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rpt56y",
            "EntityName": "The Tempest"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0v_pgt2",
            "EntityName": "Hector and the Search for Happiness"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0x0gfps",
            "EntityName": "Caesar and Cleopatra"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0xnph63",
            "EntityName": "Muhammad Ali's Greatest Fight"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ztkpk6",
            "EntityName": "The Forger"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01ycbq": "Christopher Plummer"
    },
    "qid_topic_entity": {
      "Q190523": "Christopher Plummer"
    },
    "index": 98
  },
  {
    "QuestionId": "WebQTest-797",
    "RawQuestion": "what is the zip code for newark california?",
    "ProcessedQuestion": "what is the zip code for newark california",
    "Parses": [
      {
        "ParseId": "WebQTest-797.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0qx_6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0qx_6 ns:location.citytown.postal_codes ?x .\n}\n",
        "PotentialTopicEntityMention": "newark california",
        "TopicEntityName": "Newark",
        "TopicEntityMid": "m.0qx_6",
        "InferentialChain": [
          "location.citytown.postal_codes"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zjg6s",
            "EntityName": "94560"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0qx_6": "Newark"
    },
    "qid_topic_entity": {
      "Q850812": "Newark"
    },
    "index": 99
  }
]